[0m
Matching Modules
================

   #    Name                                                                       Disclosure Date  Rank    Check  Description
   -    ----                                                                       ---------------  ----    -----  -----------
   0    payload/aix/ppc/shell_bind_tcp                                                              normal  No     AIX Command Shell, Bind TCP Inline
   1    payload/aix/ppc/shell_find_port                                                             normal  No     AIX Command Shell, Find Port Inline
   2    payload/aix/ppc/shell_reverse_tcp                                                           normal  No     AIX Command Shell, Reverse TCP Inline
   3    payload/aix/ppc/shell_interact                                                              normal  No     AIX execve Shell for inetd
   4    payload/android/meterpreter_reverse_http                                                    normal  No     Android Meterpreter Shell, Reverse HTTP Inline
   5    payload/android/meterpreter_reverse_https                                                   normal  No     Android Meterpreter Shell, Reverse HTTPS Inline
   6    payload/android/meterpreter_reverse_tcp                                                     normal  No     Android Meterpreter Shell, Reverse TCP Inline
   7    payload/android/meterpreter/reverse_http                                                    normal  No     Android Meterpreter, Android Reverse HTTP Stager
   8    payload/android/meterpreter/reverse_https                                                   normal  No     Android Meterpreter, Android Reverse HTTPS Stager
   9    payload/android/meterpreter/reverse_tcp                                                     normal  No     Android Meterpreter, Android Reverse TCP Stager
   10   payload/osx/armle/shell_bind_tcp                                                            normal  No     Apple iOS Command Shell, Bind TCP Inline
   11   payload/osx/armle/shell_reverse_tcp                                                         normal  No     Apple iOS Command Shell, Reverse TCP Inline
   12   payload/apple_ios/aarch64/shell_reverse_tcp                                                 normal  No     Apple iOS aarch64 Command Shell, Reverse TCP Inline
   13   payload/osx/armle/vibrate                                                                   normal  No     Apple iOS iPhone Vibrate
   14   payload/apple_ios/aarch64/meterpreter_reverse_http                                          normal  No     Apple_iOS Meterpreter, Reverse HTTP Inline
   15   payload/apple_ios/armle/meterpreter_reverse_http                                            normal  No     Apple_iOS Meterpreter, Reverse HTTP Inline
   16   payload/apple_ios/aarch64/meterpreter_reverse_https                                         normal  No     Apple_iOS Meterpreter, Reverse HTTPS Inline
   17   payload/apple_ios/armle/meterpreter_reverse_https                                           normal  No     Apple_iOS Meterpreter, Reverse HTTPS Inline
   18   payload/apple_ios/aarch64/meterpreter_reverse_tcp                                           normal  No     Apple_iOS Meterpreter, Reverse TCP Inline
   19   payload/apple_ios/armle/meterpreter_reverse_tcp                                             normal  No     Apple_iOS Meterpreter, Reverse TCP Inline
   20   payload/multi/meterpreter/reverse_http                                                      normal  No     Architecture-Independent Meterpreter Stage, Reverse HTTP Stager (Multiple Architectures)
   21   payload/multi/meterpreter/reverse_https                                                     normal  No     Architecture-Independent Meterpreter Stage, Reverse HTTPS Stager (Multiple Architectures)
   22   payload/bsd/sparc/shell_bind_tcp                                                            normal  No     BSD Command Shell, Bind TCP Inline
   23   payload/bsd/x86/shell_bind_tcp                                                              normal  No     BSD Command Shell, Bind TCP Inline
   24   payload/bsd/x86/shell_bind_tcp_ipv6                                                         normal  No     BSD Command Shell, Bind TCP Inline (IPv6)
   25   payload/bsd/x86/shell/bind_tcp                                                              normal  No     BSD Command Shell, Bind TCP Stager
   26   payload/bsd/x86/shell/bind_ipv6_tcp                                                         normal  No     BSD Command Shell, Bind TCP Stager (IPv6)
   27   payload/bsd/x86/shell_find_port                                                             normal  No     BSD Command Shell, Find Port Inline
   28   payload/bsd/x86/shell_find_tag                                                              normal  No     BSD Command Shell, Find Tag Inline
   29   payload/bsd/x86/shell/find_tag                                                              normal  No     BSD Command Shell, Find Tag Stager
   30   payload/bsd/sparc/shell_reverse_tcp                                                         normal  No     BSD Command Shell, Reverse TCP Inline
   31   payload/bsd/vax/shell_reverse_tcp                                                           normal  No     BSD Command Shell, Reverse TCP Inline
   32   payload/bsd/x86/shell_reverse_tcp                                                           normal  No     BSD Command Shell, Reverse TCP Inline
   33   payload/bsd/x86/shell_reverse_tcp_ipv6                                                      normal  No     BSD Command Shell, Reverse TCP Inline (IPv6)
   34   payload/bsd/x86/shell/reverse_tcp                                                           normal  No     BSD Command Shell, Reverse TCP Stager
   35   payload/bsd/x86/shell/reverse_ipv6_tcp                                                      normal  No     BSD Command Shell, Reverse TCP Stager (IPv6)
   36   payload/bsd/x86/exec                                                                        normal  No     BSD Execute Command
   37   payload/bsd/x64/shell_bind_tcp_small                                                        normal  No     BSD x64 Command Shell, Bind TCP Inline
   38   payload/bsd/x64/shell_bind_ipv6_tcp                                                         normal  No     BSD x64 Command Shell, Bind TCP Inline (IPv6)
   39   payload/bsd/x64/shell_reverse_tcp_small                                                     normal  No     BSD x64 Command Shell, Reverse TCP Inline
   40   payload/bsd/x64/shell_reverse_ipv6_tcp                                                      normal  No     BSD x64 Command Shell, Reverse TCP Inline (IPv6)
   41   payload/bsd/x64/exec                                                                        normal  No     BSD x64 Execute Command
   42   payload/bsd/x64/shell_bind_tcp                                                              normal  No     BSD x64 Shell Bind TCP
   43   payload/bsd/x64/shell_reverse_tcp                                                           normal  No     BSD x64 Shell Reverse TCP
   44   payload/bsdi/x86/shell_bind_tcp                                                             normal  No     BSDi Command Shell, Bind TCP Inline
   45   payload/bsdi/x86/shell/bind_tcp                                                             normal  No     BSDi Command Shell, Bind TCP Stager
   46   payload/bsdi/x86/shell_find_port                                                            normal  No     BSDi Command Shell, Find Port Inline
   47   payload/bsdi/x86/shell_reverse_tcp                                                          normal  No     BSDi Command Shell, Reverse TCP Inline
   48   payload/bsdi/x86/shell/reverse_tcp                                                          normal  No     BSDi Command Shell, Reverse TCP Stager
   49   payload/android/shell/reverse_http                                                          normal  No     Command Shell, Android Reverse HTTP Stager
   50   payload/android/shell/reverse_https                                                         normal  No     Command Shell, Android Reverse HTTPS Stager
   51   payload/android/shell/reverse_tcp                                                           normal  No     Command Shell, Android Reverse TCP Stager
   52   payload/firefox/shell_bind_tcp                                                              normal  No     Command Shell, Bind TCP (via Firefox XPCOM script)
   53   payload/nodejs/shell_bind_tcp                                                               normal  No     Command Shell, Bind TCP (via nodejs)
   54   payload/python/shell_bind_tcp                                                               normal  No     Command Shell, Bind TCP (via python)
   55   payload/java/shell/bind_tcp                                                                 normal  No     Command Shell, Java Bind TCP Stager
   56   payload/java/shell/reverse_tcp                                                              normal  No     Command Shell, Java Reverse TCP Stager
   57   payload/firefox/shell_reverse_tcp                                                           normal  No     Command Shell, Reverse TCP (via Firefox XPCOM script)
   58   payload/nodejs/shell_reverse_tcp                                                            normal  No     Command Shell, Reverse TCP (via nodejs)
   59   payload/python/shell_reverse_tcp                                                            normal  No     Command Shell, Reverse TCP (via python)
   60   payload/nodejs/shell_reverse_tcp_ssl                                                        normal  No     Command Shell, Reverse TCP SSL (via nodejs)
   61   payload/python/shell_reverse_tcp_ssl                                                        normal  No     Command Shell, Reverse TCP SSL (via python)
   62   payload/python/shell_reverse_udp                                                            normal  No     Command Shell, Reverse UDP (via python)
   63   payload/generic/custom                                                                      normal  No     Custom Payload
   64   payload/windows/dns_txt_query_exec                                                          normal  No     DNS TXT Record Payload Download and Execution
   65   payload/firefox/exec                                                                        normal  No     Firefox XPCOM Execute Command
   66   payload/bsd/x86/metsvc_bind_tcp                                                             normal  No     FreeBSD Meterpreter Service, Bind TCP
   67   payload/bsd/x86/metsvc_reverse_tcp                                                          normal  No     FreeBSD Meterpreter Service, Reverse TCP Inline
   68   payload/generic/shell_bind_tcp                                                              normal  No     Generic Command Shell, Bind TCP Inline
   69   payload/generic/shell_reverse_tcp                                                           normal  No     Generic Command Shell, Reverse TCP Inline
   70   payload/cmd/mainframe/generic_jcl                                                           normal  No     Generic JCL Test for Mainframe Exploits
   71   payload/generic/debug_trap                                                                  normal  No     Generic x86 Debug Trap
   72   payload/generic/tight_loop                                                                  normal  No     Generic x86 Tight Loop
   73   payload/generic/ssh/interact                                                                normal  No     Interact with Established SSH Connection
   74   payload/cmd/mainframe/apf_privesc_jcl                                                       normal  No     JCL to Escalate Privileges
   75   payload/java/shell_reverse_tcp                                                              normal  No     Java Command Shell, Reverse TCP Inline
   76   payload/java/jsp_shell_bind_tcp                                                             normal  No     Java JSP Command Shell, Bind TCP Inline
   77   payload/java/jsp_shell_reverse_tcp                                                          normal  No     Java JSP Command Shell, Reverse TCP Inline
   78   payload/java/meterpreter/bind_tcp                                                           normal  No     Java Meterpreter, Java Bind TCP Stager
   79   payload/java/meterpreter/reverse_http                                                       normal  No     Java Meterpreter, Java Reverse HTTP Stager
   80   payload/java/meterpreter/reverse_https                                                      normal  No     Java Meterpreter, Java Reverse HTTPS Stager
   81   payload/java/meterpreter/reverse_tcp                                                        normal  No     Java Meterpreter, Java Reverse TCP Stager
   82   payload/linux/armbe/shell_bind_tcp                                                          normal  No     Linux ARM Big Endian Command Shell, Bind TCP Inline
   83   payload/linux/armle/adduser                                                                 normal  No     Linux Add User
   84   payload/linux/x86/adduser                                                                   normal  No     Linux Add User
   85   payload/linux/x86/chmod                                                                     normal  No     Linux Chmod
   86   payload/linux/x86/shell/bind_ipv6_tcp                                                       normal  No     Linux Command Shell, Bind IPv6 TCP Stager (Linux x86)
   87   payload/linux/x86/shell/bind_ipv6_tcp_uuid                                                  normal  No     Linux Command Shell, Bind IPv6 TCP Stager with UUID Support (Linux x86)
   88   payload/linux/mipsbe/shell_bind_tcp                                                         normal  No     Linux Command Shell, Bind TCP Inline
   89   payload/linux/mipsle/shell_bind_tcp                                                         normal  No     Linux Command Shell, Bind TCP Inline
   90   payload/linux/ppc/shell_bind_tcp                                                            normal  No     Linux Command Shell, Bind TCP Inline
   91   payload/linux/ppc64/shell_bind_tcp                                                          normal  No     Linux Command Shell, Bind TCP Inline
   92   payload/linux/x64/shell_bind_tcp                                                            normal  No     Linux Command Shell, Bind TCP Inline
   93   payload/linux/x86/shell_bind_tcp                                                            normal  No     Linux Command Shell, Bind TCP Inline
   94   payload/linux/x86/shell_bind_ipv6_tcp                                                       normal  No     Linux Command Shell, Bind TCP Inline (IPv6)
   95   payload/linux/x64/shell_bind_tcp_random_port                                                normal  No     Linux Command Shell, Bind TCP Random Port Inline
   96   payload/linux/x86/shell_bind_tcp_random_port                                                normal  No     Linux Command Shell, Bind TCP Random Port Inline
   97   payload/linux/x64/shell/bind_tcp                                                            normal  No     Linux Command Shell, Bind TCP Stager
   98   payload/linux/x86/shell/bind_nonx_tcp                                                       normal  No     Linux Command Shell, Bind TCP Stager
   99   payload/linux/x86/shell/bind_tcp                                                            normal  No     Linux Command Shell, Bind TCP Stager (Linux x86)
   100  payload/linux/x86/shell/bind_tcp_uuid                                                       normal  No     Linux Command Shell, Bind TCP Stager with UUID Support (Linux x86)
   101  payload/linux/ppc/shell_find_port                                                           normal  No     Linux Command Shell, Find Port Inline
   102  payload/linux/ppc64/shell_find_port                                                         normal  No     Linux Command Shell, Find Port Inline
   103  payload/linux/x64/shell_find_port                                                           normal  No     Linux Command Shell, Find Port Inline
   104  payload/linux/x86/shell_find_port                                                           normal  No     Linux Command Shell, Find Port Inline
   105  payload/linux/x86/shell_find_tag                                                            normal  No     Linux Command Shell, Find Tag Inline
   106  payload/linux/x86/shell/find_tag                                                            normal  No     Linux Command Shell, Find Tag Stager
   107  payload/linux/aarch64/shell_reverse_tcp                                                     normal  No     Linux Command Shell, Reverse TCP Inline
   108  payload/linux/armle/shell_bind_tcp                                                          normal  No     Linux Command Shell, Reverse TCP Inline
   109  payload/linux/armle/shell_reverse_tcp                                                       normal  No     Linux Command Shell, Reverse TCP Inline
   110  payload/linux/mipsbe/shell_reverse_tcp                                                      normal  No     Linux Command Shell, Reverse TCP Inline
   111  payload/linux/mipsle/shell_reverse_tcp                                                      normal  No     Linux Command Shell, Reverse TCP Inline
   112  payload/linux/ppc/shell_reverse_tcp                                                         normal  No     Linux Command Shell, Reverse TCP Inline
   113  payload/linux/ppc64/shell_reverse_tcp                                                       normal  No     Linux Command Shell, Reverse TCP Inline
   114  payload/linux/x64/shell_reverse_tcp                                                         normal  No     Linux Command Shell, Reverse TCP Inline
   115  payload/linux/x86/shell_reverse_tcp                                                         normal  No     Linux Command Shell, Reverse TCP Inline
   116  payload/linux/x86/shell_reverse_tcp_ipv6                                                    normal  No     Linux Command Shell, Reverse TCP Inline (IPv6)
   117  payload/linux/mipsbe/shell/reverse_tcp                                                      normal  No     Linux Command Shell, Reverse TCP Stager
   118  payload/linux/mipsle/shell/reverse_tcp                                                      normal  No     Linux Command Shell, Reverse TCP Stager
   119  payload/linux/x64/shell/reverse_tcp                                                         normal  No     Linux Command Shell, Reverse TCP Stager
   120  payload/linux/x86/shell/reverse_nonx_tcp                                                    normal  No     Linux Command Shell, Reverse TCP Stager
   121  payload/linux/x86/shell/reverse_tcp                                                         normal  No     Linux Command Shell, Reverse TCP Stager
   122  payload/linux/x86/shell/reverse_tcp_uuid                                                    normal  No     Linux Command Shell, Reverse TCP Stager
   123  payload/linux/x86/shell/reverse_ipv6_tcp                                                    normal  No     Linux Command Shell, Reverse TCP Stager (IPv6)
   124  payload/linux/armle/exec                                                                    normal  No     Linux Execute Command
   125  payload/linux/mipsbe/exec                                                                   normal  No     Linux Execute Command
   126  payload/linux/mipsle/exec                                                                   normal  No     Linux Execute Command
   127  payload/linux/x64/exec                                                                      normal  No     Linux Execute Command
   128  payload/linux/x86/exec                                                                      normal  No     Linux Execute Command
   129  payload/linux/x86/metsvc_bind_tcp                                                           normal  No     Linux Meterpreter Service, Bind TCP
   130  payload/linux/x86/metsvc_reverse_tcp                                                        normal  No     Linux Meterpreter Service, Reverse TCP Inline
   131  payload/linux/armle/meterpreter/bind_tcp                                                    normal  No     Linux Meterpreter, Bind TCP Stager
   132  payload/linux/aarch64/meterpreter_reverse_http                                              normal  No     Linux Meterpreter, Reverse HTTP Inline
   133  payload/linux/armbe/meterpreter_reverse_http                                                normal  No     Linux Meterpreter, Reverse HTTP Inline
   134  payload/linux/armle/meterpreter_reverse_http                                                normal  No     Linux Meterpreter, Reverse HTTP Inline
   135  payload/linux/mips64/meterpreter_reverse_http                                               normal  No     Linux Meterpreter, Reverse HTTP Inline
   136  payload/linux/mipsbe/meterpreter_reverse_http                                               normal  No     Linux Meterpreter, Reverse HTTP Inline
   137  payload/linux/mipsle/meterpreter_reverse_http                                               normal  No     Linux Meterpreter, Reverse HTTP Inline
   138  payload/linux/ppc/meterpreter_reverse_http                                                  normal  No     Linux Meterpreter, Reverse HTTP Inline
   139  payload/linux/ppc64le/meterpreter_reverse_http                                              normal  No     Linux Meterpreter, Reverse HTTP Inline
   140  payload/linux/ppce500v2/meterpreter_reverse_http                                            normal  No     Linux Meterpreter, Reverse HTTP Inline
   141  payload/linux/x64/meterpreter_reverse_http                                                  normal  No     Linux Meterpreter, Reverse HTTP Inline
   142  payload/linux/x86/meterpreter_reverse_http                                                  normal  No     Linux Meterpreter, Reverse HTTP Inline
   143  payload/linux/zarch/meterpreter_reverse_http                                                normal  No     Linux Meterpreter, Reverse HTTP Inline
   144  payload/linux/aarch64/meterpreter_reverse_https                                             normal  No     Linux Meterpreter, Reverse HTTPS Inline
   145  payload/linux/armbe/meterpreter_reverse_https                                               normal  No     Linux Meterpreter, Reverse HTTPS Inline
   146  payload/linux/armle/meterpreter_reverse_https                                               normal  No     Linux Meterpreter, Reverse HTTPS Inline
   147  payload/linux/mips64/meterpreter_reverse_https                                              normal  No     Linux Meterpreter, Reverse HTTPS Inline
   148  payload/linux/mipsbe/meterpreter_reverse_https                                              normal  No     Linux Meterpreter, Reverse HTTPS Inline
   149  payload/linux/mipsle/meterpreter_reverse_https                                              normal  No     Linux Meterpreter, Reverse HTTPS Inline
   150  payload/linux/ppc/meterpreter_reverse_https                                                 normal  No     Linux Meterpreter, Reverse HTTPS Inline
   151  payload/linux/ppc64le/meterpreter_reverse_https                                             normal  No     Linux Meterpreter, Reverse HTTPS Inline
   152  payload/linux/ppce500v2/meterpreter_reverse_https                                           normal  No     Linux Meterpreter, Reverse HTTPS Inline
   153  payload/linux/x64/meterpreter_reverse_https                                                 normal  No     Linux Meterpreter, Reverse HTTPS Inline
   154  payload/linux/x86/meterpreter_reverse_https                                                 normal  No     Linux Meterpreter, Reverse HTTPS Inline
   155  payload/linux/zarch/meterpreter_reverse_https                                               normal  No     Linux Meterpreter, Reverse HTTPS Inline
   156  payload/linux/aarch64/meterpreter_reverse_tcp                                               normal  No     Linux Meterpreter, Reverse TCP Inline
   157  payload/linux/armbe/meterpreter_reverse_tcp                                                 normal  No     Linux Meterpreter, Reverse TCP Inline
   158  payload/linux/armle/meterpreter_reverse_tcp                                                 normal  No     Linux Meterpreter, Reverse TCP Inline
   159  payload/linux/mips64/meterpreter_reverse_tcp                                                normal  No     Linux Meterpreter, Reverse TCP Inline
   160  payload/linux/mipsbe/meterpreter_reverse_tcp                                                normal  No     Linux Meterpreter, Reverse TCP Inline
   161  payload/linux/mipsle/meterpreter_reverse_tcp                                                normal  No     Linux Meterpreter, Reverse TCP Inline
   162  payload/linux/ppc/meterpreter_reverse_tcp                                                   normal  No     Linux Meterpreter, Reverse TCP Inline
   163  payload/linux/ppc64le/meterpreter_reverse_tcp                                               normal  No     Linux Meterpreter, Reverse TCP Inline
   164  payload/linux/ppce500v2/meterpreter_reverse_tcp                                             normal  No     Linux Meterpreter, Reverse TCP Inline
   165  payload/linux/x64/meterpreter_reverse_tcp                                                   normal  No     Linux Meterpreter, Reverse TCP Inline
   166  payload/linux/x86/meterpreter_reverse_tcp                                                   normal  No     Linux Meterpreter, Reverse TCP Inline
   167  payload/linux/zarch/meterpreter_reverse_tcp                                                 normal  No     Linux Meterpreter, Reverse TCP Inline
   168  payload/linux/aarch64/meterpreter/reverse_tcp                                               normal  No     Linux Meterpreter, Reverse TCP Stager
   169  payload/linux/armle/meterpreter/reverse_tcp                                                 normal  No     Linux Meterpreter, Reverse TCP Stager
   170  payload/linux/mipsbe/meterpreter/reverse_tcp                                                normal  No     Linux Meterpreter, Reverse TCP Stager
   171  payload/linux/mipsle/meterpreter/reverse_tcp                                                normal  No     Linux Meterpreter, Reverse TCP Stager
   172  payload/linux/x64/meterpreter/bind_tcp                                                      normal  No     Linux Mettle x64, Bind TCP Stager
   173  payload/linux/x64/meterpreter/reverse_tcp                                                   normal  No     Linux Mettle x64, Reverse TCP Stager
   174  payload/linux/x86/meterpreter/bind_ipv6_tcp                                                 normal  No     Linux Mettle x86, Bind IPv6 TCP Stager (Linux x86)
   175  payload/linux/x86/meterpreter/bind_ipv6_tcp_uuid                                            normal  No     Linux Mettle x86, Bind IPv6 TCP Stager with UUID Support (Linux x86)
   176  payload/linux/x86/meterpreter/bind_nonx_tcp                                                 normal  No     Linux Mettle x86, Bind TCP Stager
   177  payload/linux/x86/meterpreter/bind_tcp                                                      normal  No     Linux Mettle x86, Bind TCP Stager (Linux x86)
   178  payload/linux/x86/meterpreter/bind_tcp_uuid                                                 normal  No     Linux Mettle x86, Bind TCP Stager with UUID Support (Linux x86)
   179  payload/linux/x86/meterpreter/find_tag                                                      normal  No     Linux Mettle x86, Find Tag Stager
   180  payload/linux/x86/meterpreter/reverse_nonx_tcp                                              normal  No     Linux Mettle x86, Reverse TCP Stager
   181  payload/linux/x86/meterpreter/reverse_tcp                                                   normal  No     Linux Mettle x86, Reverse TCP Stager
   182  payload/linux/x86/meterpreter/reverse_tcp_uuid                                              normal  No     Linux Mettle x86, Reverse TCP Stager
   183  payload/linux/x86/meterpreter/reverse_ipv6_tcp                                              normal  No     Linux Mettle x86, Reverse TCP Stager (IPv6)
   184  payload/linux/x86/read_file                                                                 normal  No     Linux Read File
   185  payload/linux/mipsbe/reboot                                                                 normal  No     Linux Reboot
   186  payload/linux/mipsle/reboot                                                                 normal  No     Linux Reboot
   187  payload/linux/armle/shell/bind_tcp                                                          normal  No     Linux dup2 Command Shell, Bind TCP Stager
   188  payload/linux/aarch64/shell/reverse_tcp                                                     normal  No     Linux dup2 Command Shell, Reverse TCP Stager
   189  payload/linux/armle/shell/reverse_tcp                                                       normal  No     Linux dup2 Command Shell, Reverse TCP Stager
   190  payload/linux/x64/shell_bind_ipv6_tcp                                                       normal  No     Linux x64 Command Shell, Bind TCP Inline (IPv6)
   191  payload/linux/x64/shell_reverse_ipv6_tcp                                                    normal  No     Linux x64 Command Shell, Reverse TCP Inline (IPv6)
   192  payload/linux/x64/pingback_bind_tcp                                                         normal  No     Linux x64 Pingback, Bind TCP Inline
   193  payload/linux/x64/pingback_reverse_tcp                                                      normal  No     Linux x64 Pingback, Reverse TCP Inline
   194  payload/osx/x86/bundleinject/bind_tcp                                                       normal  No     Mac OS X Inject Mach-O Bundle, Bind TCP Stager
   195  payload/osx/x86/bundleinject/reverse_tcp                                                    normal  No     Mac OS X Inject Mach-O Bundle, Reverse TCP Stager
   196  payload/osx/x86/isight/bind_tcp                                                             normal  No     Mac OS X x86 iSight Photo Capture, Bind TCP Stager
   197  payload/osx/x86/isight/reverse_tcp                                                          normal  No     Mac OS X x86 iSight Photo Capture, Reverse TCP Stager
   198  payload/netware/shell/reverse_tcp                                                           normal  No     NetWare Command Shell, Reverse TCP Stager
   199  payload/osx/x86/vforkshell_bind_tcp                                                         normal  No     OS X (vfork) Command Shell, Bind TCP Inline
   200  payload/osx/x86/vforkshell/bind_tcp                                                         normal  No     OS X (vfork) Command Shell, Bind TCP Stager
   201  payload/osx/x86/vforkshell_reverse_tcp                                                      normal  No     OS X (vfork) Command Shell, Reverse TCP Inline
   202  payload/osx/x86/vforkshell/reverse_tcp                                                      normal  No     OS X (vfork) Command Shell, Reverse TCP Stager
   203  payload/osx/ppc/shell_bind_tcp                                                              normal  No     OS X Command Shell, Bind TCP Inline
   204  payload/osx/x86/shell_bind_tcp                                                              normal  No     OS X Command Shell, Bind TCP Inline
   205  payload/osx/armle/shell/bind_tcp                                                            normal  No     OS X Command Shell, Bind TCP Stager
   206  payload/osx/ppc/shell/bind_tcp                                                              normal  No     OS X Command Shell, Bind TCP Stager
   207  payload/osx/x86/shell_find_port                                                             normal  No     OS X Command Shell, Find Port Inline
   208  payload/osx/ppc/shell/find_tag                                                              normal  No     OS X Command Shell, Find Tag Stager
   209  payload/osx/ppc/shell_reverse_tcp                                                           normal  No     OS X Command Shell, Reverse TCP Inline
   210  payload/osx/x86/shell_reverse_tcp                                                           normal  No     OS X Command Shell, Reverse TCP Inline
   211  payload/osx/armle/shell/reverse_tcp                                                         normal  No     OS X Command Shell, Reverse TCP Stager
   212  payload/osx/ppc/shell/reverse_tcp                                                           normal  No     OS X Command Shell, Reverse TCP Stager
   213  payload/osx/x86/exec                                                                        normal  No     OS X Execute Command
   214  payload/osx/armle/execute/bind_tcp                                                          normal  No     OS X Write and Execute Binary, Bind TCP Stager
   215  payload/osx/armle/execute/reverse_tcp                                                       normal  No     OS X Write and Execute Binary, Reverse TCP Stager
   216  payload/osx/x64/dupandexecve/bind_tcp                                                       normal  No     OS X dup2 Command Shell, Bind TCP Stager
   217  payload/osx/x64/dupandexecve/reverse_tcp                                                    normal  No     OS X dup2 Command Shell, Reverse TCP Stager
   218  payload/osx/x64/dupandexecve/reverse_tcp_uuid                                               normal  No     OS X dup2 Command Shell, Reverse TCP Stager with UUID Support (OSX x64)
   219  payload/osx/x64/exec                                                                        normal  No     OS X x64 Execute Command
   220  payload/osx/x64/shell_bind_tcp                                                              normal  No     OS X x64 Shell Bind TCP
   221  payload/osx/x64/shell_reverse_tcp                                                           normal  No     OS X x64 Shell Reverse TCP
   222  payload/osx/x64/say                                                                         normal  No     OS X x64 say Shellcode
   223  payload/osx/x64/shell_find_tag                                                              normal  No     OSX Command Shell, Find Tag Inline
   224  payload/osx/x64/meterpreter/bind_tcp                                                        normal  No     OSX Meterpreter, Bind TCP Stager
   225  payload/osx/x64/meterpreter_reverse_http                                                    normal  No     OSX Meterpreter, Reverse HTTP Inline
   226  payload/osx/x64/meterpreter_reverse_https                                                   normal  No     OSX Meterpreter, Reverse HTTPS Inline
   227  payload/osx/x64/meterpreter_reverse_tcp                                                     normal  No     OSX Meterpreter, Reverse TCP Inline
   228  payload/osx/x64/meterpreter/reverse_tcp                                                     normal  No     OSX Meterpreter, Reverse TCP Stager
   229  payload/osx/x64/meterpreter/reverse_tcp_uuid                                                normal  No     OSX Meterpreter, Reverse TCP Stager with UUID Support (OSX x64)
   230  payload/php/bind_php                                                                        normal  No     PHP Command Shell, Bind TCP (via PHP)
   231  payload/php/bind_perl                                                                       normal  No     PHP Command Shell, Bind TCP (via Perl)
   232  payload/php/bind_perl_ipv6                                                                  normal  No     PHP Command Shell, Bind TCP (via perl) IPv6
   233  payload/php/bind_php_ipv6                                                                   normal  No     PHP Command Shell, Bind TCP (via php) IPv6
   234  payload/php/shell_findsock                                                                  normal  No     PHP Command Shell, Find Sock
   235  payload/php/reverse_php                                                                     normal  No     PHP Command Shell, Reverse TCP (via PHP)
   236  payload/php/reverse_perl                                                                    normal  No     PHP Command, Double Reverse TCP Connection (via Perl)
   237  payload/php/download_exec                                                                   normal  No     PHP Executable Download and Execute
   238  payload/php/exec                                                                            normal  No     PHP Execute Command
   239  payload/php/meterpreter/bind_tcp                                                            normal  No     PHP Meterpreter, Bind TCP Stager
   240  payload/php/meterpreter/bind_tcp_ipv6                                                       normal  No     PHP Meterpreter, Bind TCP Stager IPv6
   241  payload/php/meterpreter/bind_tcp_ipv6_uuid                                                  normal  No     PHP Meterpreter, Bind TCP Stager IPv6 with UUID Support
   242  payload/php/meterpreter/bind_tcp_uuid                                                       normal  No     PHP Meterpreter, Bind TCP Stager with UUID Support
   243  payload/php/meterpreter/reverse_tcp                                                         normal  No     PHP Meterpreter, PHP Reverse TCP Stager
   244  payload/php/meterpreter/reverse_tcp_uuid                                                    normal  No     PHP Meterpreter, PHP Reverse TCP Stager
   245  payload/php/meterpreter_reverse_tcp                                                         normal  No     PHP Meterpreter, Reverse TCP Inline
   246  payload/cmd/windows/powershell/adduser                                                      normal  No     Powershell Exec
   247  payload/cmd/windows/powershell/exec                                                         normal  No     Powershell Exec
   248  payload/cmd/windows/powershell/format_all_drives                                            manual  No     Powershell Exec
   249  payload/cmd/windows/powershell/loadlibrary                                                  normal  No     Powershell Exec
   250  payload/cmd/windows/powershell/powershell_bind_tcp                                          normal  No     Powershell Exec
   251  payload/cmd/windows/powershell/powershell_reverse_tcp                                       normal  No     Powershell Exec
   252  payload/cmd/windows/powershell/powershell_reverse_tcp_ssl                                   normal  No     Powershell Exec
   253  payload/cmd/windows/powershell/speak_pwned                                                  normal  No     Powershell Exec
   254  payload/cmd/windows/powershell/x64/powershell_bind_tcp                                      normal  No     Powershell Exec
   255  payload/cmd/windows/powershell/x64/powershell_reverse_tcp                                   normal  No     Powershell Exec
   256  payload/cmd/windows/powershell/x64/powershell_reverse_tcp_ssl                               normal  No     Powershell Exec
   257  payload/cmd/windows/powershell/dllinject/bind_ipv6_tcp                                      normal  No     Powershell Exec, Bind IPv6 TCP Stager (Windows x86)
   258  payload/cmd/windows/powershell/meterpreter/bind_ipv6_tcp                                    normal  No     Powershell Exec, Bind IPv6 TCP Stager (Windows x86)
   259  payload/cmd/windows/powershell/patchupdllinject/bind_ipv6_tcp                               normal  No     Powershell Exec, Bind IPv6 TCP Stager (Windows x86)
   260  payload/cmd/windows/powershell/patchupmeterpreter/bind_ipv6_tcp                             normal  No     Powershell Exec, Bind IPv6 TCP Stager (Windows x86)
   261  payload/cmd/windows/powershell/peinject/bind_ipv6_tcp                                       normal  No     Powershell Exec, Bind IPv6 TCP Stager (Windows x86)
   262  payload/cmd/windows/powershell/vncinject/bind_ipv6_tcp                                      normal  No     Powershell Exec, Bind IPv6 TCP Stager (Windows x86)
   263  payload/cmd/windows/powershell/dllinject/bind_ipv6_tcp_uuid                                 normal  No     Powershell Exec, Bind IPv6 TCP Stager with UUID Support (Windows x86)
   264  payload/cmd/windows/powershell/meterpreter/bind_ipv6_tcp_uuid                               normal  No     Powershell Exec, Bind IPv6 TCP Stager with UUID Support (Windows x86)
   265  payload/cmd/windows/powershell/patchupdllinject/bind_ipv6_tcp_uuid                          normal  No     Powershell Exec, Bind IPv6 TCP Stager with UUID Support (Windows x86)
   266  payload/cmd/windows/powershell/patchupmeterpreter/bind_ipv6_tcp_uuid                        normal  No     Powershell Exec, Bind IPv6 TCP Stager with UUID Support (Windows x86)
   267  payload/cmd/windows/powershell/peinject/bind_ipv6_tcp_uuid                                  normal  No     Powershell Exec, Bind IPv6 TCP Stager with UUID Support (Windows x86)
   268  payload/cmd/windows/powershell/vncinject/bind_ipv6_tcp_uuid                                 normal  No     Powershell Exec, Bind IPv6 TCP Stager with UUID Support (Windows x86)
   269  payload/cmd/windows/powershell/dllinject/bind_nonx_tcp                                      normal  No     Powershell Exec, Bind TCP Stager (No NX or Win7)
   270  payload/cmd/windows/powershell/meterpreter/bind_nonx_tcp                                    normal  No     Powershell Exec, Bind TCP Stager (No NX or Win7)
   271  payload/cmd/windows/powershell/patchupdllinject/bind_nonx_tcp                               normal  No     Powershell Exec, Bind TCP Stager (No NX or Win7)
   272  payload/cmd/windows/powershell/patchupmeterpreter/bind_nonx_tcp                             normal  No     Powershell Exec, Bind TCP Stager (No NX or Win7)
   273  payload/cmd/windows/powershell/peinject/bind_nonx_tcp                                       normal  No     Powershell Exec, Bind TCP Stager (No NX or Win7)
   274  payload/cmd/windows/powershell/vncinject/bind_nonx_tcp                                      normal  No     Powershell Exec, Bind TCP Stager (No NX or Win7)
   275  payload/cmd/windows/powershell/dllinject/bind_tcp_rc4                                       normal  No     Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   276  payload/cmd/windows/powershell/meterpreter/bind_tcp_rc4                                     normal  No     Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   277  payload/cmd/windows/powershell/patchupdllinject/bind_tcp_rc4                                normal  No     Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   278  payload/cmd/windows/powershell/patchupmeterpreter/bind_tcp_rc4                              normal  No     Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   279  payload/cmd/windows/powershell/peinject/bind_tcp_rc4                                        normal  No     Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   280  payload/cmd/windows/powershell/vncinject/bind_tcp_rc4                                       normal  No     Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   281  payload/cmd/windows/powershell/x64/meterpreter/bind_tcp_rc4                                 normal  No     Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   282  payload/cmd/windows/powershell/x64/peinject/bind_tcp_rc4                                    normal  No     Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   283  payload/cmd/windows/powershell/x64/vncinject/bind_tcp_rc4                                   normal  No     Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   284  payload/cmd/windows/powershell/dllinject/bind_tcp                                           normal  No     Powershell Exec, Bind TCP Stager (Windows x86)
   285  payload/cmd/windows/powershell/meterpreter/bind_tcp                                         normal  No     Powershell Exec, Bind TCP Stager (Windows x86)
   286  payload/cmd/windows/powershell/patchupdllinject/bind_tcp                                    normal  No     Powershell Exec, Bind TCP Stager (Windows x86)
   287  payload/cmd/windows/powershell/patchupmeterpreter/bind_tcp                                  normal  No     Powershell Exec, Bind TCP Stager (Windows x86)
   288  payload/cmd/windows/powershell/peinject/bind_tcp                                            normal  No     Powershell Exec, Bind TCP Stager (Windows x86)
   289  payload/cmd/windows/powershell/vncinject/bind_tcp                                           normal  No     Powershell Exec, Bind TCP Stager (Windows x86)
   290  payload/cmd/windows/powershell/x64/meterpreter/bind_tcp_uuid                                normal  No     Powershell Exec, Bind TCP Stager with UUID Support (Windows x64)
   291  payload/cmd/windows/powershell/x64/peinject/bind_tcp_uuid                                   normal  No     Powershell Exec, Bind TCP Stager with UUID Support (Windows x64)
   292  payload/cmd/windows/powershell/x64/vncinject/bind_tcp_uuid                                  normal  No     Powershell Exec, Bind TCP Stager with UUID Support (Windows x64)
   293  payload/cmd/windows/powershell/dllinject/bind_tcp_uuid                                      normal  No     Powershell Exec, Bind TCP Stager with UUID Support (Windows x86)
   294  payload/cmd/windows/powershell/meterpreter/bind_tcp_uuid                                    normal  No     Powershell Exec, Bind TCP Stager with UUID Support (Windows x86)
   295  payload/cmd/windows/powershell/patchupdllinject/bind_tcp_uuid                               normal  No     Powershell Exec, Bind TCP Stager with UUID Support (Windows x86)
   296  payload/cmd/windows/powershell/patchupmeterpreter/bind_tcp_uuid                             normal  No     Powershell Exec, Bind TCP Stager with UUID Support (Windows x86)
   297  payload/cmd/windows/powershell/peinject/bind_tcp_uuid                                       normal  No     Powershell Exec, Bind TCP Stager with UUID Support (Windows x86)
   298  payload/cmd/windows/powershell/vncinject/bind_tcp_uuid                                      normal  No     Powershell Exec, Bind TCP Stager with UUID Support (Windows x86)
   299  payload/cmd/windows/powershell/dns_txt_query_exec                                           normal  No     Powershell Exec, DNS TXT Record Payload Download and Execution
   300  payload/cmd/windows/powershell/dllinject/find_tag                                           normal  No     Powershell Exec, Find Tag Ordinal Stager
   301  payload/cmd/windows/powershell/meterpreter/find_tag                                         normal  No     Powershell Exec, Find Tag Ordinal Stager
   302  payload/cmd/windows/powershell/patchupdllinject/find_tag                                    normal  No     Powershell Exec, Find Tag Ordinal Stager
   303  payload/cmd/windows/powershell/patchupmeterpreter/find_tag                                  normal  No     Powershell Exec, Find Tag Ordinal Stager
   304  payload/cmd/windows/powershell/peinject/find_tag                                            normal  No     Powershell Exec, Find Tag Ordinal Stager
   305  payload/cmd/windows/powershell/vncinject/find_tag                                           normal  No     Powershell Exec, Find Tag Ordinal Stager
   306  payload/cmd/windows/powershell/generic/debug_trap                                           normal  No     Powershell Exec, Generic x86 Debug Trap
   307  payload/cmd/windows/powershell/generic/tight_loop                                           normal  No     Powershell Exec, Generic x86 Tight Loop
   308  payload/cmd/windows/powershell/dllinject/bind_hidden_ipknock_tcp                            normal  No     Powershell Exec, Hidden Bind Ipknock TCP Stager
   309  payload/cmd/windows/powershell/meterpreter/bind_hidden_ipknock_tcp                          normal  No     Powershell Exec, Hidden Bind Ipknock TCP Stager
   310  payload/cmd/windows/powershell/patchupdllinject/bind_hidden_ipknock_tcp                     normal  No     Powershell Exec, Hidden Bind Ipknock TCP Stager
   311  payload/cmd/windows/powershell/patchupmeterpreter/bind_hidden_ipknock_tcp                   normal  No     Powershell Exec, Hidden Bind Ipknock TCP Stager
   312  payload/cmd/windows/powershell/peinject/bind_hidden_ipknock_tcp                             normal  No     Powershell Exec, Hidden Bind Ipknock TCP Stager
   313  payload/cmd/windows/powershell/vncinject/bind_hidden_ipknock_tcp                            normal  No     Powershell Exec, Hidden Bind Ipknock TCP Stager
   314  payload/cmd/windows/powershell/dllinject/bind_hidden_tcp                                    normal  No     Powershell Exec, Hidden Bind TCP Stager
   315  payload/cmd/windows/powershell/meterpreter/bind_hidden_tcp                                  normal  No     Powershell Exec, Hidden Bind TCP Stager
   316  payload/cmd/windows/powershell/patchupdllinject/bind_hidden_tcp                             normal  No     Powershell Exec, Hidden Bind TCP Stager
   317  payload/cmd/windows/powershell/patchupmeterpreter/bind_hidden_tcp                           normal  No     Powershell Exec, Hidden Bind TCP Stager
   318  payload/cmd/windows/powershell/peinject/bind_hidden_tcp                                     normal  No     Powershell Exec, Hidden Bind TCP Stager
   319  payload/cmd/windows/powershell/vncinject/bind_hidden_tcp                                    normal  No     Powershell Exec, Hidden Bind TCP Stager
   320  payload/cmd/windows/powershell/dllinject/reverse_tcp_allports                               normal  No     Powershell Exec, Reverse All-Port TCP Stager
   321  payload/cmd/windows/powershell/meterpreter/reverse_tcp_allports                             normal  No     Powershell Exec, Reverse All-Port TCP Stager
   322  payload/cmd/windows/powershell/patchupdllinject/reverse_tcp_allports                        normal  No     Powershell Exec, Reverse All-Port TCP Stager
   323  payload/cmd/windows/powershell/patchupmeterpreter/reverse_tcp_allports                      normal  No     Powershell Exec, Reverse All-Port TCP Stager
   324  payload/cmd/windows/powershell/peinject/reverse_tcp_allports                                normal  No     Powershell Exec, Reverse All-Port TCP Stager
   325  payload/cmd/windows/powershell/vncinject/reverse_tcp_allports                               normal  No     Powershell Exec, Reverse All-Port TCP Stager
   326  payload/cmd/windows/powershell/dllinject/reverse_http_proxy_pstore                          normal  No     Powershell Exec, Reverse HTTP Stager Proxy
   327  payload/cmd/windows/powershell/meterpreter/reverse_http_proxy_pstore                        normal  No     Powershell Exec, Reverse HTTP Stager Proxy
   328  payload/cmd/windows/powershell/vncinject/reverse_http_proxy_pstore                          normal  No     Powershell Exec, Reverse HTTP Stager Proxy
   329  payload/cmd/windows/powershell/meterpreter/reverse_https_proxy                              normal  No     Powershell Exec, Reverse HTTPS Stager with Support for Custom Proxy
   330  payload/cmd/windows/powershell/dllinject/reverse_hop_http                                   normal  No     Powershell Exec, Reverse Hop HTTP/HTTPS Stager
   331  payload/cmd/windows/powershell/meterpreter/reverse_hop_http                                 normal  No     Powershell Exec, Reverse Hop HTTP/HTTPS Stager
   332  payload/cmd/windows/powershell/vncinject/reverse_hop_http                                   normal  No     Powershell Exec, Reverse Hop HTTP/HTTPS Stager
   333  payload/cmd/windows/powershell/dllinject/reverse_ord_tcp                                    normal  No     Powershell Exec, Reverse Ordinal TCP Stager (No NX or Win7)
   334  payload/cmd/windows/powershell/meterpreter/reverse_ord_tcp                                  normal  No     Powershell Exec, Reverse Ordinal TCP Stager (No NX or Win7)
   335  payload/cmd/windows/powershell/patchupdllinject/reverse_ord_tcp                             normal  No     Powershell Exec, Reverse Ordinal TCP Stager (No NX or Win7)
   336  payload/cmd/windows/powershell/patchupmeterpreter/reverse_ord_tcp                           normal  No     Powershell Exec, Reverse Ordinal TCP Stager (No NX or Win7)
   337  payload/cmd/windows/powershell/peinject/reverse_ord_tcp                                     normal  No     Powershell Exec, Reverse Ordinal TCP Stager (No NX or Win7)
   338  payload/cmd/windows/powershell/vncinject/reverse_ord_tcp                                    normal  No     Powershell Exec, Reverse Ordinal TCP Stager (No NX or Win7)
   339  payload/cmd/windows/powershell/dllinject/reverse_tcp                                        normal  No     Powershell Exec, Reverse TCP Stager
   340  payload/cmd/windows/powershell/meterpreter/reverse_tcp                                      normal  No     Powershell Exec, Reverse TCP Stager
   341  payload/cmd/windows/powershell/patchupdllinject/reverse_tcp                                 normal  No     Powershell Exec, Reverse TCP Stager
   342  payload/cmd/windows/powershell/patchupmeterpreter/reverse_tcp                               normal  No     Powershell Exec, Reverse TCP Stager
   343  payload/cmd/windows/powershell/peinject/reverse_tcp                                         normal  No     Powershell Exec, Reverse TCP Stager
   344  payload/cmd/windows/powershell/vncinject/reverse_tcp                                        normal  No     Powershell Exec, Reverse TCP Stager
   345  payload/cmd/windows/powershell/dllinject/reverse_tcp_dns                                    normal  No     Powershell Exec, Reverse TCP Stager (DNS)
   346  payload/cmd/windows/powershell/meterpreter/reverse_tcp_dns                                  normal  No     Powershell Exec, Reverse TCP Stager (DNS)
   347  payload/cmd/windows/powershell/patchupdllinject/reverse_tcp_dns                             normal  No     Powershell Exec, Reverse TCP Stager (DNS)
   348  payload/cmd/windows/powershell/patchupmeterpreter/reverse_tcp_dns                           normal  No     Powershell Exec, Reverse TCP Stager (DNS)
   349  payload/cmd/windows/powershell/peinject/reverse_tcp_dns                                     normal  No     Powershell Exec, Reverse TCP Stager (DNS)
   350  payload/cmd/windows/powershell/vncinject/reverse_tcp_dns                                    normal  No     Powershell Exec, Reverse TCP Stager (DNS)
   351  payload/cmd/windows/powershell/dllinject/reverse_ipv6_tcp                                   normal  No     Powershell Exec, Reverse TCP Stager (IPv6)
   352  payload/cmd/windows/powershell/meterpreter/reverse_ipv6_tcp                                 normal  No     Powershell Exec, Reverse TCP Stager (IPv6)
   353  payload/cmd/windows/powershell/patchupdllinject/reverse_ipv6_tcp                            normal  No     Powershell Exec, Reverse TCP Stager (IPv6)
   354  payload/cmd/windows/powershell/patchupmeterpreter/reverse_ipv6_tcp                          normal  No     Powershell Exec, Reverse TCP Stager (IPv6)
   355  payload/cmd/windows/powershell/peinject/reverse_ipv6_tcp                                    normal  No     Powershell Exec, Reverse TCP Stager (IPv6)
   356  payload/cmd/windows/powershell/vncinject/reverse_ipv6_tcp                                   normal  No     Powershell Exec, Reverse TCP Stager (IPv6)
   357  payload/cmd/windows/powershell/dllinject/reverse_nonx_tcp                                   normal  No     Powershell Exec, Reverse TCP Stager (No NX or Win7)
   358  payload/cmd/windows/powershell/meterpreter/reverse_nonx_tcp                                 normal  No     Powershell Exec, Reverse TCP Stager (No NX or Win7)
   359  payload/cmd/windows/powershell/patchupdllinject/reverse_nonx_tcp                            normal  No     Powershell Exec, Reverse TCP Stager (No NX or Win7)
   360  payload/cmd/windows/powershell/patchupmeterpreter/reverse_nonx_tcp                          normal  No     Powershell Exec, Reverse TCP Stager (No NX or Win7)
   361  payload/cmd/windows/powershell/peinject/reverse_nonx_tcp                                    normal  No     Powershell Exec, Reverse TCP Stager (No NX or Win7)
   362  payload/cmd/windows/powershell/vncinject/reverse_nonx_tcp                                   normal  No     Powershell Exec, Reverse TCP Stager (No NX or Win7)
   363  payload/cmd/windows/powershell/dllinject/reverse_tcp_rc4_dns                                normal  No     Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   364  payload/cmd/windows/powershell/meterpreter/reverse_tcp_rc4_dns                              normal  No     Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   365  payload/cmd/windows/powershell/patchupdllinject/reverse_tcp_rc4_dns                         normal  No     Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   366  payload/cmd/windows/powershell/patchupmeterpreter/reverse_tcp_rc4_dns                       normal  No     Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   367  payload/cmd/windows/powershell/peinject/reverse_tcp_rc4_dns                                 normal  No     Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   368  payload/cmd/windows/powershell/vncinject/reverse_tcp_rc4_dns                                normal  No     Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   369  payload/cmd/windows/powershell/dllinject/reverse_tcp_rc4                                    normal  No     Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   370  payload/cmd/windows/powershell/meterpreter/reverse_tcp_rc4                                  normal  No     Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   371  payload/cmd/windows/powershell/patchupdllinject/reverse_tcp_rc4                             normal  No     Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   372  payload/cmd/windows/powershell/patchupmeterpreter/reverse_tcp_rc4                           normal  No     Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   373  payload/cmd/windows/powershell/peinject/reverse_tcp_rc4                                     normal  No     Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   374  payload/cmd/windows/powershell/vncinject/reverse_tcp_rc4                                    normal  No     Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   375  payload/cmd/windows/powershell/x64/meterpreter/reverse_tcp_rc4                              normal  No     Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   376  payload/cmd/windows/powershell/x64/peinject/reverse_tcp_rc4                                 normal  No     Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   377  payload/cmd/windows/powershell/x64/vncinject/reverse_tcp_rc4                                normal  No     Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   378  payload/cmd/windows/powershell/dllinject/reverse_tcp_uuid                                   normal  No     Powershell Exec, Reverse TCP Stager with UUID Support
   379  payload/cmd/windows/powershell/meterpreter/reverse_tcp_uuid                                 normal  No     Powershell Exec, Reverse TCP Stager with UUID Support
   380  payload/cmd/windows/powershell/patchupdllinject/reverse_tcp_uuid                            normal  No     Powershell Exec, Reverse TCP Stager with UUID Support
   381  payload/cmd/windows/powershell/patchupmeterpreter/reverse_tcp_uuid                          normal  No     Powershell Exec, Reverse TCP Stager with UUID Support
   382  payload/cmd/windows/powershell/peinject/reverse_tcp_uuid                                    normal  No     Powershell Exec, Reverse TCP Stager with UUID Support
   383  payload/cmd/windows/powershell/vncinject/reverse_tcp_uuid                                   normal  No     Powershell Exec, Reverse TCP Stager with UUID Support
   384  payload/cmd/windows/powershell/x64/meterpreter/reverse_tcp_uuid                             normal  No     Powershell Exec, Reverse TCP Stager with UUID Support (Windows x64)
   385  payload/cmd/windows/powershell/x64/peinject/reverse_tcp_uuid                                normal  No     Powershell Exec, Reverse TCP Stager with UUID Support (Windows x64)
   386  payload/cmd/windows/powershell/x64/vncinject/reverse_tcp_uuid                               normal  No     Powershell Exec, Reverse TCP Stager with UUID Support (Windows x64)
   387  payload/cmd/windows/powershell/shell/bind_ipv6_tcp                                          normal  No     Powershell Exec, Windows Command Shell, Bind IPv6 TCP Stager (Windows x86)
   388  payload/cmd/windows/powershell/shell/bind_ipv6_tcp_uuid                                     normal  No     Powershell Exec, Windows Command Shell, Bind IPv6 TCP Stager with UUID Support (Windows x86)
   389  payload/cmd/windows/powershell/shell_bind_tcp                                               normal  No     Powershell Exec, Windows Command Shell, Bind TCP Inline
   390  payload/cmd/windows/powershell/shell/bind_nonx_tcp                                          normal  No     Powershell Exec, Windows Command Shell, Bind TCP Stager (No NX or Win7)
   391  payload/cmd/windows/powershell/shell/bind_tcp_rc4                                           normal  No     Powershell Exec, Windows Command Shell, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   392  payload/cmd/windows/powershell/shell/bind_tcp                                               normal  No     Powershell Exec, Windows Command Shell, Bind TCP Stager (Windows x86)
   393  payload/cmd/windows/powershell/shell/bind_tcp_uuid                                          normal  No     Powershell Exec, Windows Command Shell, Bind TCP Stager with UUID Support (Windows x86)
   394  payload/cmd/windows/powershell/x64/encrypted_shell/reverse_tcp                              normal  No     Powershell Exec, Windows Command Shell, Encrypted Reverse TCP Stager
   395  payload/cmd/windows/powershell/shell/find_tag                                               normal  No     Powershell Exec, Windows Command Shell, Find Tag Ordinal Stager
   396  payload/cmd/windows/powershell/shell/bind_hidden_ipknock_tcp                                normal  No     Powershell Exec, Windows Command Shell, Hidden Bind Ipknock TCP Stager
   397  payload/cmd/windows/powershell/shell_hidden_bind_tcp                                        normal  No     Powershell Exec, Windows Command Shell, Hidden Bind TCP Inline
   398  payload/cmd/windows/powershell/shell/bind_hidden_tcp                                        normal  No     Powershell Exec, Windows Command Shell, Hidden Bind TCP Stager
   399  payload/cmd/windows/powershell/shell/reverse_tcp_allports                                   normal  No     Powershell Exec, Windows Command Shell, Reverse All-Port TCP Stager
   400  payload/cmd/windows/powershell/shell/reverse_ord_tcp                                        normal  No     Powershell Exec, Windows Command Shell, Reverse Ordinal TCP Stager (No NX or Win7)
   401  payload/cmd/windows/powershell/shell_reverse_tcp                                            normal  No     Powershell Exec, Windows Command Shell, Reverse TCP Inline
   402  payload/cmd/windows/powershell/shell/reverse_tcp                                            normal  No     Powershell Exec, Windows Command Shell, Reverse TCP Stager
   403  payload/cmd/windows/powershell/shell/reverse_tcp_dns                                        normal  No     Powershell Exec, Windows Command Shell, Reverse TCP Stager (DNS)
   404  payload/cmd/windows/powershell/shell/reverse_ipv6_tcp                                       normal  No     Powershell Exec, Windows Command Shell, Reverse TCP Stager (IPv6)
   405  payload/cmd/windows/powershell/shell/reverse_nonx_tcp                                       normal  No     Powershell Exec, Windows Command Shell, Reverse TCP Stager (No NX or Win7)
   406  payload/cmd/windows/powershell/shell/reverse_tcp_rc4_dns                                    normal  No     Powershell Exec, Windows Command Shell, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   407  payload/cmd/windows/powershell/shell/reverse_tcp_rc4                                        normal  No     Powershell Exec, Windows Command Shell, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   408  payload/cmd/windows/powershell/shell/reverse_tcp_uuid                                       normal  No     Powershell Exec, Windows Command Shell, Reverse TCP Stager with UUID Support
   409  payload/cmd/windows/powershell/shell/reverse_udp                                            normal  No     Powershell Exec, Windows Command Shell, Reverse UDP Stager with UUID Support
   410  payload/cmd/windows/powershell/shell/bind_named_pipe                                        normal  No     Powershell Exec, Windows Command Shell, Windows x86 Bind Named Pipe Stager
   411  payload/cmd/windows/powershell/shell_bind_tcp_xpfw                                          normal  No     Powershell Exec, Windows Disable Windows ICF, Command Shell, Bind TCP Inline
   412  payload/cmd/windows/powershell/download_exec                                                normal  No     Powershell Exec, Windows Executable Download (http,https,ftp) and Execute
   413  payload/cmd/windows/powershell/messagebox                                                   normal  No     Powershell Exec, Windows MessageBox
   414  payload/cmd/windows/powershell/x64/messagebox                                               normal  No     Powershell Exec, Windows MessageBox x64
   415  payload/cmd/windows/powershell/metsvc_bind_tcp                                              normal  No     Powershell Exec, Windows Meterpreter Service, Bind TCP
   416  payload/cmd/windows/powershell/metsvc_reverse_tcp                                           normal  No     Powershell Exec, Windows Meterpreter Service, Reverse TCP Inline
   417  payload/cmd/windows/powershell/dllinject/reverse_winhttp                                    normal  No     Powershell Exec, Windows Reverse HTTP Stager (winhttp)
   418  payload/cmd/windows/powershell/meterpreter/reverse_winhttp                                  normal  No     Powershell Exec, Windows Reverse HTTP Stager (winhttp)
   419  payload/cmd/windows/powershell/vncinject/reverse_winhttp                                    normal  No     Powershell Exec, Windows Reverse HTTP Stager (winhttp)
   420  payload/cmd/windows/powershell/dllinject/reverse_http                                       normal  No     Powershell Exec, Windows Reverse HTTP Stager (wininet)
   421  payload/cmd/windows/powershell/meterpreter/reverse_http                                     normal  No     Powershell Exec, Windows Reverse HTTP Stager (wininet)
   422  payload/cmd/windows/powershell/vncinject/reverse_http                                       normal  No     Powershell Exec, Windows Reverse HTTP Stager (wininet)
   423  payload/cmd/windows/powershell/meterpreter/reverse_winhttps                                 normal  No     Powershell Exec, Windows Reverse HTTPS Stager (winhttp)
   424  payload/cmd/windows/powershell/meterpreter/reverse_https                                    normal  No     Powershell Exec, Windows Reverse HTTPS Stager (wininet)
   425  payload/cmd/windows/powershell/upexec/bind_ipv6_tcp                                         normal  No     Powershell Exec, Windows Upload/Execute, Bind IPv6 TCP Stager (Windows x86)
   426  payload/cmd/windows/powershell/upexec/bind_ipv6_tcp_uuid                                    normal  No     Powershell Exec, Windows Upload/Execute, Bind IPv6 TCP Stager with UUID Support (Windows x86)
   427  payload/cmd/windows/powershell/upexec/bind_nonx_tcp                                         normal  No     Powershell Exec, Windows Upload/Execute, Bind TCP Stager (No NX or Win7)
   428  payload/cmd/windows/powershell/upexec/bind_tcp_rc4                                          normal  No     Powershell Exec, Windows Upload/Execute, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   429  payload/cmd/windows/powershell/upexec/bind_tcp                                              normal  No     Powershell Exec, Windows Upload/Execute, Bind TCP Stager (Windows x86)
   430  payload/cmd/windows/powershell/upexec/bind_tcp_uuid                                         normal  No     Powershell Exec, Windows Upload/Execute, Bind TCP Stager with UUID Support (Windows x86)
   431  payload/cmd/windows/powershell/upexec/find_tag                                              normal  No     Powershell Exec, Windows Upload/Execute, Find Tag Ordinal Stager
   432  payload/cmd/windows/powershell/upexec/bind_hidden_ipknock_tcp                               normal  No     Powershell Exec, Windows Upload/Execute, Hidden Bind Ipknock TCP Stager
   433  payload/cmd/windows/powershell/upexec/bind_hidden_tcp                                       normal  No     Powershell Exec, Windows Upload/Execute, Hidden Bind TCP Stager
   434  payload/cmd/windows/powershell/upexec/reverse_tcp_allports                                  normal  No     Powershell Exec, Windows Upload/Execute, Reverse All-Port TCP Stager
   435  payload/cmd/windows/powershell/upexec/reverse_ord_tcp                                       normal  No     Powershell Exec, Windows Upload/Execute, Reverse Ordinal TCP Stager (No NX or Win7)
   436  payload/cmd/windows/powershell/upexec/reverse_tcp                                           normal  No     Powershell Exec, Windows Upload/Execute, Reverse TCP Stager
   437  payload/cmd/windows/powershell/upexec/reverse_tcp_dns                                       normal  No     Powershell Exec, Windows Upload/Execute, Reverse TCP Stager (DNS)
   438  payload/cmd/windows/powershell/upexec/reverse_ipv6_tcp                                      normal  No     Powershell Exec, Windows Upload/Execute, Reverse TCP Stager (IPv6)
   439  payload/cmd/windows/powershell/upexec/reverse_nonx_tcp                                      normal  No     Powershell Exec, Windows Upload/Execute, Reverse TCP Stager (No NX or Win7)
   440  payload/cmd/windows/powershell/upexec/reverse_tcp_rc4_dns                                   normal  No     Powershell Exec, Windows Upload/Execute, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   441  payload/cmd/windows/powershell/upexec/reverse_tcp_rc4                                       normal  No     Powershell Exec, Windows Upload/Execute, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   442  payload/cmd/windows/powershell/upexec/reverse_tcp_uuid                                      normal  No     Powershell Exec, Windows Upload/Execute, Reverse TCP Stager with UUID Support
   443  payload/cmd/windows/powershell/upexec/reverse_udp                                           normal  No     Powershell Exec, Windows Upload/Execute, Reverse UDP Stager with UUID Support
   444  payload/cmd/windows/powershell/upexec/bind_named_pipe                                       normal  No     Powershell Exec, Windows Upload/Execute, Windows x86 Bind Named Pipe Stager
   445  payload/cmd/windows/powershell/custom/bind_ipv6_tcp                                         normal  No     Powershell Exec, Windows shellcode stage, Bind IPv6 TCP Stager (Windows x86)
   446  payload/cmd/windows/powershell/custom/bind_ipv6_tcp_uuid                                    normal  No     Powershell Exec, Windows shellcode stage, Bind IPv6 TCP Stager with UUID Support (Windows x86)
   447  payload/cmd/windows/powershell/custom/bind_nonx_tcp                                         normal  No     Powershell Exec, Windows shellcode stage, Bind TCP Stager (No NX or Win7)
   448  payload/cmd/windows/powershell/custom/bind_tcp_rc4                                          normal  No     Powershell Exec, Windows shellcode stage, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   449  payload/cmd/windows/powershell/x64/custom/bind_tcp_rc4                                      normal  No     Powershell Exec, Windows shellcode stage, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   450  payload/cmd/windows/powershell/custom/bind_tcp                                              normal  No     Powershell Exec, Windows shellcode stage, Bind TCP Stager (Windows x86)
   451  payload/cmd/windows/powershell/x64/custom/bind_tcp_uuid                                     normal  No     Powershell Exec, Windows shellcode stage, Bind TCP Stager with UUID Support (Windows x64)
   452  payload/cmd/windows/powershell/custom/bind_tcp_uuid                                         normal  No     Powershell Exec, Windows shellcode stage, Bind TCP Stager with UUID Support (Windows x86)
   453  payload/cmd/windows/powershell/custom/find_tag                                              normal  No     Powershell Exec, Windows shellcode stage, Find Tag Ordinal Stager
   454  payload/cmd/windows/powershell/custom/bind_hidden_ipknock_tcp                               normal  No     Powershell Exec, Windows shellcode stage, Hidden Bind Ipknock TCP Stager
   455  payload/cmd/windows/powershell/custom/bind_hidden_tcp                                       normal  No     Powershell Exec, Windows shellcode stage, Hidden Bind TCP Stager
   456  payload/cmd/windows/powershell/custom/reverse_tcp_allports                                  normal  No     Powershell Exec, Windows shellcode stage, Reverse All-Port TCP Stager
   457  payload/cmd/windows/powershell/custom/reverse_http_proxy_pstore                             normal  No     Powershell Exec, Windows shellcode stage, Reverse HTTP Stager Proxy
   458  payload/cmd/windows/powershell/custom/reverse_https_proxy                                   normal  No     Powershell Exec, Windows shellcode stage, Reverse HTTPS Stager with Support for Custom Proxy
   459  payload/cmd/windows/powershell/custom/reverse_hop_http                                      normal  No     Powershell Exec, Windows shellcode stage, Reverse Hop HTTP/HTTPS Stager
   460  payload/cmd/windows/powershell/custom/reverse_ord_tcp                                       normal  No     Powershell Exec, Windows shellcode stage, Reverse Ordinal TCP Stager (No NX or Win7)
   461  payload/cmd/windows/powershell/custom/reverse_tcp                                           normal  No     Powershell Exec, Windows shellcode stage, Reverse TCP Stager
   462  payload/cmd/windows/powershell/custom/reverse_tcp_dns                                       normal  No     Powershell Exec, Windows shellcode stage, Reverse TCP Stager (DNS)
   463  payload/cmd/windows/powershell/custom/reverse_ipv6_tcp                                      normal  No     Powershell Exec, Windows shellcode stage, Reverse TCP Stager (IPv6)
   464  payload/cmd/windows/powershell/custom/reverse_nonx_tcp                                      normal  No     Powershell Exec, Windows shellcode stage, Reverse TCP Stager (No NX or Win7)
   465  payload/cmd/windows/powershell/custom/reverse_tcp_rc4_dns                                   normal  No     Powershell Exec, Windows shellcode stage, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   466  payload/cmd/windows/powershell/custom/reverse_tcp_rc4                                       normal  No     Powershell Exec, Windows shellcode stage, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   467  payload/cmd/windows/powershell/x64/custom/reverse_tcp_rc4                                   normal  No     Powershell Exec, Windows shellcode stage, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   468  payload/cmd/windows/powershell/custom/reverse_tcp_uuid                                      normal  No     Powershell Exec, Windows shellcode stage, Reverse TCP Stager with UUID Support
   469  payload/cmd/windows/powershell/x64/custom/reverse_tcp_uuid                                  normal  No     Powershell Exec, Windows shellcode stage, Reverse TCP Stager with UUID Support (Windows x64)
   470  payload/cmd/windows/powershell/custom/reverse_udp                                           normal  No     Powershell Exec, Windows shellcode stage, Reverse UDP Stager with UUID Support
   471  payload/cmd/windows/powershell/custom/reverse_winhttp                                       normal  No     Powershell Exec, Windows shellcode stage, Windows Reverse HTTP Stager (winhttp)
   472  payload/cmd/windows/powershell/custom/reverse_http                                          normal  No     Powershell Exec, Windows shellcode stage, Windows Reverse HTTP Stager (wininet)
   473  payload/cmd/windows/powershell/custom/reverse_winhttps                                      normal  No     Powershell Exec, Windows shellcode stage, Windows Reverse HTTPS Stager (winhttp)
   474  payload/cmd/windows/powershell/custom/reverse_https                                         normal  No     Powershell Exec, Windows shellcode stage, Windows Reverse HTTPS Stager (wininet)
   475  payload/cmd/windows/powershell/x64/custom/bind_named_pipe                                   normal  No     Powershell Exec, Windows shellcode stage, Windows x64 Bind Named Pipe Stager
   476  payload/cmd/windows/powershell/x64/custom/bind_tcp                                          normal  No     Powershell Exec, Windows shellcode stage, Windows x64 Bind TCP Stager
   477  payload/cmd/windows/powershell/x64/custom/bind_ipv6_tcp                                     normal  No     Powershell Exec, Windows shellcode stage, Windows x64 IPv6 Bind TCP Stager
   478  payload/cmd/windows/powershell/x64/custom/bind_ipv6_tcp_uuid                                normal  No     Powershell Exec, Windows shellcode stage, Windows x64 IPv6 Bind TCP Stager with UUID Support
   479  payload/cmd/windows/powershell/x64/custom/reverse_winhttp                                   normal  No     Powershell Exec, Windows shellcode stage, Windows x64 Reverse HTTP Stager (winhttp)
   480  payload/cmd/windows/powershell/x64/custom/reverse_http                                      normal  No     Powershell Exec, Windows shellcode stage, Windows x64 Reverse HTTP Stager (wininet)
   481  payload/cmd/windows/powershell/x64/custom/reverse_https                                     normal  No     Powershell Exec, Windows shellcode stage, Windows x64 Reverse HTTP Stager (wininet)
   482  payload/cmd/windows/powershell/x64/custom/reverse_winhttps                                  normal  No     Powershell Exec, Windows shellcode stage, Windows x64 Reverse HTTPS Stager (winhttp)
   483  payload/cmd/windows/powershell/x64/custom/reverse_named_pipe                                normal  No     Powershell Exec, Windows shellcode stage, Windows x64 Reverse Named Pipe (SMB) Stager
   484  payload/cmd/windows/powershell/x64/custom/reverse_tcp                                       normal  No     Powershell Exec, Windows shellcode stage, Windows x64 Reverse TCP Stager
   485  payload/cmd/windows/powershell/custom/bind_named_pipe                                       normal  No     Powershell Exec, Windows shellcode stage, Windows x86 Bind Named Pipe Stager
   486  payload/cmd/windows/powershell/custom/reverse_named_pipe                                    normal  No     Powershell Exec, Windows shellcode stage, Windows x86 Reverse Named Pipe (SMB) Stager
   487  payload/cmd/windows/powershell/x64/meterpreter/bind_named_pipe                              normal  No     Powershell Exec, Windows x64 Bind Named Pipe Stager
   488  payload/cmd/windows/powershell/x64/peinject/bind_named_pipe                                 normal  No     Powershell Exec, Windows x64 Bind Named Pipe Stager
   489  payload/cmd/windows/powershell/x64/vncinject/bind_named_pipe                                normal  No     Powershell Exec, Windows x64 Bind Named Pipe Stager
   490  payload/cmd/windows/powershell/x64/meterpreter/bind_tcp                                     normal  No     Powershell Exec, Windows x64 Bind TCP Stager
   491  payload/cmd/windows/powershell/x64/peinject/bind_tcp                                        normal  No     Powershell Exec, Windows x64 Bind TCP Stager
   492  payload/cmd/windows/powershell/x64/vncinject/bind_tcp                                       normal  No     Powershell Exec, Windows x64 Bind TCP Stager
   493  payload/cmd/windows/powershell/x64/shell_bind_tcp                                           normal  No     Powershell Exec, Windows x64 Command Shell, Bind TCP Inline
   494  payload/cmd/windows/powershell/x64/shell/bind_tcp_rc4                                       normal  No     Powershell Exec, Windows x64 Command Shell, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   495  payload/cmd/windows/powershell/x64/shell/bind_tcp_uuid                                      normal  No     Powershell Exec, Windows x64 Command Shell, Bind TCP Stager with UUID Support (Windows x64)
   496  payload/cmd/windows/powershell/x64/shell_reverse_tcp                                        normal  No     Powershell Exec, Windows x64 Command Shell, Reverse TCP Inline
   497  payload/cmd/windows/powershell/x64/shell/reverse_tcp_rc4                                    normal  No     Powershell Exec, Windows x64 Command Shell, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   498  payload/cmd/windows/powershell/x64/shell/reverse_tcp_uuid                                   normal  No     Powershell Exec, Windows x64 Command Shell, Reverse TCP Stager with UUID Support (Windows x64)
   499  payload/cmd/windows/powershell/x64/shell/bind_named_pipe                                    normal  No     Powershell Exec, Windows x64 Command Shell, Windows x64 Bind Named Pipe Stager
   500  payload/cmd/windows/powershell/x64/shell/bind_tcp                                           normal  No     Powershell Exec, Windows x64 Command Shell, Windows x64 Bind TCP Stager
   501  payload/cmd/windows/powershell/x64/shell/bind_ipv6_tcp                                      normal  No     Powershell Exec, Windows x64 Command Shell, Windows x64 IPv6 Bind TCP Stager
   502  payload/cmd/windows/powershell/x64/shell/bind_ipv6_tcp_uuid                                 normal  No     Powershell Exec, Windows x64 Command Shell, Windows x64 IPv6 Bind TCP Stager with UUID Support
   503  payload/cmd/windows/powershell/x64/shell/reverse_tcp                                        normal  No     Powershell Exec, Windows x64 Command Shell, Windows x64 Reverse TCP Stager
   504  payload/cmd/windows/powershell/x64/exec                                                     normal  No     Powershell Exec, Windows x64 Execute Command
   505  payload/cmd/windows/powershell/x64/meterpreter/bind_ipv6_tcp                                normal  No     Powershell Exec, Windows x64 IPv6 Bind TCP Stager
   506  payload/cmd/windows/powershell/x64/peinject/bind_ipv6_tcp                                   normal  No     Powershell Exec, Windows x64 IPv6 Bind TCP Stager
   507  payload/cmd/windows/powershell/x64/vncinject/bind_ipv6_tcp                                  normal  No     Powershell Exec, Windows x64 IPv6 Bind TCP Stager
   508  payload/cmd/windows/powershell/x64/meterpreter/bind_ipv6_tcp_uuid                           normal  No     Powershell Exec, Windows x64 IPv6 Bind TCP Stager with UUID Support
   509  payload/cmd/windows/powershell/x64/peinject/bind_ipv6_tcp_uuid                              normal  No     Powershell Exec, Windows x64 IPv6 Bind TCP Stager with UUID Support
   510  payload/cmd/windows/powershell/x64/vncinject/bind_ipv6_tcp_uuid                             normal  No     Powershell Exec, Windows x64 IPv6 Bind TCP Stager with UUID Support
   511  payload/cmd/windows/powershell/x64/loadlibrary                                              normal  No     Powershell Exec, Windows x64 LoadLibrary Path
   512  payload/cmd/windows/powershell/x64/pingback_reverse_tcp                                     normal  No     Powershell Exec, Windows x64 Pingback, Reverse TCP Inline
   513  payload/cmd/windows/powershell/x64/meterpreter/reverse_winhttp                              normal  No     Powershell Exec, Windows x64 Reverse HTTP Stager (winhttp)
   514  payload/cmd/windows/powershell/x64/vncinject/reverse_winhttp                                normal  No     Powershell Exec, Windows x64 Reverse HTTP Stager (winhttp)
   515  payload/cmd/windows/powershell/x64/meterpreter/reverse_http                                 normal  No     Powershell Exec, Windows x64 Reverse HTTP Stager (wininet)
   516  payload/cmd/windows/powershell/x64/meterpreter/reverse_https                                normal  No     Powershell Exec, Windows x64 Reverse HTTP Stager (wininet)
   517  payload/cmd/windows/powershell/x64/vncinject/reverse_http                                   normal  No     Powershell Exec, Windows x64 Reverse HTTP Stager (wininet)
   518  payload/cmd/windows/powershell/x64/vncinject/reverse_https                                  normal  No     Powershell Exec, Windows x64 Reverse HTTP Stager (wininet)
   519  payload/cmd/windows/powershell/x64/meterpreter/reverse_winhttps                             normal  No     Powershell Exec, Windows x64 Reverse HTTPS Stager (winhttp)
   520  payload/cmd/windows/powershell/x64/vncinject/reverse_winhttps                               normal  No     Powershell Exec, Windows x64 Reverse HTTPS Stager (winhttp)
   521  payload/cmd/windows/powershell/x64/meterpreter/reverse_named_pipe                           normal  No     Powershell Exec, Windows x64 Reverse Named Pipe (SMB) Stager
   522  payload/cmd/windows/powershell/x64/peinject/reverse_named_pipe                              normal  No     Powershell Exec, Windows x64 Reverse Named Pipe (SMB) Stager
   523  payload/cmd/windows/powershell/x64/meterpreter/reverse_tcp                                  normal  No     Powershell Exec, Windows x64 Reverse TCP Stager
   524  payload/cmd/windows/powershell/x64/peinject/reverse_tcp                                     normal  No     Powershell Exec, Windows x64 Reverse TCP Stager
   525  payload/cmd/windows/powershell/x64/vncinject/reverse_tcp                                    normal  No     Powershell Exec, Windows x64 Reverse TCP Stager
   526  payload/cmd/windows/powershell/dllinject/bind_named_pipe                                    normal  No     Powershell Exec, Windows x86 Bind Named Pipe Stager
   527  payload/cmd/windows/powershell/meterpreter/bind_named_pipe                                  normal  No     Powershell Exec, Windows x86 Bind Named Pipe Stager
   528  payload/cmd/windows/powershell/patchupdllinject/bind_named_pipe                             normal  No     Powershell Exec, Windows x86 Bind Named Pipe Stager
   529  payload/cmd/windows/powershell/patchupmeterpreter/bind_named_pipe                           normal  No     Powershell Exec, Windows x86 Bind Named Pipe Stager
   530  payload/cmd/windows/powershell/peinject/bind_named_pipe                                     normal  No     Powershell Exec, Windows x86 Bind Named Pipe Stager
   531  payload/cmd/windows/powershell/vncinject/bind_named_pipe                                    normal  No     Powershell Exec, Windows x86 Bind Named Pipe Stager
   532  payload/cmd/windows/powershell/pingback_bind_tcp                                            normal  No     Powershell Exec, Windows x86 Pingback, Bind TCP Inline
   533  payload/cmd/windows/powershell/pingback_reverse_tcp                                         normal  No     Powershell Exec, Windows x86 Pingback, Reverse TCP Inline
   534  payload/cmd/windows/powershell/meterpreter/reverse_named_pipe                               normal  No     Powershell Exec, Windows x86 Reverse Named Pipe (SMB) Stager
   535  payload/cmd/windows/powershell/peinject/reverse_named_pipe                                  normal  No     Powershell Exec, Windows x86 Reverse Named Pipe (SMB) Stager
   536  payload/cmd/unix/python/shell_bind_tcp                                                      normal  No     Python Exec, Command Shell, Bind TCP (via python)
   537  payload/cmd/windows/python/shell_bind_tcp                                                   normal  No     Python Exec, Command Shell, Bind TCP (via python)
   538  payload/cmd/unix/python/shell_reverse_tcp                                                   normal  No     Python Exec, Command Shell, Reverse TCP (via python)
   539  payload/cmd/windows/python/shell_reverse_tcp                                                normal  No     Python Exec, Command Shell, Reverse TCP (via python)
   540  payload/cmd/unix/python/shell_reverse_tcp_ssl                                               normal  No     Python Exec, Command Shell, Reverse TCP SSL (via python)
   541  payload/cmd/windows/python/shell_reverse_tcp_ssl                                            normal  No     Python Exec, Command Shell, Reverse TCP SSL (via python)
   542  payload/cmd/unix/python/shell_reverse_udp                                                   normal  No     Python Exec, Command Shell, Reverse UDP (via python)
   543  payload/cmd/windows/python/shell_reverse_udp                                                normal  No     Python Exec, Command Shell, Reverse UDP (via python)
   544  payload/cmd/unix/python/meterpreter_bind_tcp                                                normal  No     Python Exec, Python Meterpreter Shell, Bind TCP Inline
   545  payload/cmd/windows/python/meterpreter_bind_tcp                                             normal  No     Python Exec, Python Meterpreter Shell, Bind TCP Inline
   546  payload/cmd/unix/python/meterpreter_reverse_http                                            normal  No     Python Exec, Python Meterpreter Shell, Reverse HTTP Inline
   547  payload/cmd/windows/python/meterpreter_reverse_http                                         normal  No     Python Exec, Python Meterpreter Shell, Reverse HTTP Inline
   548  payload/cmd/unix/python/meterpreter_reverse_https                                           normal  No     Python Exec, Python Meterpreter Shell, Reverse HTTPS Inline
   549  payload/cmd/windows/python/meterpreter_reverse_https                                        normal  No     Python Exec, Python Meterpreter Shell, Reverse HTTPS Inline
   550  payload/cmd/unix/python/meterpreter_reverse_tcp                                             normal  No     Python Exec, Python Meterpreter Shell, Reverse TCP Inline
   551  payload/cmd/windows/python/meterpreter_reverse_tcp                                          normal  No     Python Exec, Python Meterpreter Shell, Reverse TCP Inline
   552  payload/cmd/unix/python/meterpreter/bind_tcp                                                normal  No     Python Exec, Python Meterpreter, Python Bind TCP Stager
   553  payload/cmd/windows/python/meterpreter/bind_tcp                                             normal  No     Python Exec, Python Meterpreter, Python Bind TCP Stager
   554  payload/cmd/unix/python/meterpreter/bind_tcp_uuid                                           normal  No     Python Exec, Python Meterpreter, Python Bind TCP Stager with UUID Support
   555  payload/cmd/windows/python/meterpreter/bind_tcp_uuid                                        normal  No     Python Exec, Python Meterpreter, Python Bind TCP Stager with UUID Support
   556  payload/cmd/unix/python/meterpreter/reverse_http                                            normal  No     Python Exec, Python Meterpreter, Python Reverse HTTP Stager
   557  payload/cmd/windows/python/meterpreter/reverse_http                                         normal  No     Python Exec, Python Meterpreter, Python Reverse HTTP Stager
   558  payload/cmd/unix/python/meterpreter/reverse_https                                           normal  No     Python Exec, Python Meterpreter, Python Reverse HTTPS Stager
   559  payload/cmd/windows/python/meterpreter/reverse_https                                        normal  No     Python Exec, Python Meterpreter, Python Reverse HTTPS Stager
   560  payload/cmd/unix/python/meterpreter/reverse_tcp_ssl                                         normal  No     Python Exec, Python Meterpreter, Python Reverse TCP SSL Stager
   561  payload/cmd/windows/python/meterpreter/reverse_tcp_ssl                                      normal  No     Python Exec, Python Meterpreter, Python Reverse TCP SSL Stager
   562  payload/cmd/unix/python/meterpreter/reverse_tcp                                             normal  No     Python Exec, Python Meterpreter, Python Reverse TCP Stager
   563  payload/cmd/windows/python/meterpreter/reverse_tcp                                          normal  No     Python Exec, Python Meterpreter, Python Reverse TCP Stager
   564  payload/cmd/unix/python/meterpreter/reverse_tcp_uuid                                        normal  No     Python Exec, Python Meterpreter, Python Reverse TCP Stager with UUID Support
   565  payload/cmd/windows/python/meterpreter/reverse_tcp_uuid                                     normal  No     Python Exec, Python Meterpreter, Python Reverse TCP Stager with UUID Support
   566  payload/cmd/unix/python/pingback_bind_tcp                                                   normal  No     Python Exec, Python Pingback, Bind TCP (via python)
   567  payload/cmd/windows/python/pingback_bind_tcp                                                normal  No     Python Exec, Python Pingback, Bind TCP (via python)
   568  payload/cmd/unix/python/pingback_reverse_tcp                                                normal  No     Python Exec, Python Pingback, Reverse TCP (via python)
   569  payload/cmd/windows/python/pingback_reverse_tcp                                             normal  No     Python Exec, Python Pingback, Reverse TCP (via python)
   570  payload/python/meterpreter_bind_tcp                                                         normal  No     Python Meterpreter Shell, Bind TCP Inline
   571  payload/python/meterpreter_reverse_http                                                     normal  No     Python Meterpreter Shell, Reverse HTTP Inline
   572  payload/python/meterpreter_reverse_https                                                    normal  No     Python Meterpreter Shell, Reverse HTTPS Inline
   573  payload/python/meterpreter_reverse_tcp                                                      normal  No     Python Meterpreter Shell, Reverse TCP Inline
   574  payload/python/meterpreter/bind_tcp                                                         normal  No     Python Meterpreter, Python Bind TCP Stager
   575  payload/python/meterpreter/bind_tcp_uuid                                                    normal  No     Python Meterpreter, Python Bind TCP Stager with UUID Support
   576  payload/python/meterpreter/reverse_http                                                     normal  No     Python Meterpreter, Python Reverse HTTP Stager
   577  payload/python/meterpreter/reverse_https                                                    normal  No     Python Meterpreter, Python Reverse HTTPS Stager
   578  payload/python/meterpreter/reverse_tcp_ssl                                                  normal  No     Python Meterpreter, Python Reverse TCP SSL Stager
   579  payload/python/meterpreter/reverse_tcp                                                      normal  No     Python Meterpreter, Python Reverse TCP Stager
   580  payload/python/meterpreter/reverse_tcp_uuid                                                 normal  No     Python Meterpreter, Python Reverse TCP Stager with UUID Support
   581  payload/python/pingback_bind_tcp                                                            normal  No     Python Pingback, Bind TCP (via python)
   582  payload/python/pingback_reverse_tcp                                                         normal  No     Python Pingback, Reverse TCP (via python)
   583  payload/r/shell_bind_tcp                                                                    normal  No     R Command Shell, Bind TCP
   584  payload/r/shell_reverse_tcp                                                                 normal  No     R Command Shell, Reverse TCP
   585  payload/windows/dllinject/bind_ipv6_tcp                                                     normal  No     Reflective DLL Injection, Bind IPv6 TCP Stager (Windows x86)
   586  payload/windows/dllinject/bind_ipv6_tcp_uuid                                                normal  No     Reflective DLL Injection, Bind IPv6 TCP Stager with UUID Support (Windows x86)
   587  payload/windows/dllinject/bind_nonx_tcp                                                     normal  No     Reflective DLL Injection, Bind TCP Stager (No NX or Win7)
   588  payload/windows/dllinject/bind_tcp_rc4                                                      normal  No     Reflective DLL Injection, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   589  payload/windows/dllinject/bind_tcp                                                          normal  No     Reflective DLL Injection, Bind TCP Stager (Windows x86)
   590  payload/windows/dllinject/bind_tcp_uuid                                                     normal  No     Reflective DLL Injection, Bind TCP Stager with UUID Support (Windows x86)
   591  payload/windows/dllinject/find_tag                                                          normal  No     Reflective DLL Injection, Find Tag Ordinal Stager
   592  payload/windows/dllinject/bind_hidden_ipknock_tcp                                           normal  No     Reflective DLL Injection, Hidden Bind Ipknock TCP Stager
   593  payload/windows/dllinject/bind_hidden_tcp                                                   normal  No     Reflective DLL Injection, Hidden Bind TCP Stager
   594  payload/windows/dllinject/reverse_tcp_allports                                              normal  No     Reflective DLL Injection, Reverse All-Port TCP Stager
   595  payload/windows/dllinject/reverse_http_proxy_pstore                                         normal  No     Reflective DLL Injection, Reverse HTTP Stager Proxy
   596  payload/windows/dllinject/reverse_hop_http                                                  normal  No     Reflective DLL Injection, Reverse Hop HTTP/HTTPS Stager
   597  payload/windows/dllinject/reverse_ord_tcp                                                   normal  No     Reflective DLL Injection, Reverse Ordinal TCP Stager (No NX or Win7)
   598  payload/windows/dllinject/reverse_tcp                                                       normal  No     Reflective DLL Injection, Reverse TCP Stager
   599  payload/windows/dllinject/reverse_tcp_dns                                                   normal  No     Reflective DLL Injection, Reverse TCP Stager (DNS)
   600  payload/windows/dllinject/reverse_ipv6_tcp                                                  normal  No     Reflective DLL Injection, Reverse TCP Stager (IPv6)
   601  payload/windows/dllinject/reverse_nonx_tcp                                                  normal  No     Reflective DLL Injection, Reverse TCP Stager (No NX or Win7)
   602  payload/windows/dllinject/reverse_tcp_rc4_dns                                               normal  No     Reflective DLL Injection, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   603  payload/windows/dllinject/reverse_tcp_rc4                                                   normal  No     Reflective DLL Injection, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   604  payload/windows/dllinject/reverse_tcp_uuid                                                  normal  No     Reflective DLL Injection, Reverse TCP Stager with UUID Support
   605  payload/windows/dllinject/reverse_winhttp                                                   normal  No     Reflective DLL Injection, Windows Reverse HTTP Stager (winhttp)
   606  payload/windows/dllinject/reverse_http                                                      normal  No     Reflective DLL Injection, Windows Reverse HTTP Stager (wininet)
   607  payload/windows/dllinject/bind_named_pipe                                                   normal  No     Reflective DLL Injection, Windows x86 Bind Named Pipe Stager
   608  payload/ruby/shell_bind_tcp                                                                 normal  No     Ruby Command Shell, Bind TCP
   609  payload/ruby/shell_bind_tcp_ipv6                                                            normal  No     Ruby Command Shell, Bind TCP IPv6
   610  payload/ruby/shell_reverse_tcp                                                              normal  No     Ruby Command Shell, Reverse TCP
   611  payload/ruby/shell_reverse_tcp_ssl                                                          normal  No     Ruby Command Shell, Reverse TCP SSL
   612  payload/ruby/pingback_bind_tcp                                                              normal  No     Ruby Pingback, Bind TCP
   613  payload/ruby/pingback_reverse_tcp                                                           normal  No     Ruby Pingback, Reverse TCP
   614  payload/solaris/sparc/shell_bind_tcp                                                        normal  No     Solaris Command Shell, Bind TCP Inline
   615  payload/solaris/x86/shell_bind_tcp                                                          normal  No     Solaris Command Shell, Bind TCP Inline
   616  payload/solaris/sparc/shell_find_port                                                       normal  No     Solaris Command Shell, Find Port Inline
   617  payload/solaris/x86/shell_find_port                                                         normal  No     Solaris Command Shell, Find Port Inline
   618  payload/solaris/sparc/shell_reverse_tcp                                                     normal  No     Solaris Command Shell, Reverse TCP Inline
   619  payload/solaris/x86/shell_reverse_tcp                                                       normal  No     Solaris Command Shell, Reverse TCP Inline
   620  payload/cmd/unix/bind_inetd                                                                 normal  No     Unix Command Shell, Bind TCP (inetd)
   621  payload/cmd/unix/bind_stub                                                                  normal  No     Unix Command Shell, Bind TCP (stub)
   622  payload/cmd/unix/bind_awk                                                                   normal  No     Unix Command Shell, Bind TCP (via AWK)
   623  payload/cmd/unix/bind_busybox_telnetd                                                       normal  No     Unix Command Shell, Bind TCP (via BusyBox telnetd)
   624  payload/cmd/unix/bind_lua                                                                   normal  No     Unix Command Shell, Bind TCP (via Lua)
   625  payload/cmd/unix/bind_perl                                                                  normal  No     Unix Command Shell, Bind TCP (via Perl)
   626  payload/cmd/unix/bind_r                                                                     normal  No     Unix Command Shell, Bind TCP (via R)
   627  payload/cmd/unix/bind_ruby                                                                  normal  No     Unix Command Shell, Bind TCP (via Ruby)
   628  payload/cmd/unix/bind_ruby_ipv6                                                             normal  No     Unix Command Shell, Bind TCP (via Ruby) IPv6
   629  payload/cmd/unix/bind_zsh                                                                   normal  No     Unix Command Shell, Bind TCP (via Zsh)
   630  payload/cmd/unix/bind_jjs                                                                   normal  No     Unix Command Shell, Bind TCP (via jjs)
   631  payload/cmd/unix/bind_netcat_gaping                                                         normal  No     Unix Command Shell, Bind TCP (via netcat -e)
   632  payload/cmd/unix/bind_netcat_gaping_ipv6                                                    normal  No     Unix Command Shell, Bind TCP (via netcat -e) IPv6
   633  payload/cmd/unix/bind_netcat                                                                normal  No     Unix Command Shell, Bind TCP (via netcat)
   634  payload/cmd/unix/bind_nodejs                                                                normal  No     Unix Command Shell, Bind TCP (via nodejs)
   635  payload/cmd/unix/bind_perl_ipv6                                                             normal  No     Unix Command Shell, Bind TCP (via perl) IPv6
   636  payload/cmd/unix/bind_socat_udp                                                             normal  No     Unix Command Shell, Bind UDP (via socat)
   637  payload/cmd/unix/reverse                                                                    normal  No     Unix Command Shell, Double Reverse TCP (telnet)
   638  payload/cmd/unix/reverse_openssl                                                            normal  No     Unix Command Shell, Double Reverse TCP SSL (openssl)
   639  payload/cmd/unix/reverse_ssl_double_telnet                                                  normal  No     Unix Command Shell, Double Reverse TCP SSL (telnet)
   640  payload/cmd/unix/pingback_bind                                                              normal  No     Unix Command Shell, Pingback Bind TCP (via netcat)
   641  payload/cmd/unix/pingback_reverse                                                           normal  No     Unix Command Shell, Pingback Reverse TCP (via netcat)
   642  payload/cmd/unix/reverse_bash                                                               normal  No     Unix Command Shell, Reverse TCP (/dev/tcp)
   643  payload/cmd/unix/reverse_stub                                                               normal  No     Unix Command Shell, Reverse TCP (stub)
   644  payload/cmd/unix/reverse_awk                                                                normal  No     Unix Command Shell, Reverse TCP (via AWK)
   645  payload/cmd/unix/reverse_ksh                                                                normal  No     Unix Command Shell, Reverse TCP (via Ksh)
   646  payload/cmd/unix/reverse_lua                                                                normal  No     Unix Command Shell, Reverse TCP (via Lua)
   647  payload/cmd/unix/reverse_perl                                                               normal  No     Unix Command Shell, Reverse TCP (via Perl)
   648  payload/cmd/unix/reverse_python                                                             normal  No     Unix Command Shell, Reverse TCP (via Python)
   649  payload/cmd/unix/reverse_r                                                                  normal  No     Unix Command Shell, Reverse TCP (via R)
   650  payload/cmd/unix/reverse_ruby                                                               normal  No     Unix Command Shell, Reverse TCP (via Ruby)
   651  payload/cmd/unix/reverse_tclsh                                                              normal  No     Unix Command Shell, Reverse TCP (via Tclsh)
   652  payload/cmd/unix/reverse_zsh                                                                normal  No     Unix Command Shell, Reverse TCP (via Zsh)
   653  payload/cmd/unix/reverse_jjs                                                                normal  No     Unix Command Shell, Reverse TCP (via jjs)
   654  payload/cmd/unix/reverse_ncat_ssl                                                           normal  No     Unix Command Shell, Reverse TCP (via ncat)
   655  payload/cmd/unix/reverse_netcat_gaping                                                      normal  No     Unix Command Shell, Reverse TCP (via netcat -e)
   656  payload/cmd/unix/reverse_netcat                                                             normal  No     Unix Command Shell, Reverse TCP (via netcat)
   657  payload/cmd/unix/reverse_nodejs                                                             normal  No     Unix Command Shell, Reverse TCP (via nodejs)
   658  payload/cmd/unix/reverse_ssh                                                                normal  No     Unix Command Shell, Reverse TCP SSH
   659  payload/cmd/unix/reverse_bash_telnet_ssl                                                    normal  No     Unix Command Shell, Reverse TCP SSL (telnet)
   660  payload/cmd/unix/reverse_ruby_ssl                                                           normal  No     Unix Command Shell, Reverse TCP SSL (via Ruby)
   661  payload/cmd/unix/reverse_perl_ssl                                                           normal  No     Unix Command Shell, Reverse TCP SSL (via perl)
   662  payload/cmd/unix/reverse_php_ssl                                                            normal  No     Unix Command Shell, Reverse TCP SSL (via php)
   663  payload/cmd/unix/reverse_python_ssl                                                         normal  No     Unix Command Shell, Reverse TCP SSL (via python)
   664  payload/cmd/unix/reverse_bash_udp                                                           normal  No     Unix Command Shell, Reverse UDP (/dev/udp)
   665  payload/cmd/unix/reverse_socat_udp                                                          normal  No     Unix Command Shell, Reverse UDP (via socat)
   666  payload/cmd/unix/generic                                                                    normal  No     Unix Command, Generic Command Execution
   667  payload/cmd/unix/interact                                                                   normal  No     Unix Command, Interact with Established Connection
   668  payload/tty/unix/interact                                                                   normal  No     Unix TTY, Interact with Established Connection
   669  payload/windows/vncinject/bind_ipv6_tcp                                                     normal  No     VNC Server (Reflective Injection), Bind IPv6 TCP Stager (Windows x86)
   670  payload/windows/vncinject/bind_ipv6_tcp_uuid                                                normal  No     VNC Server (Reflective Injection), Bind IPv6 TCP Stager with UUID Support (Windows x86)
   671  payload/windows/vncinject/bind_nonx_tcp                                                     normal  No     VNC Server (Reflective Injection), Bind TCP Stager (No NX or Win7)
   672  payload/windows/vncinject/bind_tcp_rc4                                                      normal  No     VNC Server (Reflective Injection), Bind TCP Stager (RC4 Stage Encryption, Metasm)
   673  payload/windows/vncinject/bind_tcp                                                          normal  No     VNC Server (Reflective Injection), Bind TCP Stager (Windows x86)
   674  payload/windows/vncinject/bind_tcp_uuid                                                     normal  No     VNC Server (Reflective Injection), Bind TCP Stager with UUID Support (Windows x86)
   675  payload/windows/vncinject/find_tag                                                          normal  No     VNC Server (Reflective Injection), Find Tag Ordinal Stager
   676  payload/windows/vncinject/bind_hidden_ipknock_tcp                                           normal  No     VNC Server (Reflective Injection), Hidden Bind Ipknock TCP Stager
   677  payload/windows/vncinject/bind_hidden_tcp                                                   normal  No     VNC Server (Reflective Injection), Hidden Bind TCP Stager
   678  payload/windows/vncinject/reverse_tcp_allports                                              normal  No     VNC Server (Reflective Injection), Reverse All-Port TCP Stager
   679  payload/windows/vncinject/reverse_http_proxy_pstore                                         normal  No     VNC Server (Reflective Injection), Reverse HTTP Stager Proxy
   680  payload/windows/vncinject/reverse_hop_http                                                  normal  No     VNC Server (Reflective Injection), Reverse Hop HTTP/HTTPS Stager
   681  payload/windows/vncinject/reverse_ord_tcp                                                   normal  No     VNC Server (Reflective Injection), Reverse Ordinal TCP Stager (No NX or Win7)
   682  payload/windows/vncinject/reverse_tcp                                                       normal  No     VNC Server (Reflective Injection), Reverse TCP Stager
   683  payload/windows/vncinject/reverse_tcp_dns                                                   normal  No     VNC Server (Reflective Injection), Reverse TCP Stager (DNS)
   684  payload/windows/vncinject/reverse_ipv6_tcp                                                  normal  No     VNC Server (Reflective Injection), Reverse TCP Stager (IPv6)
   685  payload/windows/vncinject/reverse_nonx_tcp                                                  normal  No     VNC Server (Reflective Injection), Reverse TCP Stager (No NX or Win7)
   686  payload/windows/vncinject/reverse_tcp_rc4_dns                                               normal  No     VNC Server (Reflective Injection), Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   687  payload/windows/vncinject/reverse_tcp_rc4                                                   normal  No     VNC Server (Reflective Injection), Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   688  payload/windows/vncinject/reverse_tcp_uuid                                                  normal  No     VNC Server (Reflective Injection), Reverse TCP Stager with UUID Support
   689  payload/windows/vncinject/reverse_winhttp                                                   normal  No     VNC Server (Reflective Injection), Windows Reverse HTTP Stager (winhttp)
   690  payload/windows/vncinject/reverse_http                                                      normal  No     VNC Server (Reflective Injection), Windows Reverse HTTP Stager (wininet)
   691  payload/windows/vncinject/bind_named_pipe                                                   normal  No     VNC Server (Reflective Injection), Windows x86 Bind Named Pipe Stager
   692  payload/windows/shell/bind_ipv6_tcp                                                         normal  No     Windows Command Shell, Bind IPv6 TCP Stager (Windows x86)
   693  payload/windows/shell/bind_ipv6_tcp_uuid                                                    normal  No     Windows Command Shell, Bind IPv6 TCP Stager with UUID Support (Windows x86)
   694  payload/cmd/windows/bind_lua                                                                normal  No     Windows Command Shell, Bind TCP (via Lua)
   695  payload/cmd/windows/bind_perl                                                               normal  No     Windows Command Shell, Bind TCP (via Perl)
   696  payload/cmd/windows/bind_ruby                                                               normal  No     Windows Command Shell, Bind TCP (via Ruby)
   697  payload/cmd/windows/bind_perl_ipv6                                                          normal  No     Windows Command Shell, Bind TCP (via perl) IPv6
   698  payload/windows/shell_bind_tcp                                                              normal  No     Windows Command Shell, Bind TCP Inline
   699  payload/windows/shell/bind_nonx_tcp                                                         normal  No     Windows Command Shell, Bind TCP Stager (No NX or Win7)
   700  payload/windows/shell/bind_tcp_rc4                                                          normal  No     Windows Command Shell, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   701  payload/windows/shell/bind_tcp                                                              normal  No     Windows Command Shell, Bind TCP Stager (Windows x86)
   702  payload/windows/shell/bind_tcp_uuid                                                         normal  No     Windows Command Shell, Bind TCP Stager with UUID Support (Windows x86)
   703  payload/windows/x64/encrypted_shell/reverse_tcp                                             normal  No     Windows Command Shell, Encrypted Reverse TCP Stager
   704  payload/windows/shell/find_tag                                                              normal  No     Windows Command Shell, Find Tag Ordinal Stager
   705  payload/windows/shell/bind_hidden_ipknock_tcp                                               normal  No     Windows Command Shell, Hidden Bind Ipknock TCP Stager
   706  payload/windows/shell_hidden_bind_tcp                                                       normal  No     Windows Command Shell, Hidden Bind TCP Inline
   707  payload/windows/shell/bind_hidden_tcp                                                       normal  No     Windows Command Shell, Hidden Bind TCP Stager
   708  payload/windows/shell/reverse_tcp_allports                                                  normal  No     Windows Command Shell, Reverse All-Port TCP Stager
   709  payload/windows/shell/reverse_ord_tcp                                                       normal  No     Windows Command Shell, Reverse Ordinal TCP Stager (No NX or Win7)
   710  payload/cmd/windows/reverse_lua                                                             normal  No     Windows Command Shell, Reverse TCP (via Lua)
   711  payload/cmd/windows/reverse_powershell                                                      normal  No     Windows Command Shell, Reverse TCP (via Powershell)
   712  payload/cmd/windows/reverse_ruby                                                            normal  No     Windows Command Shell, Reverse TCP (via Ruby)
   713  payload/windows/shell_reverse_tcp                                                           normal  No     Windows Command Shell, Reverse TCP Inline
   714  payload/windows/shell/reverse_tcp                                                           normal  No     Windows Command Shell, Reverse TCP Stager
   715  payload/windows/shell/reverse_tcp_dns                                                       normal  No     Windows Command Shell, Reverse TCP Stager (DNS)
   716  payload/windows/shell/reverse_ipv6_tcp                                                      normal  No     Windows Command Shell, Reverse TCP Stager (IPv6)
   717  payload/windows/shell/reverse_nonx_tcp                                                      normal  No     Windows Command Shell, Reverse TCP Stager (No NX or Win7)
   718  payload/windows/shell/reverse_tcp_rc4_dns                                                   normal  No     Windows Command Shell, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   719  payload/windows/shell/reverse_tcp_rc4                                                       normal  No     Windows Command Shell, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   720  payload/windows/shell/reverse_tcp_uuid                                                      normal  No     Windows Command Shell, Reverse TCP Stager with UUID Support
   721  payload/windows/shell/reverse_udp                                                           normal  No     Windows Command Shell, Reverse UDP Stager with UUID Support
   722  payload/windows/shell/bind_named_pipe                                                       normal  No     Windows Command Shell, Windows x86 Bind Named Pipe Stager
   723  payload/cmd/windows/reverse_perl                                                            normal  No     Windows Command, Double Reverse TCP Connection (via Perl)
   724  payload/cmd/windows/generic                                                                 normal  No     Windows Command, Generic Command Execution
   725  payload/windows/shell_bind_tcp_xpfw                                                         normal  No     Windows Disable Windows ICF, Command Shell, Bind TCP Inline
   726  payload/windows/format_all_drives                                                           manual  No     Windows Drive Formatter
   727  payload/windows/x64/encrypted_shell_reverse_tcp                                             normal  No     Windows Encrypted Reverse Shell
   728  payload/windows/download_exec                                                               normal  No     Windows Executable Download (http,https,ftp) and Execute
   729  payload/cmd/windows/download_eval_vbs                                                       normal  No     Windows Executable Download and Evaluate VBS
   730  payload/cmd/windows/download_exec_vbs                                                       normal  No     Windows Executable Download and Execute (via .vbs)
   731  payload/windows/exec                                                                        normal  No     Windows Execute Command
   732  payload/windows/adduser                                                                     normal  No     Windows Execute net user /ADD
   733  payload/cmd/windows/adduser                                                                 normal  No     Windows Execute net user /ADD CMD
   734  payload/windows/patchupdllinject/bind_ipv6_tcp                                              normal  No     Windows Inject DLL, Bind IPv6 TCP Stager (Windows x86)
   735  payload/windows/patchupdllinject/bind_ipv6_tcp_uuid                                         normal  No     Windows Inject DLL, Bind IPv6 TCP Stager with UUID Support (Windows x86)
   736  payload/windows/patchupdllinject/bind_nonx_tcp                                              normal  No     Windows Inject DLL, Bind TCP Stager (No NX or Win7)
   737  payload/windows/patchupdllinject/bind_tcp_rc4                                               normal  No     Windows Inject DLL, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   738  payload/windows/patchupdllinject/bind_tcp                                                   normal  No     Windows Inject DLL, Bind TCP Stager (Windows x86)
   739  payload/windows/patchupdllinject/bind_tcp_uuid                                              normal  No     Windows Inject DLL, Bind TCP Stager with UUID Support (Windows x86)
   740  payload/windows/patchupdllinject/find_tag                                                   normal  No     Windows Inject DLL, Find Tag Ordinal Stager
   741  payload/windows/patchupdllinject/bind_hidden_ipknock_tcp                                    normal  No     Windows Inject DLL, Hidden Bind Ipknock TCP Stager
   742  payload/windows/patchupdllinject/bind_hidden_tcp                                            normal  No     Windows Inject DLL, Hidden Bind TCP Stager
   743  payload/windows/patchupdllinject/reverse_tcp_allports                                       normal  No     Windows Inject DLL, Reverse All-Port TCP Stager
   744  payload/windows/patchupdllinject/reverse_ord_tcp                                            normal  No     Windows Inject DLL, Reverse Ordinal TCP Stager (No NX or Win7)
   745  payload/windows/patchupdllinject/reverse_tcp                                                normal  No     Windows Inject DLL, Reverse TCP Stager
   746  payload/windows/patchupdllinject/reverse_tcp_dns                                            normal  No     Windows Inject DLL, Reverse TCP Stager (DNS)
   747  payload/windows/patchupdllinject/reverse_ipv6_tcp                                           normal  No     Windows Inject DLL, Reverse TCP Stager (IPv6)
   748  payload/windows/patchupdllinject/reverse_nonx_tcp                                           normal  No     Windows Inject DLL, Reverse TCP Stager (No NX or Win7)
   749  payload/windows/patchupdllinject/reverse_tcp_rc4_dns                                        normal  No     Windows Inject DLL, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   750  payload/windows/patchupdllinject/reverse_tcp_rc4                                            normal  No     Windows Inject DLL, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   751  payload/windows/patchupdllinject/reverse_tcp_uuid                                           normal  No     Windows Inject DLL, Reverse TCP Stager with UUID Support
   752  payload/windows/patchupdllinject/bind_named_pipe                                            normal  No     Windows Inject DLL, Windows x86 Bind Named Pipe Stager
   753  payload/windows/peinject/bind_ipv6_tcp                                                      normal  No     Windows Inject PE Files, Bind IPv6 TCP Stager (Windows x86)
   754  payload/windows/peinject/bind_ipv6_tcp_uuid                                                 normal  No     Windows Inject PE Files, Bind IPv6 TCP Stager with UUID Support (Windows x86)
   755  payload/windows/peinject/bind_nonx_tcp                                                      normal  No     Windows Inject PE Files, Bind TCP Stager (No NX or Win7)
   756  payload/windows/peinject/bind_tcp_rc4                                                       normal  No     Windows Inject PE Files, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   757  payload/windows/peinject/bind_tcp                                                           normal  No     Windows Inject PE Files, Bind TCP Stager (Windows x86)
   758  payload/windows/peinject/bind_tcp_uuid                                                      normal  No     Windows Inject PE Files, Bind TCP Stager with UUID Support (Windows x86)
   759  payload/windows/peinject/find_tag                                                           normal  No     Windows Inject PE Files, Find Tag Ordinal Stager
   760  payload/windows/peinject/bind_hidden_ipknock_tcp                                            normal  No     Windows Inject PE Files, Hidden Bind Ipknock TCP Stager
   761  payload/windows/peinject/bind_hidden_tcp                                                    normal  No     Windows Inject PE Files, Hidden Bind TCP Stager
   762  payload/windows/peinject/reverse_tcp_allports                                               normal  No     Windows Inject PE Files, Reverse All-Port TCP Stager
   763  payload/windows/peinject/reverse_ord_tcp                                                    normal  No     Windows Inject PE Files, Reverse Ordinal TCP Stager (No NX or Win7)
   764  payload/windows/peinject/reverse_tcp                                                        normal  No     Windows Inject PE Files, Reverse TCP Stager
   765  payload/windows/peinject/reverse_tcp_dns                                                    normal  No     Windows Inject PE Files, Reverse TCP Stager (DNS)
   766  payload/windows/peinject/reverse_ipv6_tcp                                                   normal  No     Windows Inject PE Files, Reverse TCP Stager (IPv6)
   767  payload/windows/peinject/reverse_nonx_tcp                                                   normal  No     Windows Inject PE Files, Reverse TCP Stager (No NX or Win7)
   768  payload/windows/peinject/reverse_tcp_rc4_dns                                                normal  No     Windows Inject PE Files, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   769  payload/windows/peinject/reverse_tcp_rc4                                                    normal  No     Windows Inject PE Files, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   770  payload/windows/peinject/reverse_tcp_uuid                                                   normal  No     Windows Inject PE Files, Reverse TCP Stager with UUID Support
   771  payload/windows/peinject/bind_named_pipe                                                    normal  No     Windows Inject PE Files, Windows x86 Bind Named Pipe Stager
   772  payload/windows/peinject/reverse_named_pipe                                                 normal  No     Windows Inject PE Files, Windows x86 Reverse Named Pipe (SMB) Stager
   773  payload/windows/x64/peinject/bind_tcp_rc4                                                   normal  No     Windows Inject Reflective PE Files, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   774  payload/windows/x64/peinject/bind_tcp_uuid                                                  normal  No     Windows Inject Reflective PE Files, Bind TCP Stager with UUID Support (Windows x64)
   775  payload/windows/x64/peinject/reverse_tcp_rc4                                                normal  No     Windows Inject Reflective PE Files, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   776  payload/windows/x64/peinject/reverse_tcp_uuid                                               normal  No     Windows Inject Reflective PE Files, Reverse TCP Stager with UUID Support (Windows x64)
   777  payload/windows/x64/peinject/bind_named_pipe                                                normal  No     Windows Inject Reflective PE Files, Windows x64 Bind Named Pipe Stager
   778  payload/windows/x64/peinject/bind_tcp                                                       normal  No     Windows Inject Reflective PE Files, Windows x64 Bind TCP Stager
   779  payload/windows/x64/peinject/bind_ipv6_tcp                                                  normal  No     Windows Inject Reflective PE Files, Windows x64 IPv6 Bind TCP Stager
   780  payload/windows/x64/peinject/bind_ipv6_tcp_uuid                                             normal  No     Windows Inject Reflective PE Files, Windows x64 IPv6 Bind TCP Stager with UUID Support
   781  payload/windows/x64/peinject/reverse_named_pipe                                             normal  No     Windows Inject Reflective PE Files, Windows x64 Reverse Named Pipe (SMB) Stager
   782  payload/windows/x64/peinject/reverse_tcp                                                    normal  No     Windows Inject Reflective PE Files, Windows x64 Reverse TCP Stager
   783  payload/cmd/windows/powershell_bind_tcp                                                     normal  No     Windows Interactive Powershell Session, Bind TCP
   784  payload/windows/powershell_bind_tcp                                                         normal  No     Windows Interactive Powershell Session, Bind TCP
   785  payload/windows/x64/powershell_bind_tcp                                                     normal  No     Windows Interactive Powershell Session, Bind TCP
   786  payload/cmd/windows/powershell_reverse_tcp                                                  normal  No     Windows Interactive Powershell Session, Reverse TCP
   787  payload/windows/powershell_reverse_tcp                                                      normal  No     Windows Interactive Powershell Session, Reverse TCP
   788  payload/windows/x64/powershell_reverse_tcp                                                  normal  No     Windows Interactive Powershell Session, Reverse TCP
   789  payload/cmd/windows/powershell_reverse_tcp_ssl                                              normal  No     Windows Interactive Powershell Session, Reverse TCP SSL
   790  payload/windows/powershell_reverse_tcp_ssl                                                  normal  No     Windows Interactive Powershell Session, Reverse TCP SSL
   791  payload/windows/x64/powershell_reverse_tcp_ssl                                              normal  No     Windows Interactive Powershell Session, Reverse TCP SSL
   792  payload/windows/loadlibrary                                                                 normal  No     Windows LoadLibrary Path
   793  payload/windows/messagebox                                                                  normal  No     Windows MessageBox
   794  payload/windows/x64/messagebox                                                              normal  No     Windows MessageBox x64
   795  payload/windows/x64/meterpreter/bind_tcp_rc4                                                normal  No     Windows Meterpreter (Reflective Injection x64), Bind TCP Stager (RC4 Stage Encryption, Metasm)
   796  payload/windows/x64/meterpreter/bind_tcp_uuid                                               normal  No     Windows Meterpreter (Reflective Injection x64), Bind TCP Stager with UUID Support (Windows x64)
   797  payload/windows/x64/meterpreter/reverse_tcp_rc4                                             normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   798  payload/windows/x64/meterpreter/reverse_tcp_uuid                                            normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager with UUID Support (Windows x64)
   799  payload/windows/x64/meterpreter/bind_named_pipe                                             normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Bind Named Pipe Stager
   800  payload/windows/x64/meterpreter/bind_tcp                                                    normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Bind TCP Stager
   801  payload/windows/x64/meterpreter/bind_ipv6_tcp                                               normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager
   802  payload/windows/x64/meterpreter/bind_ipv6_tcp_uuid                                          normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager with UUID Support
   803  payload/windows/x64/meterpreter/reverse_winhttp                                             normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (winhttp)
   804  payload/windows/x64/meterpreter/reverse_http                                                normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)
   805  payload/windows/x64/meterpreter/reverse_https                                               normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)
   806  payload/windows/x64/meterpreter/reverse_winhttps                                            normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTPS Stager (winhttp)
   807  payload/windows/x64/meterpreter/reverse_named_pipe                                          normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse Named Pipe (SMB) Stager
   808  payload/windows/x64/meterpreter/reverse_tcp                                                 normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse TCP Stager
   809  payload/windows/meterpreter/bind_ipv6_tcp                                                   normal  No     Windows Meterpreter (Reflective Injection), Bind IPv6 TCP Stager (Windows x86)
   810  payload/windows/meterpreter/bind_ipv6_tcp_uuid                                              normal  No     Windows Meterpreter (Reflective Injection), Bind IPv6 TCP Stager with UUID Support (Windows x86)
   811  payload/windows/meterpreter/bind_nonx_tcp                                                   normal  No     Windows Meterpreter (Reflective Injection), Bind TCP Stager (No NX or Win7)
   812  payload/windows/meterpreter/bind_tcp_rc4                                                    normal  No     Windows Meterpreter (Reflective Injection), Bind TCP Stager (RC4 Stage Encryption, Metasm)
   813  payload/windows/meterpreter/bind_tcp                                                        normal  No     Windows Meterpreter (Reflective Injection), Bind TCP Stager (Windows x86)
   814  payload/windows/meterpreter/bind_tcp_uuid                                                   normal  No     Windows Meterpreter (Reflective Injection), Bind TCP Stager with UUID Support (Windows x86)
   815  payload/windows/meterpreter/find_tag                                                        normal  No     Windows Meterpreter (Reflective Injection), Find Tag Ordinal Stager
   816  payload/windows/meterpreter/bind_hidden_ipknock_tcp                                         normal  No     Windows Meterpreter (Reflective Injection), Hidden Bind Ipknock TCP Stager
   817  payload/windows/meterpreter/bind_hidden_tcp                                                 normal  No     Windows Meterpreter (Reflective Injection), Hidden Bind TCP Stager
   818  payload/windows/meterpreter/reverse_tcp_allports                                            normal  No     Windows Meterpreter (Reflective Injection), Reverse All-Port TCP Stager
   819  payload/windows/meterpreter/reverse_http_proxy_pstore                                       normal  No     Windows Meterpreter (Reflective Injection), Reverse HTTP Stager Proxy
   820  payload/windows/meterpreter/reverse_https_proxy                                             normal  No     Windows Meterpreter (Reflective Injection), Reverse HTTPS Stager with Support for Custom Proxy
   821  payload/windows/meterpreter/reverse_hop_http                                                normal  No     Windows Meterpreter (Reflective Injection), Reverse Hop HTTP/HTTPS Stager
   822  payload/windows/meterpreter/reverse_ord_tcp                                                 normal  No     Windows Meterpreter (Reflective Injection), Reverse Ordinal TCP Stager (No NX or Win7)
   823  payload/windows/meterpreter/reverse_tcp                                                     normal  No     Windows Meterpreter (Reflective Injection), Reverse TCP Stager
   824  payload/windows/meterpreter/reverse_tcp_dns                                                 normal  No     Windows Meterpreter (Reflective Injection), Reverse TCP Stager (DNS)
   825  payload/windows/meterpreter/reverse_ipv6_tcp                                                normal  No     Windows Meterpreter (Reflective Injection), Reverse TCP Stager (IPv6)
   826  payload/windows/meterpreter/reverse_nonx_tcp                                                normal  No     Windows Meterpreter (Reflective Injection), Reverse TCP Stager (No NX or Win7)
   827  payload/windows/meterpreter/reverse_tcp_rc4_dns                                             normal  No     Windows Meterpreter (Reflective Injection), Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   828  payload/windows/meterpreter/reverse_tcp_rc4                                                 normal  No     Windows Meterpreter (Reflective Injection), Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   829  payload/windows/meterpreter/reverse_tcp_uuid                                                normal  No     Windows Meterpreter (Reflective Injection), Reverse TCP Stager with UUID Support
   830  payload/windows/meterpreter/reverse_winhttp                                                 normal  No     Windows Meterpreter (Reflective Injection), Windows Reverse HTTP Stager (winhttp)
   831  payload/windows/meterpreter/reverse_http                                                    normal  No     Windows Meterpreter (Reflective Injection), Windows Reverse HTTP Stager (wininet)
   832  payload/windows/meterpreter/reverse_winhttps                                                normal  No     Windows Meterpreter (Reflective Injection), Windows Reverse HTTPS Stager (winhttp)
   833  payload/windows/meterpreter/reverse_https                                                   normal  No     Windows Meterpreter (Reflective Injection), Windows Reverse HTTPS Stager (wininet)
   834  payload/windows/meterpreter/bind_named_pipe                                                 normal  No     Windows Meterpreter (Reflective Injection), Windows x86 Bind Named Pipe Stager
   835  payload/windows/meterpreter/reverse_named_pipe                                              normal  No     Windows Meterpreter (Reflective Injection), Windows x86 Reverse Named Pipe (SMB) Stager
   836  payload/windows/patchupmeterpreter/bind_ipv6_tcp                                            normal  No     Windows Meterpreter (skape/jt Injection), Bind IPv6 TCP Stager (Windows x86)
   837  payload/windows/patchupmeterpreter/bind_ipv6_tcp_uuid                                       normal  No     Windows Meterpreter (skape/jt Injection), Bind IPv6 TCP Stager with UUID Support (Windows x86)
   838  payload/windows/patchupmeterpreter/bind_nonx_tcp                                            normal  No     Windows Meterpreter (skape/jt Injection), Bind TCP Stager (No NX or Win7)
   839  payload/windows/patchupmeterpreter/bind_tcp_rc4                                             normal  No     Windows Meterpreter (skape/jt Injection), Bind TCP Stager (RC4 Stage Encryption, Metasm)
   840  payload/windows/patchupmeterpreter/bind_tcp                                                 normal  No     Windows Meterpreter (skape/jt Injection), Bind TCP Stager (Windows x86)
   841  payload/windows/patchupmeterpreter/bind_tcp_uuid                                            normal  No     Windows Meterpreter (skape/jt Injection), Bind TCP Stager with UUID Support (Windows x86)
   842  payload/windows/patchupmeterpreter/find_tag                                                 normal  No     Windows Meterpreter (skape/jt Injection), Find Tag Ordinal Stager
   843  payload/windows/patchupmeterpreter/bind_hidden_ipknock_tcp                                  normal  No     Windows Meterpreter (skape/jt Injection), Hidden Bind Ipknock TCP Stager
   844  payload/windows/patchupmeterpreter/bind_hidden_tcp                                          normal  No     Windows Meterpreter (skape/jt Injection), Hidden Bind TCP Stager
   845  payload/windows/patchupmeterpreter/reverse_tcp_allports                                     normal  No     Windows Meterpreter (skape/jt Injection), Reverse All-Port TCP Stager
   846  payload/windows/patchupmeterpreter/reverse_ord_tcp                                          normal  No     Windows Meterpreter (skape/jt Injection), Reverse Ordinal TCP Stager (No NX or Win7)
   847  payload/windows/patchupmeterpreter/reverse_tcp                                              normal  No     Windows Meterpreter (skape/jt Injection), Reverse TCP Stager
   848  payload/windows/patchupmeterpreter/reverse_tcp_dns                                          normal  No     Windows Meterpreter (skape/jt Injection), Reverse TCP Stager (DNS)
   849  payload/windows/patchupmeterpreter/reverse_ipv6_tcp                                         normal  No     Windows Meterpreter (skape/jt Injection), Reverse TCP Stager (IPv6)
   850  payload/windows/patchupmeterpreter/reverse_nonx_tcp                                         normal  No     Windows Meterpreter (skape/jt Injection), Reverse TCP Stager (No NX or Win7)
   851  payload/windows/patchupmeterpreter/reverse_tcp_rc4_dns                                      normal  No     Windows Meterpreter (skape/jt Injection), Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   852  payload/windows/patchupmeterpreter/reverse_tcp_rc4                                          normal  No     Windows Meterpreter (skape/jt Injection), Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   853  payload/windows/patchupmeterpreter/reverse_tcp_uuid                                         normal  No     Windows Meterpreter (skape/jt Injection), Reverse TCP Stager with UUID Support
   854  payload/windows/patchupmeterpreter/bind_named_pipe                                          normal  No     Windows Meterpreter (skape/jt Injection), Windows x86 Bind Named Pipe Stager
   855  payload/windows/metsvc_bind_tcp                                                             normal  No     Windows Meterpreter Service, Bind TCP
   856  payload/windows/metsvc_reverse_tcp                                                          normal  No     Windows Meterpreter Service, Reverse TCP Inline
   857  payload/windows/meterpreter_bind_named_pipe                                                 normal  No     Windows Meterpreter Shell, Bind Named Pipe Inline
   858  payload/windows/x64/meterpreter_bind_named_pipe                                             normal  No     Windows Meterpreter Shell, Bind Named Pipe Inline (x64)
   859  payload/windows/meterpreter_bind_tcp                                                        normal  No     Windows Meterpreter Shell, Bind TCP Inline
   860  payload/windows/x64/meterpreter_bind_tcp                                                    normal  No     Windows Meterpreter Shell, Bind TCP Inline (x64)
   861  payload/windows/meterpreter_reverse_http                                                    normal  No     Windows Meterpreter Shell, Reverse HTTP Inline
   862  payload/windows/x64/meterpreter_reverse_http                                                normal  No     Windows Meterpreter Shell, Reverse HTTP Inline (x64)
   863  payload/windows/meterpreter_reverse_https                                                   normal  No     Windows Meterpreter Shell, Reverse HTTPS Inline
   864  payload/windows/x64/meterpreter_reverse_https                                               normal  No     Windows Meterpreter Shell, Reverse HTTPS Inline (x64)
   865  payload/windows/meterpreter_reverse_tcp                                                     normal  No     Windows Meterpreter Shell, Reverse TCP Inline
   866  payload/windows/meterpreter_reverse_ipv6_tcp                                                normal  No     Windows Meterpreter Shell, Reverse TCP Inline (IPv6)
   867  payload/windows/x64/meterpreter_reverse_ipv6_tcp                                            normal  No     Windows Meterpreter Shell, Reverse TCP Inline (IPv6) (x64)
   868  payload/windows/x64/meterpreter_reverse_tcp                                                 normal  No     Windows Meterpreter Shell, Reverse TCP Inline x64
   869  payload/cmd/windows/jjs_reverse_tcp                                                         normal  No     Windows Shell, Reverse TCP (via jjs)
   870  payload/windows/speak_pwned                                                                 normal  No     Windows Speech API - Say "You Got Pwned!"
   871  payload/windows/upexec/bind_ipv6_tcp                                                        normal  No     Windows Upload/Execute, Bind IPv6 TCP Stager (Windows x86)
   872  payload/windows/upexec/bind_ipv6_tcp_uuid                                                   normal  No     Windows Upload/Execute, Bind IPv6 TCP Stager with UUID Support (Windows x86)
   873  payload/windows/upexec/bind_nonx_tcp                                                        normal  No     Windows Upload/Execute, Bind TCP Stager (No NX or Win7)
   874  payload/windows/upexec/bind_tcp_rc4                                                         normal  No     Windows Upload/Execute, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   875  payload/windows/upexec/bind_tcp                                                             normal  No     Windows Upload/Execute, Bind TCP Stager (Windows x86)
   876  payload/windows/upexec/bind_tcp_uuid                                                        normal  No     Windows Upload/Execute, Bind TCP Stager with UUID Support (Windows x86)
   877  payload/windows/upexec/find_tag                                                             normal  No     Windows Upload/Execute, Find Tag Ordinal Stager
   878  payload/windows/upexec/bind_hidden_ipknock_tcp                                              normal  No     Windows Upload/Execute, Hidden Bind Ipknock TCP Stager
   879  payload/windows/upexec/bind_hidden_tcp                                                      normal  No     Windows Upload/Execute, Hidden Bind TCP Stager
   880  payload/windows/upexec/reverse_tcp_allports                                                 normal  No     Windows Upload/Execute, Reverse All-Port TCP Stager
   881  payload/windows/upexec/reverse_ord_tcp                                                      normal  No     Windows Upload/Execute, Reverse Ordinal TCP Stager (No NX or Win7)
   882  payload/windows/upexec/reverse_tcp                                                          normal  No     Windows Upload/Execute, Reverse TCP Stager
   883  payload/windows/upexec/reverse_tcp_dns                                                      normal  No     Windows Upload/Execute, Reverse TCP Stager (DNS)
   884  payload/windows/upexec/reverse_ipv6_tcp                                                     normal  No     Windows Upload/Execute, Reverse TCP Stager (IPv6)
   885  payload/windows/upexec/reverse_nonx_tcp                                                     normal  No     Windows Upload/Execute, Reverse TCP Stager (No NX or Win7)
   886  payload/windows/upexec/reverse_tcp_rc4_dns                                                  normal  No     Windows Upload/Execute, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   887  payload/windows/upexec/reverse_tcp_rc4                                                      normal  No     Windows Upload/Execute, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   888  payload/windows/upexec/reverse_tcp_uuid                                                     normal  No     Windows Upload/Execute, Reverse TCP Stager with UUID Support
   889  payload/windows/upexec/reverse_udp                                                          normal  No     Windows Upload/Execute, Reverse UDP Stager with UUID Support
   890  payload/windows/upexec/bind_named_pipe                                                      normal  No     Windows Upload/Execute, Windows x86 Bind Named Pipe Stager
   891  payload/windows/custom/bind_ipv6_tcp                                                        normal  No     Windows shellcode stage, Bind IPv6 TCP Stager (Windows x86)
   892  payload/windows/custom/bind_ipv6_tcp_uuid                                                   normal  No     Windows shellcode stage, Bind IPv6 TCP Stager with UUID Support (Windows x86)
   893  payload/windows/custom/bind_nonx_tcp                                                        normal  No     Windows shellcode stage, Bind TCP Stager (No NX or Win7)
   894  payload/windows/custom/bind_tcp_rc4                                                         normal  No     Windows shellcode stage, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   895  payload/windows/x64/custom/bind_tcp_rc4                                                     normal  No     Windows shellcode stage, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   896  payload/windows/custom/bind_tcp                                                             normal  No     Windows shellcode stage, Bind TCP Stager (Windows x86)
   897  payload/windows/x64/custom/bind_tcp_uuid                                                    normal  No     Windows shellcode stage, Bind TCP Stager with UUID Support (Windows x64)
   898  payload/windows/custom/bind_tcp_uuid                                                        normal  No     Windows shellcode stage, Bind TCP Stager with UUID Support (Windows x86)
   899  payload/windows/custom/find_tag                                                             normal  No     Windows shellcode stage, Find Tag Ordinal Stager
   900  payload/windows/custom/bind_hidden_ipknock_tcp                                              normal  No     Windows shellcode stage, Hidden Bind Ipknock TCP Stager
   901  payload/windows/custom/bind_hidden_tcp                                                      normal  No     Windows shellcode stage, Hidden Bind TCP Stager
   902  payload/windows/custom/reverse_tcp_allports                                                 normal  No     Windows shellcode stage, Reverse All-Port TCP Stager
   903  payload/windows/custom/reverse_http_proxy_pstore                                            normal  No     Windows shellcode stage, Reverse HTTP Stager Proxy
   904  payload/windows/custom/reverse_https_proxy                                                  normal  No     Windows shellcode stage, Reverse HTTPS Stager with Support for Custom Proxy
   905  payload/windows/custom/reverse_hop_http                                                     normal  No     Windows shellcode stage, Reverse Hop HTTP/HTTPS Stager
   906  payload/windows/custom/reverse_ord_tcp                                                      normal  No     Windows shellcode stage, Reverse Ordinal TCP Stager (No NX or Win7)
   907  payload/windows/custom/reverse_tcp                                                          normal  No     Windows shellcode stage, Reverse TCP Stager
   908  payload/windows/custom/reverse_tcp_dns                                                      normal  No     Windows shellcode stage, Reverse TCP Stager (DNS)
   909  payload/windows/custom/reverse_ipv6_tcp                                                     normal  No     Windows shellcode stage, Reverse TCP Stager (IPv6)
   910  payload/windows/custom/reverse_nonx_tcp                                                     normal  No     Windows shellcode stage, Reverse TCP Stager (No NX or Win7)
   911  payload/windows/custom/reverse_tcp_rc4_dns                                                  normal  No     Windows shellcode stage, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)
   912  payload/windows/custom/reverse_tcp_rc4                                                      normal  No     Windows shellcode stage, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   913  payload/windows/x64/custom/reverse_tcp_rc4                                                  normal  No     Windows shellcode stage, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   914  payload/windows/custom/reverse_tcp_uuid                                                     normal  No     Windows shellcode stage, Reverse TCP Stager with UUID Support
   915  payload/windows/x64/custom/reverse_tcp_uuid                                                 normal  No     Windows shellcode stage, Reverse TCP Stager with UUID Support (Windows x64)
   916  payload/windows/custom/reverse_udp                                                          normal  No     Windows shellcode stage, Reverse UDP Stager with UUID Support
   917  payload/windows/custom/reverse_winhttp                                                      normal  No     Windows shellcode stage, Windows Reverse HTTP Stager (winhttp)
   918  payload/windows/custom/reverse_http                                                         normal  No     Windows shellcode stage, Windows Reverse HTTP Stager (wininet)
   919  payload/windows/custom/reverse_winhttps                                                     normal  No     Windows shellcode stage, Windows Reverse HTTPS Stager (winhttp)
   920  payload/windows/custom/reverse_https                                                        normal  No     Windows shellcode stage, Windows Reverse HTTPS Stager (wininet)
   921  payload/windows/x64/custom/bind_named_pipe                                                  normal  No     Windows shellcode stage, Windows x64 Bind Named Pipe Stager
   922  payload/windows/x64/custom/bind_tcp                                                         normal  No     Windows shellcode stage, Windows x64 Bind TCP Stager
   923  payload/windows/x64/custom/bind_ipv6_tcp                                                    normal  No     Windows shellcode stage, Windows x64 IPv6 Bind TCP Stager
   924  payload/windows/x64/custom/bind_ipv6_tcp_uuid                                               normal  No     Windows shellcode stage, Windows x64 IPv6 Bind TCP Stager with UUID Support
   925  payload/windows/x64/custom/reverse_winhttp                                                  normal  No     Windows shellcode stage, Windows x64 Reverse HTTP Stager (winhttp)
   926  payload/windows/x64/custom/reverse_http                                                     normal  No     Windows shellcode stage, Windows x64 Reverse HTTP Stager (wininet)
   927  payload/windows/x64/custom/reverse_https                                                    normal  No     Windows shellcode stage, Windows x64 Reverse HTTP Stager (wininet)
   928  payload/windows/x64/custom/reverse_winhttps                                                 normal  No     Windows shellcode stage, Windows x64 Reverse HTTPS Stager (winhttp)
   929  payload/windows/x64/custom/reverse_named_pipe                                               normal  No     Windows shellcode stage, Windows x64 Reverse Named Pipe (SMB) Stager
   930  payload/windows/x64/custom/reverse_tcp                                                      normal  No     Windows shellcode stage, Windows x64 Reverse TCP Stager
   931  payload/windows/custom/bind_named_pipe                                                      normal  No     Windows shellcode stage, Windows x86 Bind Named Pipe Stager
   932  payload/windows/custom/reverse_named_pipe                                                   normal  No     Windows shellcode stage, Windows x86 Reverse Named Pipe (SMB) Stager
   933  payload/windows/x64/shell_bind_tcp                                                          normal  No     Windows x64 Command Shell, Bind TCP Inline
   934  payload/windows/x64/shell/bind_tcp_rc4                                                      normal  No     Windows x64 Command Shell, Bind TCP Stager (RC4 Stage Encryption, Metasm)
   935  payload/windows/x64/shell/bind_tcp_uuid                                                     normal  No     Windows x64 Command Shell, Bind TCP Stager with UUID Support (Windows x64)
   936  payload/windows/x64/shell_reverse_tcp                                                       normal  No     Windows x64 Command Shell, Reverse TCP Inline
   937  payload/windows/x64/shell/reverse_tcp_rc4                                                   normal  No     Windows x64 Command Shell, Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   938  payload/windows/x64/shell/reverse_tcp_uuid                                                  normal  No     Windows x64 Command Shell, Reverse TCP Stager with UUID Support (Windows x64)
   939  payload/windows/x64/shell/bind_named_pipe                                                   normal  No     Windows x64 Command Shell, Windows x64 Bind Named Pipe Stager
   940  payload/windows/x64/shell/bind_tcp                                                          normal  No     Windows x64 Command Shell, Windows x64 Bind TCP Stager
   941  payload/windows/x64/shell/bind_ipv6_tcp                                                     normal  No     Windows x64 Command Shell, Windows x64 IPv6 Bind TCP Stager
   942  payload/windows/x64/shell/bind_ipv6_tcp_uuid                                                normal  No     Windows x64 Command Shell, Windows x64 IPv6 Bind TCP Stager with UUID Support
   943  payload/windows/x64/shell/reverse_tcp                                                       normal  No     Windows x64 Command Shell, Windows x64 Reverse TCP Stager
   944  payload/windows/x64/exec                                                                    normal  No     Windows x64 Execute Command
   945  payload/windows/x64/loadlibrary                                                             normal  No     Windows x64 LoadLibrary Path
   946  payload/windows/x64/pingback_reverse_tcp                                                    normal  No     Windows x64 Pingback, Reverse TCP Inline
   947  payload/windows/x64/vncinject/bind_tcp_rc4                                                  normal  No     Windows x64 VNC Server (Reflective Injection), Bind TCP Stager (RC4 Stage Encryption, Metasm)
   948  payload/windows/x64/vncinject/bind_tcp_uuid                                                 normal  No     Windows x64 VNC Server (Reflective Injection), Bind TCP Stager with UUID Support (Windows x64)
   949  payload/windows/x64/vncinject/reverse_tcp_rc4                                               normal  No     Windows x64 VNC Server (Reflective Injection), Reverse TCP Stager (RC4 Stage Encryption, Metasm)
   950  payload/windows/x64/vncinject/reverse_tcp_uuid                                              normal  No     Windows x64 VNC Server (Reflective Injection), Reverse TCP Stager with UUID Support (Windows x64)
   951  payload/windows/x64/vncinject/bind_named_pipe                                               normal  No     Windows x64 VNC Server (Reflective Injection), Windows x64 Bind Named Pipe Stager
   952  payload/windows/x64/vncinject/bind_tcp                                                      normal  No     Windows x64 VNC Server (Reflective Injection), Windows x64 Bind TCP Stager
   953  payload/windows/x64/vncinject/bind_ipv6_tcp                                                 normal  No     Windows x64 VNC Server (Reflective Injection), Windows x64 IPv6 Bind TCP Stager
   954  payload/windows/x64/vncinject/bind_ipv6_tcp_uuid                                            normal  No     Windows x64 VNC Server (Reflective Injection), Windows x64 IPv6 Bind TCP Stager with UUID Support
   955  payload/windows/x64/vncinject/reverse_winhttp                                               normal  No     Windows x64 VNC Server (Reflective Injection), Windows x64 Reverse HTTP Stager (winhttp)
   956  payload/windows/x64/vncinject/reverse_http                                                  normal  No     Windows x64 VNC Server (Reflective Injection), Windows x64 Reverse HTTP Stager (wininet)
   957  payload/windows/x64/vncinject/reverse_https                                                 normal  No     Windows x64 VNC Server (Reflective Injection), Windows x64 Reverse HTTP Stager (wininet)
   958  payload/windows/x64/vncinject/reverse_winhttps                                              normal  No     Windows x64 VNC Server (Reflective Injection), Windows x64 Reverse HTTPS Stager (winhttp)
   959  payload/windows/x64/vncinject/reverse_tcp                                                   normal  No     Windows x64 VNC Server (Reflective Injection), Windows x64 Reverse TCP Stager
   960  payload/windows/pingback_bind_tcp                                                           normal  No     Windows x86 Pingback, Bind TCP Inline
   961  payload/windows/pingback_reverse_tcp                                                        normal  No     Windows x86 Pingback, Reverse TCP Inline
   962  payload/cmd/mainframe/bind_shell_jcl                                                        normal  No     Z/OS (MVS) Command Shell, Bind TCP
   963  payload/cmd/mainframe/reverse_shell_jcl                                                     normal  No     Z/OS (MVS) Command Shell, Reverse TCP
   964  payload/mainframe/shell_reverse_tcp                                                         normal  No     Z/OS (MVS) Command Shell, Reverse TCP Inline


Interact with a module by name or index. For example [32minfo 964[0m, [32muse 964[0m or [32muse payload/mainframe/shell_reverse_tcp[0m

[0m{"platform":"AIX","arch":"ppc","privileged":"false","size":264,"name":"AIX Command Shell, Bind TCP Inline","fullname":"payload/aix/ppc/shell_bind_tcp","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"AIX","display_value":"6.1.4","required":"true","description":"IBM AIX Version"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"AIX","arch":"ppc","privileged":"false","size":220,"name":"AIX Command Shell, Find Port Inline","fullname":"payload/aix/ppc/shell_find_port","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Spawn a shell on an established connection","options":[{"name":"AIX","display_value":"6.1.4","required":"true","description":"IBM AIX Version"},{"name":"CPORT","display_value":"27729","required":"false","description":"The local client port"}]}
[0m{"platform":"AIX","arch":"ppc","privileged":"false","size":204,"name":"AIX Command Shell, Reverse TCP Inline","fullname":"payload/aix/ppc/shell_reverse_tcp","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"AIX","display_value":"6.1.4","required":"true","description":"IBM AIX Version"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"AIX","arch":"ppc","privileged":"false","size":56,"name":"AIX execve Shell for inetd","fullname":"payload/aix/ppc/shell_interact","authors":["jduck \u003cjduck@metasploit.com\u003e"],"rank":"Normal","description":"Simply execve /bin/sh (for inetd programs)","options":[{"name":"AIX","display_value":"6.1.4","required":"true","description":"IBM AIX Version"}]}
[0m{"platform":"Android","arch":"dalvik","privileged":"false","size":81073,"name":"Android Meterpreter Shell, Reverse HTTP Inline","fullname":"payload/android/meterpreter_reverse_http","authors":[],"rank":"Normal","description":"Connect back to attacker and spawn a Meterpreter shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Android","arch":"dalvik","privileged":"false","size":81123,"name":"Android Meterpreter Shell, Reverse HTTPS Inline","fullname":"payload/android/meterpreter_reverse_https","authors":[],"rank":"Normal","description":"Connect back to attacker and spawn a Meterpreter shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Android","arch":"dalvik","privileged":"false","size":80933,"name":"Android Meterpreter Shell, Reverse TCP Inline","fullname":"payload/android/meterpreter_reverse_tcp","authors":[],"rank":"Normal","description":"Connect back to the attacker and spawn a Meterpreter shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Android","arch":"dalvik","privileged":"false","size":10527,"name":"Android Meterpreter, Android Reverse HTTP Stager","fullname":"payload/android/meterpreter/reverse_http","authors":["mihi","egypt \u003cegypt@metasploit.com\u003e","OJ Reeves","anwarelmakrahy"],"rank":"Normal","description":"Run a meterpreter server in Android. Tunnel communication over HTTP","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Android","arch":"dalvik","privileged":"false","size":10518,"name":"Android Meterpreter, Android Reverse HTTPS Stager","fullname":"payload/android/meterpreter/reverse_https","authors":["mihi","egypt \u003cegypt@metasploit.com\u003e","OJ Reeves","anwarelmakrahy"],"rank":"Normal","description":"Run a meterpreter server in Android. Tunnel communication over HTTPS","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Android","arch":"dalvik","privileged":"false","size":10225,"name":"Android Meterpreter, Android Reverse TCP Stager","fullname":"payload/android/meterpreter/reverse_tcp","authors":["mihi","egypt \u003cegypt@metasploit.com\u003e","OJ Reeves"],"rank":"Normal","description":"Run a meterpreter server in Android. Connect back stager","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"OSX","arch":"armle","privileged":"false","size":200,"name":"Apple iOS Command Shell, Bind TCP Inline","fullname":"payload/osx/armle/shell_bind_tcp","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"OSX","arch":"armle","privileged":"false","size":152,"name":"Apple iOS Command Shell, Reverse TCP Inline","fullname":"payload/osx/armle/shell_reverse_tcp","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Apple_iOS","arch":"aarch64","privileged":"false","size":152,"name":"Apple iOS aarch64 Command Shell, Reverse TCP Inline","fullname":"payload/apple_ios/aarch64/shell_reverse_tcp","authors":[],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELL","display_value":"/bin/sh","required":"true","description":"The shell to execute."}]}
[0m{"platform":"OSX","arch":"armle","privileged":"false","size":16,"name":"Apple iOS iPhone Vibrate","fullname":"payload/osx/armle/vibrate","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Causes the iPhone to vibrate, only works when the AudioToolkit library has been loaded. Based on work by Charlie Miller \u003ccmiller[at]securityevaluators.com\u003e.","options":[]}
[0m{"platform":"Apple_iOS","arch":"aarch64","privileged":"false","size":796620,"name":"Apple_iOS Meterpreter, Reverse HTTP Inline","fullname":"payload/apple_ios/aarch64/meterpreter_reverse_http","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Apple_iOS","arch":"armle","privileged":"false","size":643552,"name":"Apple_iOS Meterpreter, Reverse HTTP Inline","fullname":"payload/apple_ios/armle/meterpreter_reverse_http","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Apple_iOS","arch":"aarch64","privileged":"false","size":796620,"name":"Apple_iOS Meterpreter, Reverse HTTPS Inline","fullname":"payload/apple_ios/aarch64/meterpreter_reverse_https","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Apple_iOS","arch":"armle","privileged":"false","size":643552,"name":"Apple_iOS Meterpreter, Reverse HTTPS Inline","fullname":"payload/apple_ios/armle/meterpreter_reverse_https","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Apple_iOS","arch":"aarch64","privileged":"false","size":796620,"name":"Apple_iOS Meterpreter, Reverse TCP Inline","fullname":"payload/apple_ios/aarch64/meterpreter_reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Apple_iOS","arch":"armle","privileged":"false","size":643552,"name":"Apple_iOS Meterpreter, Reverse TCP Inline","fullname":"payload/apple_ios/armle/meterpreter_reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Multi","arch":"x86, x86_64, x64, mips, mipsle, mipsbe, mips64, mips64le, ppc, ppce500v2, ppc64, ppc64le, cbea, cbea64, sparc, sparc64, armle, armbe, aarch64, cmd, php, tty, java, ruby, dalvik, python, nodejs, firefox, zarch, r","privileged":"false","size":0,"name":"Architecture-Independent Meterpreter Stage, Reverse HTTP Stager (Multiple Architectures)","fullname":"payload/multi/meterpreter/reverse_http","authors":["OJ Reeves"],"rank":"Normal","description":"Handle Meterpreter sessions regardless of the target arch/platform. Tunnel communication over HTTP","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Multi","arch":"x86, x86_64, x64, mips, mipsle, mipsbe, mips64, mips64le, ppc, ppce500v2, ppc64, ppc64le, cbea, cbea64, sparc, sparc64, armle, armbe, aarch64, cmd, php, tty, java, ruby, dalvik, python, nodejs, firefox, zarch, r","privileged":"false","size":0,"name":"Architecture-Independent Meterpreter Stage, Reverse HTTPS Stager (Multiple Architectures)","fullname":"payload/multi/meterpreter/reverse_https","authors":["OJ Reeves"],"rank":"Normal","description":"Handle Meterpreter sessions regardless of the target arch/platform. Tunnel communication over HTTPS","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"BSD","arch":"sparc","privileged":"false","size":164,"name":"BSD Command Shell, Bind TCP Inline","fullname":"payload/bsd/sparc/shell_bind_tcp","authors":["vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"BSD","arch":"x86","privileged":"false","size":73,"name":"BSD Command Shell, Bind TCP Inline","fullname":"payload/bsd/x86/shell_bind_tcp","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"BSD","arch":"x86","privileged":"false","size":87,"name":"BSD Command Shell, Bind TCP Inline (IPv6)","fullname":"payload/bsd/x86/shell_bind_tcp_ipv6","authors":["skape \u003cmmiller@hick.org\u003e","vlad902 \u003cvlad902@gmail.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell over IPv6","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"BSD","arch":"x86","privileged":"false","size":54,"name":"BSD Command Shell, Bind TCP Stager","fullname":"payload/bsd/x86/shell/bind_tcp","authors":["skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"BSD","arch":"x86","privileged":"false","size":63,"name":"BSD Command Shell, Bind TCP Stager (IPv6)","fullname":"payload/bsd/x86/shell/bind_ipv6_tcp","authors":["skape \u003cmmiller@hick.org\u003e","vlad902 \u003cvlad902@gmail.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Listen for a connection over IPv6","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"BSD","arch":"x86","privileged":"false","size":60,"name":"BSD Command Shell, Find Port Inline","fullname":"payload/bsd/x86/shell_find_port","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Spawn a shell on an established connection","options":[{"name":"CPORT","display_value":"3939","required":"false","description":"The local client port"}]}
[0m{"platform":"BSD","arch":"x86","privileged":"false","size":70,"name":"BSD Command Shell, Find Tag Inline","fullname":"payload/bsd/x86/shell_find_tag","authors":["skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Spawn a shell on an established connection (proxy/nat safe)","options":[]}
[0m{"platform":"BSD","arch":"x86","privileged":"false","size":40,"name":"BSD Command Shell, Find Tag Stager","fullname":"payload/bsd/x86/shell/find_tag","authors":["skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Use an established connection","options":[]}
[0m{"platform":"BSD","arch":"sparc","privileged":"false","size":128,"name":"BSD Command Shell, Reverse TCP Inline","fullname":"payload/bsd/sparc/shell_reverse_tcp","authors":["vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"BSD","arch":"vax","privileged":"false","size":100,"name":"BSD Command Shell, Reverse TCP Inline","fullname":"payload/bsd/vax/shell_reverse_tcp","authors":["wvu \u003cwvu@metasploit.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"BSD","arch":"x86","privileged":"false","size":64,"name":"BSD Command Shell, Reverse TCP Inline","fullname":"payload/bsd/x86/shell_reverse_tcp","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"BSD","arch":"x86","privileged":"false","size":96,"name":"BSD Command Shell, Reverse TCP Inline (IPv6)","fullname":"payload/bsd/x86/shell_reverse_tcp_ipv6","authors":["skape \u003cmmiller@hick.org\u003e","vlad902 \u003cvlad902@gmail.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell over IPv6","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"IPv6 scope ID, for link-local addresses"}]}
[0m{"platform":"BSD","arch":"x86","privileged":"false","size":43,"name":"BSD Command Shell, Reverse TCP Stager","fullname":"payload/bsd/x86/shell/reverse_tcp","authors":["skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"BSD","arch":"x86","privileged":"false","size":81,"name":"BSD Command Shell, Reverse TCP Stager (IPv6)","fullname":"payload/bsd/x86/shell/reverse_ipv6_tcp","authors":["skape \u003cmmiller@hick.org\u003e","vlad902 \u003cvlad902@gmail.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Connect back to the attacker over IPv6","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"IPv6 scope ID, for link-local addresses"}]}
[0m{"platform":"BSD","arch":"x86","privileged":"false","size":16,"name":"BSD Execute Command","fullname":"payload/bsd/x86/exec","authors":["snagg \u003csnagg@openssl.it\u003e","argp \u003cargp@census-labs.com\u003e","joev \u003cjoev@metasploit.com\u003e"],"rank":"Normal","description":"Execute an arbitrary command","options":[{"name":"CMD","display_value":"","required":"true","description":"The command string to execute"}]}
[0m{"platform":"BSD","arch":"x64","privileged":"false","size":88,"name":"BSD x64 Command Shell, Bind TCP Inline","fullname":"payload/bsd/x64/shell_bind_tcp_small","authors":["Balazs Bucsay @xoreipeip \u003cbalazs.bucsay[-at-]rycon[-dot-]hu\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"BSD","arch":"x64","privileged":"false","size":90,"name":"BSD x64 Command Shell, Bind TCP Inline (IPv6)","fullname":"payload/bsd/x64/shell_bind_ipv6_tcp","authors":["Balazs Bucsay @xoreipeip \u003cbalazs.bucsay[-at-]rycon[-dot-]hu\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell over IPv6","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"BSD","arch":"x64","privileged":"false","size":81,"name":"BSD x64 Command Shell, Reverse TCP Inline","fullname":"payload/bsd/x64/shell_reverse_tcp_small","authors":["Balazs Bucsay @xoreipeip \u003cbalazs.bucsay[-at-]rycon[-dot-]hu\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"BSD","arch":"x64","privileged":"false","size":105,"name":"BSD x64 Command Shell, Reverse TCP Inline (IPv6)","fullname":"payload/bsd/x64/shell_reverse_ipv6_tcp","authors":["Balazs Bucsay @xoreipeip \u003cbalazs.bucsay[-at-]rycon[-dot-]hu\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell over IPv6","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"IPv6 scope ID, for link-local addresses"}]}
[0m{"platform":"BSD","arch":"x64","privileged":"false","size":23,"name":"BSD x64 Execute Command","fullname":"payload/bsd/x64/exec","authors":["joev \u003cjoev@metasploit.com\u003e"],"rank":"Normal","description":"Execute an arbitrary command","options":[{"name":"CMD","display_value":"","required":"true","description":"The command string to execute"}]}
[0m{"platform":"BSD","arch":"x64","privileged":"false","size":136,"name":"BSD x64 Shell Bind TCP","fullname":"payload/bsd/x64/shell_bind_tcp","authors":["nemo \u003cnemo@felinemenace.org\u003e","joev \u003cjoev@metasploit.com\u003e"],"rank":"Normal","description":"Bind an arbitrary command to an arbitrary port","options":[{"name":"CMD","display_value":"/bin/sh","required":"true","description":"The command string to execute"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"BSD","arch":"x64","privileged":"false","size":98,"name":"BSD x64 Shell Reverse TCP","fullname":"payload/bsd/x64/shell_reverse_tcp","authors":["nemo \u003cnemo@felinemenace.org\u003e","joev \u003cjoev@metasploit.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"CMD","display_value":"/bin/sh","required":"true","description":"The command string to execute"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"BSDi","arch":"x86","privileged":"false","size":90,"name":"BSDi Command Shell, Bind TCP Inline","fullname":"payload/bsdi/x86/shell_bind_tcp","authors":["skape \u003cmmiller@hick.org\u003e","optyx \u003coptyx@no$email.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"BSDi","arch":"x86","privileged":"false","size":69,"name":"BSDi Command Shell, Bind TCP Stager","fullname":"payload/bsdi/x86/shell/bind_tcp","authors":["skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"BSDi","arch":"x86","privileged":"false","size":77,"name":"BSDi Command Shell, Find Port Inline","fullname":"payload/bsdi/x86/shell_find_port","authors":["skape \u003cmmiller@hick.org\u003e","optyx \u003coptyx@no$email.com\u003e"],"rank":"Normal","description":"Spawn a shell on an established connection","options":[{"name":"CPORT","display_value":"13862","required":"false","description":"The local client port"}]}
[0m{"platform":"BSDi","arch":"x86","privileged":"false","size":77,"name":"BSDi Command Shell, Reverse TCP Inline","fullname":"payload/bsdi/x86/shell_reverse_tcp","authors":["skape \u003cmmiller@hick.org\u003e","optyx \u003coptyx@no$email.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"BSDi","arch":"x86","privileged":"false","size":59,"name":"BSDi Command Shell, Reverse TCP Stager","fullname":"payload/bsdi/x86/shell/reverse_tcp","authors":["skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Android","arch":"dalvik","privileged":"false","size":10400,"name":"Command Shell, Android Reverse HTTP Stager","fullname":"payload/android/shell/reverse_http","authors":["mihi","egypt \u003cegypt@metasploit.com\u003e","anwarelmakrahy","OJ Reeves"],"rank":"Normal","description":"Spawn a piped command shell (sh). Tunnel communication over HTTP","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Android","arch":"dalvik","privileged":"false","size":10485,"name":"Command Shell, Android Reverse HTTPS Stager","fullname":"payload/android/shell/reverse_https","authors":["mihi","egypt \u003cegypt@metasploit.com\u003e","anwarelmakrahy","OJ Reeves"],"rank":"Normal","description":"Spawn a piped command shell (sh). Tunnel communication over HTTPS","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Android","arch":"dalvik","privileged":"false","size":10215,"name":"Command Shell, Android Reverse TCP Stager","fullname":"payload/android/shell/reverse_tcp","authors":["mihi","egypt \u003cegypt@metasploit.com\u003e"],"rank":"Normal","description":"Spawn a piped command shell (sh). Connect back stager","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Firefox","arch":"firefox","privileged":"false","size":7532,"name":"Command Shell, Bind TCP (via Firefox XPCOM script)","fullname":"payload/firefox/shell_bind_tcp","authors":["joev \u003cjoev@metasploit.com\u003e"],"rank":"Normal","description":"Creates an interactive shell via Javascript with access to Firefox's XPCOM API","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"NodeJS","arch":"nodejs","privileged":"false","size":555,"name":"Command Shell, Bind TCP (via nodejs)","fullname":"payload/nodejs/shell_bind_tcp","authors":["joev \u003cjoev@metasploit.com\u003e"],"rank":"Normal","description":"Creates an interactive shell via nodejs","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":404,"name":"Command Shell, Bind TCP (via python)","fullname":"payload/python/shell_bind_tcp","authors":["mumbai"],"rank":"Normal","description":"Creates an interactive shell via Python, encodes with base64 by design. Compatible with Python 2.4-2.7 and 3.4+.","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Java","arch":"java","privileged":"false","size":5249,"name":"Command Shell, Java Bind TCP Stager","fullname":"payload/java/shell/bind_tcp","authors":["mihi","egypt \u003cegypt@metasploit.com\u003e"],"rank":"Normal","description":"Spawn a piped command shell (cmd.exe on Windows, /bin/sh everywhere else). Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Java","arch":"java","privileged":"false","size":5249,"name":"Command Shell, Java Reverse TCP Stager","fullname":"payload/java/shell/reverse_tcp","authors":["mihi","egypt \u003cegypt@metasploit.com\u003e"],"rank":"Normal","description":"Spawn a piped command shell (cmd.exe on Windows, /bin/sh everywhere else). Connect back stager","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Firefox","arch":"firefox","privileged":"false","size":7378,"name":"Command Shell, Reverse TCP (via Firefox XPCOM script)","fullname":"payload/firefox/shell_reverse_tcp","authors":["joev \u003cjoev@metasploit.com\u003e"],"rank":"Normal","description":"Creates an interactive shell via Javascript with access to Firefox's XPCOM API","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"NodeJS","arch":"nodejs","privileged":"false","size":788,"name":"Command Shell, Reverse TCP (via nodejs)","fullname":"payload/nodejs/shell_reverse_tcp","authors":["RageLtMan","joev \u003cjoev@metasploit.com\u003e"],"rank":"Normal","description":"Creates an interactive shell via nodejs","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":384,"name":"Command Shell, Reverse TCP (via python)","fullname":"payload/python/shell_reverse_tcp","authors":["Ben Campbell \u003ceat_meatballs@hotmail.co.uk\u003e"],"rank":"Normal","description":"Creates an interactive shell via Python, encodes with base64 by design. Compatible with Python 2.4-2.7 and 3.4+.","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"NodeJS","arch":"nodejs","privileged":"false","size":816,"name":"Command Shell, Reverse TCP SSL (via nodejs)","fullname":"payload/nodejs/shell_reverse_tcp_ssl","authors":["RageLtMan","joev \u003cjoev@metasploit.com\u003e"],"rank":"Normal","description":"Creates an interactive shell via nodejs, uses SSL","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":404,"name":"Command Shell, Reverse TCP SSL (via python)","fullname":"payload/python/shell_reverse_tcp_ssl","authors":["RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Creates an interactive shell via Python, uses SSL, encodes with base64 by design. Compatible with Python 2.6-2.7 and 3.4+.","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":380,"name":"Command Shell, Reverse UDP (via python)","fullname":"payload/python/shell_reverse_udp","authors":["RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Creates an interactive shell via Python, encodes with base64 by design. Compatible with Python 2.6-2.7 and 3.4+.","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"All","arch":"x86, x86_64, x64, mips, mipsle, mipsbe, mips64, mips64le, ppc, ppce500v2, ppc64, ppc64le, cbea, cbea64, sparc, sparc64, armle, armbe, aarch64, cmd, php, java, ruby, dalvik, python, nodejs, firefox, zarch, r","privileged":"false","size":0,"name":"Custom Payload","fullname":"payload/generic/custom","authors":["scriptjunkie \u003cscriptjunkie@scriptjunkie.us\u003e"],"rank":"Normal","description":"Use custom string or file as payload. Set either PAYLOADFILE or PAYLOADSTR.","options":[{"name":"PAYLOADFILE","display_value":"","required":"false","description":"The file to read the payload from"},{"name":"PAYLOADSTR","display_value":"","required":"false","description":"The string to use as a payload"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":275,"name":"DNS TXT Record Payload Download and Execution","fullname":"payload/windows/dns_txt_query_exec","authors":["corelanc0d3r \u003cpeter.ve@corelan.be\u003e"],"rank":"Normal","description":"Performs a TXT query against a series of DNS record(s) and executes the returned payload","options":[{"name":"DNSZONE","display_value":"","required":"true","description":"The DNS zone to query"}]}
[0m{"platform":"Firefox","arch":"firefox","privileged":"false","size":1028,"name":"Firefox XPCOM Execute Command","fullname":"payload/firefox/exec","authors":["joev \u003cjoev@metasploit.com\u003e"],"rank":"Normal","description":"This module runs a shell command on the target OS without touching the disk. On Windows, this command will flash the command prompt momentarily. This can be avoided by setting WSCRIPT to true, which drops a jscript \"launcher\" to disk that hides the prompt.","options":[{"name":"CMD","display_value":"touch /tmp/a.txt","required":"true","description":"The command string to execute"},{"name":"WSCRIPT","display_value":"false","required":"true","description":"On Windows, drop a vbscript to hide the cmd prompt"}]}
[0m{"platform":"BSD","arch":"x86","privileged":"false","size":0,"name":"FreeBSD Meterpreter Service, Bind TCP","fullname":"payload/bsd/x86/metsvc_bind_tcp","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Stub payload for interacting with a Meterpreter Service","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"BSD","arch":"x86","privileged":"false","size":0,"name":"FreeBSD Meterpreter Service, Reverse TCP Inline","fullname":"payload/bsd/x86/metsvc_reverse_tcp","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Stub payload for interacting with a Meterpreter Service","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"All","arch":"x86, x86_64, x64, mips, mipsle, mipsbe, mips64, mips64le, ppc, ppce500v2, ppc64, ppc64le, cbea, cbea64, sparc, sparc64, armle, armbe, aarch64, cmd, php, java, ruby, dalvik, python, nodejs, firefox, zarch, r","privileged":"false","size":0,"name":"Generic Command Shell, Bind TCP Inline","fullname":"payload/generic/shell_bind_tcp","authors":["skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"All","arch":"x86, x86_64, x64, mips, mipsle, mipsbe, mips64, mips64le, ppc, ppce500v2, ppc64, ppc64le, cbea, cbea64, sparc, sparc64, armle, armbe, aarch64, cmd, php, java, ruby, dalvik, python, nodejs, firefox, zarch, r","privileged":"false","size":0,"name":"Generic Command Shell, Reverse TCP Inline","fullname":"payload/generic/shell_reverse_tcp","authors":["skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Mainframe","arch":"cmd","privileged":"false","size":150,"name":"Generic JCL Test for Mainframe Exploits","fullname":"payload/cmd/mainframe/generic_jcl","authors":["Bigendian Smalls"],"rank":"Normal","description":"Provide JCL which can be used to submit a job to JES2 on z/OS which will exit and return 0. This can be used as a template for other JCL based payloads","options":[{"name":"ACTNUM","display_value":"MSFUSER-ACCTING-INFO","required":"true","description":"Accounting info for JCL JOB card"},{"name":"JCLASS","display_value":"A","required":"true","description":"Job Class for JCL JOB card"},{"name":"MSGCLASS","display_value":"Z","required":"true","description":"Message Class for JCL JOB card"},{"name":"MSGLEVEL","display_value":"(0,0)","required":"true","description":"Message Level for JCL JOB card"},{"name":"NOTIFY","display_value":"","required":"false","description":"Notify User for JCL JOB card"},{"name":"PGMNAME","display_value":"programmer name","required":"true","description":"Programmer name for JCL JOB card"}]}
[0m{"platform":"BSD, BSDi, Linux, OSX, Solaris, Windows","arch":"x86","privileged":"false","size":1,"name":"Generic x86 Debug Trap","fullname":"payload/generic/debug_trap","authors":["robert \u003crobertmetasploit@gmail.com\u003e"],"rank":"Normal","description":"Generate a debug trap in the target process","options":[]}
[0m{"platform":"BSD, BSDi, Linux, OSX, Solaris, Windows","arch":"x86","privileged":"false","size":2,"name":"Generic x86 Tight Loop","fullname":"payload/generic/tight_loop","authors":["jduck \u003cjduck@metasploit.com\u003e"],"rank":"Normal","description":"Generate a tight loop in the target process","options":[]}
[0m{"platform":"All","arch":"x86, x86_64, x64, mips, mipsle, mipsbe, mips64, mips64le, ppc, ppce500v2, ppc64, ppc64le, cbea, cbea64, sparc, sparc64, armle, armbe, aarch64, cmd, php, tty, java, ruby, dalvik, python, nodejs, firefox, zarch, r","privileged":"false","size":0,"name":"Interact with Established SSH Connection","fullname":"payload/generic/ssh/interact","authors":["Spencer McIntyre"],"rank":"Normal","description":"Interacts with a shell on an established SSH connection","options":[]}
[0m{"platform":"Mainframe","arch":"cmd","privileged":"false","size":3156,"name":"JCL to Escalate Privileges","fullname":"payload/cmd/mainframe/apf_privesc_jcl","authors":["Bigendian Smalls","Ayoub"],"rank":"Normal","description":"(Elevate privileges for user. Adds SYSTEM SPECIAL and BPX.SUPERUSER to user profile. Does this by using an unsecured/updateable APF authorized library (APFLIB) and updating the user's ACEE using this program/library. Note: This privesc only works with z/OS systems using RACF, no other ESM is supported.)","options":[{"name":"ACTNUM","display_value":"MSFUSER-ACCTING-INFO","required":"true","description":"Accounting info for JCL JOB card"},{"name":"APFLIB","display_value":"SYS1.LINKLIB","required":"true","description":"APF Authorized Library to use"},{"name":"JCLASS","display_value":"A","required":"true","description":"Job Class for JCL JOB card"},{"name":"MSGCLASS","display_value":"Z","required":"true","description":"Message Class for JCL JOB card"},{"name":"MSGLEVEL","display_value":"(0,0)","required":"true","description":"Message Level for JCL JOB card"},{"name":"NOTIFY","display_value":"","required":"false","description":"Notify User for JCL JOB card"},{"name":"PGMNAME","display_value":"programmer name","required":"true","description":"Programmer name for JCL JOB card"},{"name":"RPORT","display_value":"21","required":"true","description":"The target port"}]}
[0m{"platform":"Java","arch":"java","privileged":"false","size":7490,"name":"Java Command Shell, Reverse TCP Inline","fullname":"payload/java/shell_reverse_tcp","authors":["mihi","egypt \u003cegypt@metasploit.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux, OSX, Solaris, Unix, Windows","arch":"java","privileged":"false","size":1593,"name":"Java JSP Command Shell, Bind TCP Inline","fullname":"payload/java/jsp_shell_bind_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELL","display_value":"","required":"false","description":"The system shell to use."}]}
[0m{"platform":"Linux, OSX, Solaris, Unix, Windows","arch":"java","privileged":"false","size":0,"name":"Java JSP Command Shell, Reverse TCP Inline","fullname":"payload/java/jsp_shell_reverse_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELL","display_value":"","required":"false","description":"The system shell to use."}]}
[0m{"platform":"Java","arch":"java","privileged":"false","size":5249,"name":"Java Meterpreter, Java Bind TCP Stager","fullname":"payload/java/meterpreter/bind_tcp","authors":["mihi","egypt \u003cegypt@metasploit.com\u003e","OJ Reeves"],"rank":"Normal","description":"Run a meterpreter server in Java. Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Java","arch":"java","privileged":"false","size":5443,"name":"Java Meterpreter, Java Reverse HTTP Stager","fullname":"payload/java/meterpreter/reverse_http","authors":["mihi","egypt \u003cegypt@metasploit.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Run a meterpreter server in Java. Tunnel communication over HTTP","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Java","arch":"java","privileged":"false","size":6300,"name":"Java Meterpreter, Java Reverse HTTPS Stager","fullname":"payload/java/meterpreter/reverse_https","authors":["mihi","egypt \u003cegypt@metasploit.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Run a meterpreter server in Java. Tunnel communication over HTTPS","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Java","arch":"java","privileged":"false","size":5249,"name":"Java Meterpreter, Java Reverse TCP Stager","fullname":"payload/java/meterpreter/reverse_tcp","authors":["mihi","egypt \u003cegypt@metasploit.com\u003e","OJ Reeves"],"rank":"Normal","description":"Run a meterpreter server in Java. Connect back stager","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"armbe","privileged":"false","size":118,"name":"Linux ARM Big Endian Command Shell, Bind TCP Inline","fullname":"payload/linux/armbe/shell_bind_tcp","authors":["Balazs Bucsay @xoreipeip \u003cbalazs.bucsay[-at-]rycon[-dot-]hu\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"CMD","display_value":"/bin/sh","required":"true","description":"The command to execute."},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"armle","privileged":"true","size":119,"name":"Linux Add User","fullname":"payload/linux/armle/adduser","authors":["Jonathan Salwan"],"rank":"Normal","description":"Create a new user with UID 0","options":[{"name":"PASS","display_value":"metasploit","required":"true","description":"The password for this user"},{"name":"SHELL","display_value":"/bin/sh","required":"false","description":"The shell for this user"},{"name":"USER","display_value":"metasploit","required":"true","description":"The username to create"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"true","size":97,"name":"Linux Add User","fullname":"payload/linux/x86/adduser","authors":["skape \u003cmmiller@hick.org\u003e","vlad902 \u003cvlad902@gmail.com\u003e","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Create a new user with UID 0","options":[{"name":"PASS","display_value":"metasploit","required":"true","description":"The password for this user"},{"name":"SHELL","display_value":"/bin/sh","required":"false","description":"The shell for this user"},{"name":"USER","display_value":"metasploit","required":"true","description":"The username to create"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":36,"name":"Linux Chmod","fullname":"payload/linux/x86/chmod","authors":["kris katterjohn \u003ckatterjohn@gmail.com\u003e"],"rank":"Normal","description":"Runs chmod on specified file with specified mode","options":[{"name":"FILE","display_value":"/etc/shadow","required":"true","description":"Filename to chmod"},{"name":"MODE","display_value":"0666","required":"true","description":"File mode (octal)"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":121,"name":"Linux Command Shell, Bind IPv6 TCP Stager (Linux x86)","fullname":"payload/linux/x86/shell/bind_ipv6_tcp","authors":["skape \u003cmmiller@hick.org\u003e","kris katterjohn \u003ckatterjohn@gmail.com\u003e","egypt \u003cegypt@metasploit.com\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Listen for an IPv6 connection (Linux x86)","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":166,"name":"Linux Command Shell, Bind IPv6 TCP Stager with UUID Support (Linux x86)","fullname":"payload/linux/x86/shell/bind_ipv6_tcp_uuid","authors":["skape \u003cmmiller@hick.org\u003e","kris katterjohn \u003ckatterjohn@gmail.com\u003e","egypt \u003cegypt@metasploit.com\u003e","OJ Reeves"],"rank":"Normal","description":"Spawn a command shell (staged). Listen for an IPv6 connection with UUID Support (Linux x86)","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"mipsbe","privileged":"false","size":232,"name":"Linux Command Shell, Bind TCP Inline","fullname":"payload/linux/mipsbe/shell_bind_tcp","authors":["scut","vaicebine","Vlatko Kosturjak","juan vazquez \u003cjuan.vazquez@metasploit.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"mipsle","privileged":"false","size":232,"name":"Linux Command Shell, Bind TCP Inline","fullname":"payload/linux/mipsle/shell_bind_tcp","authors":["scut","vaicebine","Vlatko Kosturjak","juan vazquez \u003cjuan.vazquez@metasploit.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"ppc, cbea","privileged":"false","size":223,"name":"Linux Command Shell, Bind TCP Inline","fullname":"payload/linux/ppc/shell_bind_tcp","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"ppc64, cbea64","privileged":"false","size":223,"name":"Linux Command Shell, Bind TCP Inline","fullname":"payload/linux/ppc64/shell_bind_tcp","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"x64","privileged":"false","size":86,"name":"Linux Command Shell, Bind TCP Inline","fullname":"payload/linux/x64/shell_bind_tcp","authors":["ricky"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":78,"name":"Linux Command Shell, Bind TCP Inline","fullname":"payload/linux/x86/shell_bind_tcp","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":90,"name":"Linux Command Shell, Bind TCP Inline (IPv6)","fullname":"payload/linux/x86/shell_bind_ipv6_tcp","authors":["kris katterjohn \u003ckatterjohn@gmail.com\u003e"],"rank":"Normal","description":"Listen for a connection over IPv6 and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"x64","privileged":"false","size":51,"name":"Linux Command Shell, Bind TCP Random Port Inline","fullname":"payload/linux/x64/shell_bind_tcp_random_port","authors":["Geyslan G. Bem \u003cgeyslan@gmail.com\u003e"],"rank":"Normal","description":"Listen for a connection in a random port and spawn a command shell. Use nmap to discover the open port: 'nmap -sS target -p-'.","options":[]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":57,"name":"Linux Command Shell, Bind TCP Random Port Inline","fullname":"payload/linux/x86/shell_bind_tcp_random_port","authors":["Geyslan G. Bem \u003cgeyslan@gmail.com\u003e","Aleh Boitsau \u003cinfosecurity@ya.ru\u003e"],"rank":"Normal","description":"Listen for a connection in a random port and spawn a command shell. Use nmap to discover the open port: 'nmap -sS target -p-'.","options":[]}
[0m{"platform":"Linux","arch":"x64","privileged":"false","size":78,"name":"Linux Command Shell, Bind TCP Stager","fullname":"payload/linux/x64/shell/bind_tcp","authors":["ricky"],"rank":"Normal","description":"Spawn a command shell (staged). Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":63,"name":"Linux Command Shell, Bind TCP Stager","fullname":"payload/linux/x86/shell/bind_nonx_tcp","authors":["skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":111,"name":"Linux Command Shell, Bind TCP Stager (Linux x86)","fullname":"payload/linux/x86/shell/bind_tcp","authors":["skape \u003cmmiller@hick.org\u003e","egypt \u003cegypt@metasploit.com\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Listen for a connection (Linux x86)","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":156,"name":"Linux Command Shell, Bind TCP Stager with UUID Support (Linux x86)","fullname":"payload/linux/x86/shell/bind_tcp_uuid","authors":["skape \u003cmmiller@hick.org\u003e","egypt \u003cegypt@metasploit.com\u003e","OJ Reeves"],"rank":"Normal","description":"Spawn a command shell (staged). Listen for a connection with UUID Support (Linux x86)","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"ppc, cbea","privileged":"false","size":171,"name":"Linux Command Shell, Find Port Inline","fullname":"payload/linux/ppc/shell_find_port","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Spawn a shell on an established connection","options":[{"name":"CPORT","display_value":"64855","required":"false","description":"The local client port"}]}
[0m{"platform":"Linux","arch":"ppc64, cbea64","privileged":"false","size":171,"name":"Linux Command Shell, Find Port Inline","fullname":"payload/linux/ppc64/shell_find_port","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Spawn a shell on an established connection","options":[{"name":"CPORT","display_value":"33975","required":"false","description":"The local client port"}]}
[0m{"platform":"Linux","arch":"x64","privileged":"false","size":91,"name":"Linux Command Shell, Find Port Inline","fullname":"payload/linux/x64/shell_find_port","authors":["mak"],"rank":"Normal","description":"Spawn a shell on an established connection","options":[{"name":"CPORT","display_value":"46813","required":"false","description":"The local client port"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":62,"name":"Linux Command Shell, Find Port Inline","fullname":"payload/linux/x86/shell_find_port","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Spawn a shell on an established connection","options":[{"name":"CPORT","display_value":"40604","required":"false","description":"The local client port"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":69,"name":"Linux Command Shell, Find Tag Inline","fullname":"payload/linux/x86/shell_find_tag","authors":["skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Spawn a shell on an established connection (proxy/nat safe)","options":[]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":37,"name":"Linux Command Shell, Find Tag Stager","fullname":"payload/linux/x86/shell/find_tag","authors":["skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Use an established connection","options":[]}
[0m{"platform":"Linux","arch":"aarch64","privileged":"false","size":152,"name":"Linux Command Shell, Reverse TCP Inline","fullname":"payload/linux/aarch64/shell_reverse_tcp","authors":[],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELL","display_value":"/bin/sh","required":"true","description":"The shell to execute."}]}
[0m{"platform":"Linux","arch":"armle","privileged":"false","size":208,"name":"Linux Command Shell, Reverse TCP Inline","fullname":"payload/linux/armle/shell_bind_tcp","authors":["civ","hal"],"rank":"Normal","description":"Connect to target and spawn a command shell","options":[{"name":"ARGV0","display_value":"sh","required":"false","description":"argv[0] to pass to execve"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELL","display_value":"/bin/sh","required":"true","description":"The shell to execute."}]}
[0m{"platform":"Linux","arch":"armle","privileged":"false","size":172,"name":"Linux Command Shell, Reverse TCP Inline","fullname":"payload/linux/armle/shell_reverse_tcp","authors":["civ"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"ARGV0","display_value":"sh","required":"false","description":"argv[0] to pass to execve"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELL","display_value":"/bin/sh","required":"true","description":"The shell to execute."}]}
[0m{"platform":"Linux","arch":"mipsbe","privileged":"false","size":0,"name":"Linux Command Shell, Reverse TCP Inline","fullname":"payload/linux/mipsbe/shell_reverse_tcp","authors":["rigan \u003cimrigan@gmail.com\u003e","juan vazquez \u003cjuan.vazquez@metasploit.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"mipsle","privileged":"false","size":0,"name":"Linux Command Shell, Reverse TCP Inline","fullname":"payload/linux/mipsle/shell_reverse_tcp","authors":["rigan \u003cimrigan@gmail.com\u003e","juan vazquez \u003cjuan.vazquez@metasploit.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"ppc, cbea","privileged":"false","size":183,"name":"Linux Command Shell, Reverse TCP Inline","fullname":"payload/linux/ppc/shell_reverse_tcp","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"ppc64, cbea64","privileged":"false","size":183,"name":"Linux Command Shell, Reverse TCP Inline","fullname":"payload/linux/ppc64/shell_reverse_tcp","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"x64","privileged":"false","size":74,"name":"Linux Command Shell, Reverse TCP Inline","fullname":"payload/linux/x64/shell_reverse_tcp","authors":["ricky"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":68,"name":"Linux Command Shell, Reverse TCP Inline","fullname":"payload/linux/x86/shell_reverse_tcp","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e","joev \u003cjoev@metasploit.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"CMD","display_value":"/bin/sh","required":"true","description":"The command string to execute"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":143,"name":"Linux Command Shell, Reverse TCP Inline (IPv6)","fullname":"payload/linux/x86/shell_reverse_tcp_ipv6","authors":["Matteo Malvica \u003cmatteo@malvica.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell over IPv6","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"mipsbe","privileged":"false","size":272,"name":"Linux Command Shell, Reverse TCP Stager","fullname":"payload/linux/mipsbe/shell/reverse_tcp","authors":["juan vazquez \u003cjuan.vazquez@metasploit.com\u003e","tkmru"],"rank":"Normal","description":"Spawn a command shell (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"mipsle","privileged":"false","size":272,"name":"Linux Command Shell, Reverse TCP Stager","fullname":"payload/linux/mipsle/shell/reverse_tcp","authors":["juan vazquez \u003cjuan.vazquez@metasploit.com\u003e","tkmru"],"rank":"Normal","description":"Spawn a command shell (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"x64","privileged":"false","size":130,"name":"Linux Command Shell, Reverse TCP Stager","fullname":"payload/linux/x64/shell/reverse_tcp","authors":["ricky","tkmru"],"rank":"Normal","description":"Spawn a command shell (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":50,"name":"Linux Command Shell, Reverse TCP Stager","fullname":"payload/linux/x86/shell/reverse_nonx_tcp","authors":["skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":123,"name":"Linux Command Shell, Reverse TCP Stager","fullname":"payload/linux/x86/shell/reverse_tcp","authors":["skape \u003cmmiller@hick.org\u003e","egypt \u003cegypt@metasploit.com\u003e","tkmru"],"rank":"Normal","description":"Spawn a command shell (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":166,"name":"Linux Command Shell, Reverse TCP Stager","fullname":"payload/linux/x86/shell/reverse_tcp_uuid","authors":["skape \u003cmmiller@hick.org\u003e","egypt \u003cegypt@metasploit.com\u003e","OJ Reeves"],"rank":"Normal","description":"Spawn a command shell (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":77,"name":"Linux Command Shell, Reverse TCP Stager (IPv6)","fullname":"payload/linux/x86/shell/reverse_ipv6_tcp","authors":["skape \u003cmmiller@hick.org\u003e","kris katterjohn \u003ckatterjohn@gmail.com\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Connect back to attacker over IPv6","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"IPv6 scope ID, for link-local addresses"}]}
[0m{"platform":"Linux","arch":"armle","privileged":"false","size":22,"name":"Linux Execute Command","fullname":"payload/linux/armle/exec","authors":["Jonathan Salwan"],"rank":"Normal","description":"Execute an arbitrary command","options":[{"name":"CMD","display_value":"","required":"true","description":"The command string to execute"}]}
[0m{"platform":"Linux","arch":"mipsbe","privileged":"false","size":48,"name":"Linux Execute Command","fullname":"payload/linux/mipsbe/exec","authors":["Michael Messner \u003cdevnull@s3cur1ty.de\u003e","entropy \u003centropy@phiral.net\u003e"],"rank":"Normal","description":"A very small shellcode for executing commands. This module is sometimes helpful for testing purposes.","options":[{"name":"CMD","display_value":"","required":"true","description":"The command string to execute"}]}
[0m{"platform":"Linux","arch":"mipsle","privileged":"false","size":48,"name":"Linux Execute Command","fullname":"payload/linux/mipsle/exec","authors":["Michael Messner \u003cdevnull@s3cur1ty.de\u003e","entropy \u003centropy@phiral.net\u003e"],"rank":"Normal","description":"A very small shellcode for executing commands. This module is sometimes helpful for testing purposes as well as on targets with extremely limited buffer space.","options":[{"name":"CMD","display_value":"","required":"true","description":"The command string to execute"}]}
[0m{"platform":"Linux","arch":"x64","privileged":"false","size":21,"name":"Linux Execute Command","fullname":"payload/linux/x64/exec","authors":["ricky","Geyslan G. Bem \u003cgeyslan@gmail.com\u003e"],"rank":"Normal","description":"Execute an arbitrary command or just a /bin/sh shell","options":[{"name":"CMD","display_value":"","required":"false","description":"The command string to execute"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":20,"name":"Linux Execute Command","fullname":"payload/linux/x86/exec","authors":["vlad902 \u003cvlad902@gmail.com\u003e","Geyslan G. Bem \u003cgeyslan@gmail.com\u003e"],"rank":"Normal","description":"Execute an arbitrary command or just a /bin/sh shell","options":[{"name":"CMD","display_value":"","required":"false","description":"The command string to execute"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":0,"name":"Linux Meterpreter Service, Bind TCP","fullname":"payload/linux/x86/metsvc_bind_tcp","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Stub payload for interacting with a Meterpreter Service","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":0,"name":"Linux Meterpreter Service, Reverse TCP Inline","fullname":"payload/linux/x86/metsvc_reverse_tcp","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Stub payload for interacting with a Meterpreter Service","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"armle","privileged":"false","size":232,"name":"Linux Meterpreter, Bind TCP Stager","fullname":"payload/linux/armle/meterpreter/bind_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","nemo \u003cnemo@felinemenace.org\u003e"],"rank":"Normal","description":"Inject the mettle server payload (staged). Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"aarch64","privileged":"false","size":1136368,"name":"Linux Meterpreter, Reverse HTTP Inline","fullname":"payload/linux/aarch64/meterpreter_reverse_http","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"armbe","privileged":"false","size":1058860,"name":"Linux Meterpreter, Reverse HTTP Inline","fullname":"payload/linux/armbe/meterpreter_reverse_http","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"armle","privileged":"false","size":1059032,"name":"Linux Meterpreter, Reverse HTTP Inline","fullname":"payload/linux/armle/meterpreter_reverse_http","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"mips64","privileged":"false","size":1615736,"name":"Linux Meterpreter, Reverse HTTP Inline","fullname":"payload/linux/mips64/meterpreter_reverse_http","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"mipsbe","privileged":"false","size":1513308,"name":"Linux Meterpreter, Reverse HTTP Inline","fullname":"payload/linux/mipsbe/meterpreter_reverse_http","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"mipsle","privileged":"false","size":1516020,"name":"Linux Meterpreter, Reverse HTTP Inline","fullname":"payload/linux/mipsle/meterpreter_reverse_http","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"ppc","privileged":"false","size":1213704,"name":"Linux Meterpreter, Reverse HTTP Inline","fullname":"payload/linux/ppc/meterpreter_reverse_http","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"ppc64le","privileged":"false","size":1238248,"name":"Linux Meterpreter, Reverse HTTP Inline","fullname":"payload/linux/ppc64le/meterpreter_reverse_http","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"ppce500v2","privileged":"false","size":1166384,"name":"Linux Meterpreter, Reverse HTTP Inline","fullname":"payload/linux/ppce500v2/meterpreter_reverse_http","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"x64","privileged":"false","size":1068640,"name":"Linux Meterpreter, Reverse HTTP Inline","fullname":"payload/linux/x64/meterpreter_reverse_http","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":1137112,"name":"Linux Meterpreter, Reverse HTTP Inline","fullname":"payload/linux/x86/meterpreter_reverse_http","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"zarch","privileged":"false","size":1270992,"name":"Linux Meterpreter, Reverse HTTP Inline","fullname":"payload/linux/zarch/meterpreter_reverse_http","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"aarch64","privileged":"false","size":1136368,"name":"Linux Meterpreter, Reverse HTTPS Inline","fullname":"payload/linux/aarch64/meterpreter_reverse_https","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"armbe","privileged":"false","size":1058860,"name":"Linux Meterpreter, Reverse HTTPS Inline","fullname":"payload/linux/armbe/meterpreter_reverse_https","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"armle","privileged":"false","size":1059032,"name":"Linux Meterpreter, Reverse HTTPS Inline","fullname":"payload/linux/armle/meterpreter_reverse_https","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"mips64","privileged":"false","size":1615736,"name":"Linux Meterpreter, Reverse HTTPS Inline","fullname":"payload/linux/mips64/meterpreter_reverse_https","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"mipsbe","privileged":"false","size":1513308,"name":"Linux Meterpreter, Reverse HTTPS Inline","fullname":"payload/linux/mipsbe/meterpreter_reverse_https","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"mipsle","privileged":"false","size":1516020,"name":"Linux Meterpreter, Reverse HTTPS Inline","fullname":"payload/linux/mipsle/meterpreter_reverse_https","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"ppc","privileged":"false","size":1213704,"name":"Linux Meterpreter, Reverse HTTPS Inline","fullname":"payload/linux/ppc/meterpreter_reverse_https","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"ppc64le","privileged":"false","size":1238248,"name":"Linux Meterpreter, Reverse HTTPS Inline","fullname":"payload/linux/ppc64le/meterpreter_reverse_https","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"ppce500v2","privileged":"false","size":1166384,"name":"Linux Meterpreter, Reverse HTTPS Inline","fullname":"payload/linux/ppce500v2/meterpreter_reverse_https","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"x64","privileged":"false","size":1068640,"name":"Linux Meterpreter, Reverse HTTPS Inline","fullname":"payload/linux/x64/meterpreter_reverse_https","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":1137112,"name":"Linux Meterpreter, Reverse HTTPS Inline","fullname":"payload/linux/x86/meterpreter_reverse_https","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"zarch","privileged":"false","size":1270992,"name":"Linux Meterpreter, Reverse HTTPS Inline","fullname":"payload/linux/zarch/meterpreter_reverse_https","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Linux","arch":"aarch64","privileged":"false","size":1136368,"name":"Linux Meterpreter, Reverse TCP Inline","fullname":"payload/linux/aarch64/meterpreter_reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"armbe","privileged":"false","size":1058860,"name":"Linux Meterpreter, Reverse TCP Inline","fullname":"payload/linux/armbe/meterpreter_reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"armle","privileged":"false","size":1059032,"name":"Linux Meterpreter, Reverse TCP Inline","fullname":"payload/linux/armle/meterpreter_reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"mips64","privileged":"false","size":1615736,"name":"Linux Meterpreter, Reverse TCP Inline","fullname":"payload/linux/mips64/meterpreter_reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"mipsbe","privileged":"false","size":1513308,"name":"Linux Meterpreter, Reverse TCP Inline","fullname":"payload/linux/mipsbe/meterpreter_reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"mipsle","privileged":"false","size":1516020,"name":"Linux Meterpreter, Reverse TCP Inline","fullname":"payload/linux/mipsle/meterpreter_reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"ppc","privileged":"false","size":1213704,"name":"Linux Meterpreter, Reverse TCP Inline","fullname":"payload/linux/ppc/meterpreter_reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"ppc64le","privileged":"false","size":1238248,"name":"Linux Meterpreter, Reverse TCP Inline","fullname":"payload/linux/ppc64le/meterpreter_reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"ppce500v2","privileged":"false","size":1166384,"name":"Linux Meterpreter, Reverse TCP Inline","fullname":"payload/linux/ppce500v2/meterpreter_reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"x64","privileged":"false","size":1068640,"name":"Linux Meterpreter, Reverse TCP Inline","fullname":"payload/linux/x64/meterpreter_reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":1137112,"name":"Linux Meterpreter, Reverse TCP Inline","fullname":"payload/linux/x86/meterpreter_reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"zarch","privileged":"false","size":1270992,"name":"Linux Meterpreter, Reverse TCP Inline","fullname":"payload/linux/zarch/meterpreter_reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"aarch64","privileged":"false","size":212,"name":"Linux Meterpreter, Reverse TCP Stager","fullname":"payload/linux/aarch64/meterpreter/reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e"],"rank":"Normal","description":"Inject the mettle server payload (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"armle","privileged":"false","size":260,"name":"Linux Meterpreter, Reverse TCP Stager","fullname":"payload/linux/armle/meterpreter/reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","nemo \u003cnemo@felinemenace.org\u003e","tkmru"],"rank":"Normal","description":"Inject the mettle server payload (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"mipsbe","privileged":"false","size":272,"name":"Linux Meterpreter, Reverse TCP Stager","fullname":"payload/linux/mipsbe/meterpreter/reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","juan vazquez \u003cjuan.vazquez@metasploit.com\u003e","tkmru"],"rank":"Normal","description":"Inject the mettle server payload (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"mipsle","privileged":"false","size":272,"name":"Linux Meterpreter, Reverse TCP Stager","fullname":"payload/linux/mipsle/meterpreter/reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","juan vazquez \u003cjuan.vazquez@metasploit.com\u003e","tkmru"],"rank":"Normal","description":"Inject the mettle server payload (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux, Linux","arch":"x64","privileged":"false","size":78,"name":"Linux Mettle x64, Bind TCP Stager","fullname":"payload/linux/x64/meterpreter/bind_tcp","authors":["Brent Cook \u003cbcook@rapid7.com\u003e","ricky"],"rank":"Normal","description":"Inject the mettle server payload (staged). Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux, Linux","arch":"x64","privileged":"false","size":130,"name":"Linux Mettle x64, Reverse TCP Stager","fullname":"payload/linux/x64/meterpreter/reverse_tcp","authors":["Brent Cook \u003cbcook@rapid7.com\u003e","ricky","tkmru"],"rank":"Normal","description":"Inject the mettle server payload (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux, Linux","arch":"x86","privileged":"false","size":121,"name":"Linux Mettle x86, Bind IPv6 TCP Stager (Linux x86)","fullname":"payload/linux/x86/meterpreter/bind_ipv6_tcp","authors":["William Webb \u003cwilliam_webb@rapid7.com\u003e","kris katterjohn \u003ckatterjohn@gmail.com\u003e","egypt \u003cegypt@metasploit.com\u003e"],"rank":"Normal","description":"Inject the mettle server payload (staged). Listen for an IPv6 connection (Linux x86)","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux, Linux","arch":"x86","privileged":"false","size":166,"name":"Linux Mettle x86, Bind IPv6 TCP Stager with UUID Support (Linux x86)","fullname":"payload/linux/x86/meterpreter/bind_ipv6_tcp_uuid","authors":["William Webb \u003cwilliam_webb@rapid7.com\u003e","kris katterjohn \u003ckatterjohn@gmail.com\u003e","egypt \u003cegypt@metasploit.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the mettle server payload (staged). Listen for an IPv6 connection with UUID Support (Linux x86)","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux, Linux","arch":"x86","privileged":"false","size":63,"name":"Linux Mettle x86, Bind TCP Stager","fullname":"payload/linux/x86/meterpreter/bind_nonx_tcp","authors":["William Webb \u003cwilliam_webb@rapid7.com\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject the mettle server payload (staged). Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux, Linux","arch":"x86","privileged":"false","size":111,"name":"Linux Mettle x86, Bind TCP Stager (Linux x86)","fullname":"payload/linux/x86/meterpreter/bind_tcp","authors":["William Webb \u003cwilliam_webb@rapid7.com\u003e","skape \u003cmmiller@hick.org\u003e","egypt \u003cegypt@metasploit.com\u003e"],"rank":"Normal","description":"Inject the mettle server payload (staged). Listen for a connection (Linux x86)","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux, Linux","arch":"x86","privileged":"false","size":156,"name":"Linux Mettle x86, Bind TCP Stager with UUID Support (Linux x86)","fullname":"payload/linux/x86/meterpreter/bind_tcp_uuid","authors":["William Webb \u003cwilliam_webb@rapid7.com\u003e","skape \u003cmmiller@hick.org\u003e","egypt \u003cegypt@metasploit.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the mettle server payload (staged). Listen for a connection with UUID Support (Linux x86)","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux, Linux","arch":"x86","privileged":"false","size":37,"name":"Linux Mettle x86, Find Tag Stager","fullname":"payload/linux/x86/meterpreter/find_tag","authors":["William Webb \u003cwilliam_webb@rapid7.com\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject the mettle server payload (staged). Use an established connection","options":[]}
[0m{"platform":"Linux, Linux","arch":"x86","privileged":"false","size":50,"name":"Linux Mettle x86, Reverse TCP Stager","fullname":"payload/linux/x86/meterpreter/reverse_nonx_tcp","authors":["William Webb \u003cwilliam_webb@rapid7.com\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject the mettle server payload (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux, Linux","arch":"x86","privileged":"false","size":123,"name":"Linux Mettle x86, Reverse TCP Stager","fullname":"payload/linux/x86/meterpreter/reverse_tcp","authors":["William Webb \u003cwilliam_webb@rapid7.com\u003e","skape \u003cmmiller@hick.org\u003e","egypt \u003cegypt@metasploit.com\u003e","tkmru"],"rank":"Normal","description":"Inject the mettle server payload (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux, Linux","arch":"x86","privileged":"false","size":166,"name":"Linux Mettle x86, Reverse TCP Stager","fullname":"payload/linux/x86/meterpreter/reverse_tcp_uuid","authors":["William Webb \u003cwilliam_webb@rapid7.com\u003e","skape \u003cmmiller@hick.org\u003e","egypt \u003cegypt@metasploit.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the mettle server payload (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux, Linux","arch":"x86","privileged":"false","size":77,"name":"Linux Mettle x86, Reverse TCP Stager (IPv6)","fullname":"payload/linux/x86/meterpreter/reverse_ipv6_tcp","authors":["William Webb \u003cwilliam_webb@rapid7.com\u003e","kris katterjohn \u003ckatterjohn@gmail.com\u003e"],"rank":"Normal","description":"Inject the mettle server payload (staged). Connect back to attacker over IPv6","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"IPv6 scope ID, for link-local addresses"}]}
[0m{"platform":"Linux","arch":"x86","privileged":"false","size":62,"name":"Linux Read File","fullname":"payload/linux/x86/read_file","authors":["hal"],"rank":"Normal","description":"Read up to 4096 bytes from the local file system and write it back out to the specified file descriptor","options":[{"name":"FD","display_value":"1","required":"true","description":"The file descriptor to write output to"},{"name":"PATH","display_value":"","required":"true","description":"The file path to read"}]}
[0m{"platform":"Linux","arch":"mipsbe","privileged":"false","size":32,"name":"Linux Reboot","fullname":"payload/linux/mipsbe/reboot","authors":["Michael Messner \u003cdevnull@s3cur1ty.de\u003e","rigan - \u003cimrigan@gmail.com\u003e"],"rank":"Normal","description":"A very small shellcode for rebooting the system. This payload is sometimes helpful for testing purposes or executing other payloads that rely on initial startup procedures.","options":[]}
[0m{"platform":"Linux","arch":"mipsle","privileged":"false","size":32,"name":"Linux Reboot","fullname":"payload/linux/mipsle/reboot","authors":["Michael Messner \u003cdevnull@s3cur1ty.de\u003e","rigan - \u003cimrigan@gmail.com\u003e"],"rank":"Normal","description":"A very small shellcode for rebooting the system. This payload is sometimes helpful for testing purposes.","options":[]}
[0m{"platform":"Linux","arch":"armle","privileged":"false","size":232,"name":"Linux dup2 Command Shell, Bind TCP Stager","fullname":"payload/linux/armle/shell/bind_tcp","authors":["nemo \u003cnemo@felinemenace.org\u003e"],"rank":"Normal","description":"dup2 socket in r12, then execve. Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"aarch64","privileged":"false","size":212,"name":"Linux dup2 Command Shell, Reverse TCP Stager","fullname":"payload/linux/aarch64/shell/reverse_tcp","authors":[],"rank":"Normal","description":"dup2 socket in x12, then execve. Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELL","display_value":"/bin/sh","required":"true","description":"The shell to execute."}]}
[0m{"platform":"Linux","arch":"armle","privileged":"false","size":260,"name":"Linux dup2 Command Shell, Reverse TCP Stager","fullname":"payload/linux/armle/shell/reverse_tcp","authors":["nemo \u003cnemo@felinemenace.org\u003e","tkmru"],"rank":"Normal","description":"dup2 socket in r12, then execve. Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Linux","arch":"x64","privileged":"false","size":94,"name":"Linux x64 Command Shell, Bind TCP Inline (IPv6)","fullname":"payload/linux/x64/shell_bind_ipv6_tcp","authors":["epi \u003cepibar052@gmail.com\u003e"],"rank":"Normal","description":"Listen for an IPv6 connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"x64","privileged":"false","size":90,"name":"Linux x64 Command Shell, Reverse TCP Inline (IPv6)","fullname":"payload/linux/x64/shell_reverse_ipv6_tcp","authors":["epi \u003cepibar052@gmail.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell over IPv6","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"IPv6 scope ID, for link-local addresses"}]}
[0m{"platform":"Linux","arch":"x64","privileged":"false","size":109,"name":"Linux x64 Pingback, Bind TCP Inline","fullname":"payload/linux/x64/pingback_bind_tcp","authors":["bwatters-r7"],"rank":"Normal","description":"Accept a connection from attacker and report UUID (Linux x64)","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Linux","arch":"x64","privileged":"false","size":125,"name":"Linux x64 Pingback, Reverse TCP Inline","fullname":"payload/linux/x64/pingback_reverse_tcp","authors":["bwatters-r7"],"rank":"Normal","description":"Connect back to attacker and report UUID (Linux x64)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"OSX","arch":"x86","privileged":"false","size":144,"name":"Mac OS X Inject Mach-O Bundle, Bind TCP Stager","fullname":"payload/osx/x86/bundleinject/bind_tcp","authors":["ddz \u003cddz@theta44.org\u003e"],"rank":"Normal","description":"Inject a custom Mach-O bundle into the exploited process. Listen, read length, read buffer, execute","options":[{"name":"BUNDLE","display_value":"","required":"true","description":"The local path to the Mach-O bundle to upload"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"OSX","arch":"x86","privileged":"false","size":123,"name":"Mac OS X Inject Mach-O Bundle, Reverse TCP Stager","fullname":"payload/osx/x86/bundleinject/reverse_tcp","authors":["ddz \u003cddz@theta44.org\u003e"],"rank":"Normal","description":"Inject a custom Mach-O bundle into the exploited process. Connect, read length, read buffer, execute","options":[{"name":"BUNDLE","display_value":"","required":"true","description":"The local path to the Mach-O bundle to upload"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"OSX","arch":"x86","privileged":"false","size":144,"name":"Mac OS X x86 iSight Photo Capture, Bind TCP Stager","fullname":"payload/osx/x86/isight/bind_tcp","authors":["ddz \u003cddz@theta44.org\u003e"],"rank":"Normal","description":"Inject a Mach-O bundle to capture a photo from the iSight (staged). Listen, read length, read buffer, execute","options":[{"name":"AUTOVIEW","display_value":"true","required":"true","description":"Automatically open the picture in a browser"},{"name":"BUNDLE","display_value":"/home/pflegusch/master/metasploit-framework/data/isight.bundle","required":"true","description":"The local path to the iSight Mach-O Bundle to upload"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"OSX","arch":"x86","privileged":"false","size":123,"name":"Mac OS X x86 iSight Photo Capture, Reverse TCP Stager","fullname":"payload/osx/x86/isight/reverse_tcp","authors":["ddz \u003cddz@theta44.org\u003e"],"rank":"Normal","description":"Inject a Mach-O bundle to capture a photo from the iSight (staged). Connect, read length, read buffer, execute","options":[{"name":"AUTOVIEW","display_value":"true","required":"true","description":"Automatically open the picture in a browser"},{"name":"BUNDLE","display_value":"/home/pflegusch/master/metasploit-framework/data/isight.bundle","required":"true","description":"The local path to the iSight Mach-O Bundle to upload"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Netware","arch":"x86","privileged":"false","size":279,"name":"NetWare Command Shell, Reverse TCP Stager","fullname":"payload/netware/shell/reverse_tcp","authors":["toto"],"rank":"Normal","description":"Connect to the NetWare console (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"OSX","arch":"x86","privileged":"false","size":152,"name":"OS X (vfork) Command Shell, Bind TCP Inline","fullname":"payload/osx/x86/vforkshell_bind_tcp","authors":["ddz \u003cddz@theta44.org\u003e"],"rank":"Normal","description":"Listen for a connection, vfork if necessary, and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"OSX","arch":"x86","privileged":"false","size":144,"name":"OS X (vfork) Command Shell, Bind TCP Stager","fullname":"payload/osx/x86/vforkshell/bind_tcp","authors":["ddz \u003cddz@theta44.org\u003e"],"rank":"Normal","description":"Call vfork() if necessary and spawn a command shell (staged). Listen, read length, read buffer, execute","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"OSX","arch":"x86","privileged":"false","size":131,"name":"OS X (vfork) Command Shell, Reverse TCP Inline","fullname":"payload/osx/x86/vforkshell_reverse_tcp","authors":["ddz \u003cddz@theta44.org\u003e"],"rank":"Normal","description":"Connect back to attacker, vfork if necessary, and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"OSX","arch":"x86","privileged":"false","size":123,"name":"OS X (vfork) Command Shell, Reverse TCP Stager","fullname":"payload/osx/x86/vforkshell/reverse_tcp","authors":["ddz \u003cddz@theta44.org\u003e"],"rank":"Normal","description":"Call vfork() if necessary and spawn a command shell (staged). Connect, read length, read buffer, execute","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"OSX","arch":"ppc","privileged":"false","size":224,"name":"OS X Command Shell, Bind TCP Inline","fullname":"payload/osx/ppc/shell_bind_tcp","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"OSX","arch":"x86","privileged":"false","size":74,"name":"OS X Command Shell, Bind TCP Inline","fullname":"payload/osx/x86/shell_bind_tcp","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"OSX","arch":"armle","privileged":"false","size":248,"name":"OS X Command Shell, Bind TCP Stager","fullname":"payload/osx/armle/shell/bind_tcp","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"OSX","arch":"ppc","privileged":"false","size":152,"name":"OS X Command Shell, Bind TCP Stager","fullname":"payload/osx/ppc/shell/bind_tcp","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"OSX","arch":"x86","privileged":"false","size":61,"name":"OS X Command Shell, Find Port Inline","fullname":"payload/osx/x86/shell_find_port","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Spawn a shell on an established connection","options":[{"name":"CPORT","display_value":"27967","required":"false","description":"The local client port"}]}
[0m{"platform":"OSX","arch":"ppc","privileged":"false","size":76,"name":"OS X Command Shell, Find Tag Stager","fullname":"payload/osx/ppc/shell/find_tag","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Use an established connection","options":[]}
[0m{"platform":"OSX","arch":"ppc","privileged":"false","size":164,"name":"OS X Command Shell, Reverse TCP Inline","fullname":"payload/osx/ppc/shell_reverse_tcp","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"OSX","arch":"x86","privileged":"false","size":65,"name":"OS X Command Shell, Reverse TCP Inline","fullname":"payload/osx/x86/shell_reverse_tcp","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"OSX","arch":"armle","privileged":"false","size":184,"name":"OS X Command Shell, Reverse TCP Stager","fullname":"payload/osx/armle/shell/reverse_tcp","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"OSX","arch":"ppc","privileged":"false","size":100,"name":"OS X Command Shell, Reverse TCP Stager","fullname":"payload/osx/ppc/shell/reverse_tcp","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"OSX","arch":"x86","privileged":"false","size":16,"name":"OS X Execute Command","fullname":"payload/osx/x86/exec","authors":["snagg \u003csnagg@openssl.it\u003e","argp \u003cargp@census-labs.com\u003e","joev \u003cjoev@metasploit.com\u003e"],"rank":"Normal","description":"Execute an arbitrary command","options":[{"name":"CMD","display_value":"","required":"true","description":"The command string to execute"}]}
[0m{"platform":"OSX","arch":"armle","privileged":"false","size":248,"name":"OS X Write and Execute Binary, Bind TCP Stager","fullname":"payload/osx/armle/execute/bind_tcp","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"/home/pflegusch/master/metasploit-framework/data/ipwn/ipwn","required":"true","description":"Full path to the file to execute"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"OSX","arch":"armle","privileged":"false","size":184,"name":"OS X Write and Execute Binary, Reverse TCP Stager","fullname":"payload/osx/armle/execute/reverse_tcp","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Spawn a command shell (staged). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"/home/pflegusch/master/metasploit-framework/data/ipwn/ipwn","required":"true","description":"Full path to the file to execute"}]}
[0m{"platform":"OSX","arch":"x64","privileged":"false","size":185,"name":"OS X dup2 Command Shell, Bind TCP Stager","fullname":"payload/osx/x64/dupandexecve/bind_tcp","authors":["nemo","nemo \u003cnemo@felinemenace.org\u003e"],"rank":"Normal","description":"dup2 socket in edi, then execve. Listen, read length, read buffer, execute","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"OSX","arch":"x64","privileged":"false","size":168,"name":"OS X dup2 Command Shell, Reverse TCP Stager","fullname":"payload/osx/x64/dupandexecve/reverse_tcp","authors":["nemo","nemo \u003cnemo@felinemenace.org\u003e"],"rank":"Normal","description":"dup2 socket in edi, then execve. Connect, read length, read buffer, execute","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"OSX","arch":"x64","privileged":"false","size":204,"name":"OS X dup2 Command Shell, Reverse TCP Stager with UUID Support (OSX x64)","fullname":"payload/osx/x64/dupandexecve/reverse_tcp_uuid","authors":["nemo","timwr"],"rank":"Normal","description":"dup2 socket in edi, then execve. Connect back to the attacker with UUID Support (OSX x64)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"OSX","arch":"x64","privileged":"false","size":23,"name":"OS X x64 Execute Command","fullname":"payload/osx/x64/exec","authors":["argp \u003cargp@census-labs.com\u003e","joev \u003cjoev@metasploit.com\u003e"],"rank":"Normal","description":"Execute an arbitrary command","options":[{"name":"CMD","display_value":"","required":"true","description":"The command string to execute"}]}
[0m{"platform":"OSX","arch":"x64","privileged":"false","size":136,"name":"OS X x64 Shell Bind TCP","fullname":"payload/osx/x64/shell_bind_tcp","authors":["nemo \u003cnemo@felinemenace.org\u003e"],"rank":"Normal","description":"Bind an arbitrary command to an arbitrary port","options":[{"name":"CMD","display_value":"/bin/sh","required":"true","description":"The command string to execute"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"OSX","arch":"x64","privileged":"false","size":128,"name":"OS X x64 Shell Reverse TCP","fullname":"payload/osx/x64/shell_reverse_tcp","authors":["nemo \u003cnemo@felinemenace.org\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"CMD","display_value":"/bin/sh","required":"true","description":"The command string to execute"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"OSX","arch":"x64","privileged":"false","size":53,"name":"OS X x64 say Shellcode","fullname":"payload/osx/x64/say","authors":["nemo \u003cnemo@felinemenace.org\u003e"],"rank":"Normal","description":"Say an arbitrary string outloud using Mac OS X text2speech","options":[{"name":"TEXT","display_value":"Hello!\u0000","required":"true","description":"The text to say"}]}
[0m{"platform":"OSX","arch":"x64","privileged":"false","size":107,"name":"OSX Command Shell, Find Tag Inline","fullname":"payload/osx/x64/shell_find_tag","authors":["nemo \u003cnemo@felinemenace.org\u003e"],"rank":"Normal","description":"Spawn a shell on an established connection (proxy/nat safe)","options":[{"name":"CMD","display_value":"/bin/sh","required":"true","description":"The command string to execute"},{"name":"TAG","display_value":"NEMO","required":"true","description":"The tag to test for"}]}
[0m{"platform":"OSX","arch":"x64","privileged":"false","size":185,"name":"OSX Meterpreter, Bind TCP Stager","fullname":"payload/osx/x64/meterpreter/bind_tcp","authors":["parchedmind","nologic","timwr","nemo \u003cnemo@felinemenace.org\u003e"],"rank":"Normal","description":"Inject the mettle server payload (staged). Listen, read length, read buffer, execute","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"OSX","arch":"x64","privileged":"false","size":810648,"name":"OSX Meterpreter, Reverse HTTP Inline","fullname":"payload/osx/x64/meterpreter_reverse_http","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"OSX","arch":"x64","privileged":"false","size":810648,"name":"OSX Meterpreter, Reverse HTTPS Inline","fullname":"payload/osx/x64/meterpreter_reverse_https","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"OSX","arch":"x64","privileged":"false","size":810648,"name":"OSX Meterpreter, Reverse TCP Inline","fullname":"payload/osx/x64/meterpreter_reverse_tcp","authors":["Adam Cammack \u003cadam_cammack@rapid7.com\u003e","Brent Cook \u003cbrent_cook@rapid7.com\u003e","timwr"],"rank":"Normal","description":"Run the Meterpreter / Mettle server payload (stageless)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"OSX","arch":"x64","privileged":"false","size":168,"name":"OSX Meterpreter, Reverse TCP Stager","fullname":"payload/osx/x64/meterpreter/reverse_tcp","authors":["parchedmind","nologic","timwr","nemo \u003cnemo@felinemenace.org\u003e"],"rank":"Normal","description":"Inject the mettle server payload (staged). Connect, read length, read buffer, execute","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"OSX","arch":"x64","privileged":"false","size":204,"name":"OSX Meterpreter, Reverse TCP Stager with UUID Support (OSX x64)","fullname":"payload/osx/x64/meterpreter/reverse_tcp_uuid","authors":["parchedmind","nologic","timwr"],"rank":"Normal","description":"Inject the mettle server payload (staged). Connect back to the attacker with UUID Support (OSX x64)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"PHP","arch":"php","privileged":"false","size":2481,"name":"PHP Command Shell, Bind TCP (via PHP)","fullname":"payload/php/bind_php","authors":["egypt \u003cegypt@metasploit.com\u003e","diaul \u003cdiaul@devilopers.org\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via php","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"PHP","arch":"php","privileged":"false","size":230,"name":"PHP Command Shell, Bind TCP (via Perl)","fullname":"payload/php/bind_perl","authors":["Samy \u003csamy@samy.pl\u003e","cazz \u003cbmc@shmoo.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via perl (persistent)","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"PHP","arch":"php","privileged":"false","size":230,"name":"PHP Command Shell, Bind TCP (via perl) IPv6","fullname":"payload/php/bind_perl_ipv6","authors":["Samy \u003csamy@samy.pl\u003e","cazz \u003cbmc@shmoo.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via perl (persistent) over IPv6","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"PHP","arch":"php","privileged":"false","size":2477,"name":"PHP Command Shell, Bind TCP (via php) IPv6","fullname":"payload/php/bind_php_ipv6","authors":["egypt \u003cegypt@metasploit.com\u003e","diaul \u003cdiaul@devilopers.org\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via php (IPv6)","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"PHP","arch":"php","privileged":"false","size":2237,"name":"PHP Command Shell, Find Sock","fullname":"payload/php/shell_findsock","authors":["egypt \u003cegypt@metasploit.com\u003e"],"rank":"Normal","description":"Spawn a shell on the established connection to the webserver. Unfortunately, this payload can leave conspicuous evil-looking entries in the apache error logs, so it is probably a good idea to use a bind or reverse shell unless firewalls prevent them from working. The issue this payload takes advantage of (CLOEXEC flag not set on sockets) appears to have been patched on the Ubuntu version of Apache and may not work on other Debian-based distributions. Only tested on Apache but it might work on other web servers that leak file descriptors to child processes.","options":[]}
[0m{"platform":"PHP","arch":"php","privileged":"false","size":3019,"name":"PHP Command Shell, Reverse TCP (via PHP)","fullname":"payload/php/reverse_php","authors":["egypt \u003cegypt@metasploit.com\u003e"],"rank":"Normal","description":"Reverse PHP connect back shell with checks for disabled functions","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"PHP","arch":"php","privileged":"false","size":1934,"name":"PHP Command, Double Reverse TCP Connection (via Perl)","fullname":"payload/php/reverse_perl","authors":["cazz \u003cbmc@shmoo.com\u003e"],"rank":"Normal","description":"Creates an interactive shell via perl","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"PHP","arch":"php","privileged":"false","size":2630,"name":"PHP Executable Download and Execute","fullname":"payload/php/download_exec","authors":["egypt \u003cegypt@metasploit.com\u003e"],"rank":"Normal","description":"Download an EXE from an HTTP URL and execute it","options":[{"name":"URL","display_value":"","required":"true","description":"The pre-encoded URL to the executable"}]}
[0m{"platform":"PHP","arch":"php","privileged":"false","size":1352,"name":"PHP Execute Command ","fullname":"payload/php/exec","authors":["egypt \u003cegypt@metasploit.com\u003e"],"rank":"Normal","description":"Execute a single system command","options":[{"name":"CMD","display_value":"","required":"true","description":"The command string to execute"}]}
[0m{"platform":"PHP","arch":"php","privileged":"false","size":1338,"name":"PHP Meterpreter, Bind TCP Stager","fullname":"payload/php/meterpreter/bind_tcp","authors":["egypt \u003cegypt@metasploit.com\u003e"],"rank":"Normal","description":"Run a meterpreter server in PHP. Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"PHP","arch":"php","privileged":"false","size":1337,"name":"PHP Meterpreter, Bind TCP Stager IPv6","fullname":"payload/php/meterpreter/bind_tcp_ipv6","authors":["egypt \u003cegypt@metasploit.com\u003e"],"rank":"Normal","description":"Run a meterpreter server in PHP. Listen for a connection over IPv6","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"PHP","arch":"php","privileged":"false","size":1511,"name":"PHP Meterpreter, Bind TCP Stager IPv6 with UUID Support","fullname":"payload/php/meterpreter/bind_tcp_ipv6_uuid","authors":["egypt \u003cegypt@metasploit.com\u003e","OJ Reeves"],"rank":"Normal","description":"Run a meterpreter server in PHP. Listen for a connection over IPv6 with UUID Support","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"PHP","arch":"php","privileged":"false","size":1512,"name":"PHP Meterpreter, Bind TCP Stager with UUID Support","fullname":"payload/php/meterpreter/bind_tcp_uuid","authors":["egypt \u003cegypt@metasploit.com\u003e","OJ Reeves"],"rank":"Normal","description":"Run a meterpreter server in PHP. Listen for a connection with UUID Support","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"PHP","arch":"php","privileged":"false","size":1101,"name":"PHP Meterpreter, PHP Reverse TCP Stager","fullname":"payload/php/meterpreter/reverse_tcp","authors":["egypt \u003cegypt@metasploit.com\u003e"],"rank":"Normal","description":"Run a meterpreter server in PHP. Reverse PHP connect back stager with checks for disabled functions","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"PHP","arch":"php","privileged":"false","size":1275,"name":"PHP Meterpreter, PHP Reverse TCP Stager","fullname":"payload/php/meterpreter/reverse_tcp_uuid","authors":["egypt \u003cegypt@metasploit.com\u003e","OJ Reeves"],"rank":"Normal","description":"Run a meterpreter server in PHP. Reverse PHP connect back stager with checks for disabled functions","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"PHP","arch":"php","privileged":"false","size":34848,"name":"PHP Meterpreter, Reverse TCP Inline","fullname":"payload/php/meterpreter_reverse_tcp","authors":["egypt \u003cegypt@metasploit.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a Meterpreter server (PHP)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"true","size":4200,"name":"Powershell Exec","fullname":"payload/cmd/windows/powershell/adduser","authors":["Spencer McIntyre","hdm \u003cx@hdm.io\u003e","Chris John Riley","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell","options":[{"name":"CUSTOM","display_value":"","required":"false","description":"Custom group name to be used instead of default"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PASS","display_value":"Metasploit$1","required":"true","description":"The password for this user"},{"name":"USER","display_value":"metasploit","required":"true","description":"The username to create"},{"name":"WMIC","display_value":"false","required":"true","description":"Use WMIC on the target to resolve administrators group"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4044,"name":"Powershell Exec","fullname":"payload/cmd/windows/powershell/exec","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell","options":[{"name":"CMD","display_value":"","required":"true","description":"The command string to execute"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"true","size":4345,"name":"Powershell Exec","fullname":"payload/cmd/windows/powershell/format_all_drives","authors":["Spencer McIntyre","Ashfaq Ansari \u003cashfaq_ansari1989@hotmail.com\u003e","Ruei-Min Jiang \u003cmike820324@gmail.com\u003e"],"rank":"Manual","description":"Execute an x86 payload from a command via PowerShell","options":[{"name":"VOLUMELABEL","display_value":"PwNeD","required":"false","description":"Set the volume label"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4057,"name":"Powershell Exec","fullname":"payload/cmd/windows/powershell/loadlibrary","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell","options":[{"name":"DLL","display_value":"","required":"true","description":"The library path to load (UNC is OK)"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":6281,"name":"Powershell Exec","fullname":"payload/cmd/windows/powershell/powershell_bind_tcp","authors":["Spencer McIntyre","Ben Turner","Dave Hardy","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LOAD_MODULES","display_value":"","required":"false","description":"A list of powershell modules separated by a comma to download over the web"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":6297,"name":"Powershell Exec","fullname":"payload/cmd/windows/powershell/powershell_reverse_tcp","authors":["Spencer McIntyre","Ben Turner","Dave Hardy","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LOAD_MODULES","display_value":"","required":"false","description":"A list of powershell modules separated by a comma to download over the web"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":6282,"name":"Powershell Exec","fullname":"payload/cmd/windows/powershell/powershell_reverse_tcp_ssl","authors":["Spencer McIntyre","Ben Turner","Dave Hardy","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LOAD_MODULES","display_value":"","required":"false","description":"A list of powershell modules separated by a comma to download over the web"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4163,"name":"Powershell Exec","fullname":"payload/cmd/windows/powershell/speak_pwned","authors":["Spencer McIntyre","Berend-Jan \"SkyLined\" Wever \u003cberendjanwever@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell","options":[]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":6376,"name":"Powershell Exec","fullname":"payload/cmd/windows/powershell/x64/powershell_bind_tcp","authors":["Spencer McIntyre","Ben Turner","Dave Hardy","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LOAD_MODULES","display_value":"","required":"false","description":"A list of powershell modules separated by a comma to download over the web"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":6456,"name":"Powershell Exec","fullname":"payload/cmd/windows/powershell/x64/powershell_reverse_tcp","authors":["Spencer McIntyre","Ben Turner","Dave Hardy","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LOAD_MODULES","display_value":"","required":"false","description":"A list of powershell modules separated by a comma to download over the web"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":6361,"name":"Powershell Exec","fullname":"payload/cmd/windows/powershell/x64/powershell_reverse_tcp_ssl","authors":["Spencer McIntyre","Ben Turner","Dave Hardy","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LOAD_MODULES","display_value":"","required":"false","description":"A list of powershell modules separated by a comma to download over the web"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4197,"name":"Powershell Exec, Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/dllinject/bind_ipv6_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for an IPv6 connection (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4177,"name":"Powershell Exec, Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/meterpreter/bind_ipv6_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for an IPv6 connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4179,"name":"Powershell Exec, Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/patchupdllinject/bind_ipv6_tcp","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for an IPv6 connection (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4159,"name":"Powershell Exec, Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/bind_ipv6_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for an IPv6 connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4172,"name":"Powershell Exec, Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/peinject/bind_ipv6_tcp","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for an IPv6 connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4192,"name":"Powershell Exec, Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/vncinject/bind_ipv6_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for an IPv6 connection (Windows x86)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4262,"name":"Powershell Exec, Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/dllinject/bind_ipv6_tcp_uuid","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4279,"name":"Powershell Exec, Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/meterpreter/bind_ipv6_tcp_uuid","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4239,"name":"Powershell Exec, Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/patchupdllinject/bind_ipv6_tcp_uuid","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4235,"name":"Powershell Exec, Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/bind_ipv6_tcp_uuid","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4261,"name":"Powershell Exec, Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/peinject/bind_ipv6_tcp_uuid","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4256,"name":"Powershell Exec, Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/vncinject/bind_ipv6_tcp_uuid","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4067,"name":"Powershell Exec, Bind TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/dllinject/bind_nonx_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection (No NX)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4054,"name":"Powershell Exec, Bind TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/meterpreter/bind_nonx_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4033,"name":"Powershell Exec, Bind TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/patchupdllinject/bind_nonx_tcp","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection (No NX)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4062,"name":"Powershell Exec, Bind TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/bind_nonx_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4061,"name":"Powershell Exec, Bind TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/peinject/bind_nonx_tcp","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection (No NX)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4065,"name":"Powershell Exec, Bind TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/vncinject/bind_nonx_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection (No NX)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4399,"name":"Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/dllinject/bind_tcp_rc4","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4410,"name":"Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/meterpreter/bind_tcp_rc4","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4416,"name":"Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/patchupdllinject/bind_tcp_rc4","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4357,"name":"Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/bind_tcp_rc4","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4375,"name":"Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/peinject/bind_tcp_rc4","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4388,"name":"Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/vncinject/bind_tcp_rc4","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4573,"name":"Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/x64/meterpreter/bind_tcp_rc4","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4582,"name":"Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/x64/peinject/bind_tcp_rc4","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4606,"name":"Powershell Exec, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/x64/vncinject/bind_tcp_rc4","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4199,"name":"Powershell Exec, Bind TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/dllinject/bind_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4208,"name":"Powershell Exec, Bind TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/meterpreter/bind_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4208,"name":"Powershell Exec, Bind TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/patchupdllinject/bind_tcp","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4175,"name":"Powershell Exec, Bind TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/bind_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4203,"name":"Powershell Exec, Bind TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/peinject/bind_tcp","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4211,"name":"Powershell Exec, Bind TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/vncinject/bind_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection (Windows x86)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4481,"name":"Powershell Exec, Bind TCP Stager with UUID Support (Windows x64)","fullname":"payload/cmd/windows/powershell/x64/meterpreter/bind_tcp_uuid","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Listen for a connection with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4495,"name":"Powershell Exec, Bind TCP Stager with UUID Support (Windows x64)","fullname":"payload/cmd/windows/powershell/x64/peinject/bind_tcp_uuid","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Listen for a connection with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4483,"name":"Powershell Exec, Bind TCP Stager with UUID Support (Windows x64)","fullname":"payload/cmd/windows/powershell/x64/vncinject/bind_tcp_uuid","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Listen for a connection with UUID Support (Windows x64)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4211,"name":"Powershell Exec, Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/dllinject/bind_tcp_uuid","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection with UUID Support (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4224,"name":"Powershell Exec, Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/meterpreter/bind_tcp_uuid","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4282,"name":"Powershell Exec, Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/patchupdllinject/bind_tcp_uuid","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection with UUID Support (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4229,"name":"Powershell Exec, Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/bind_tcp_uuid","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4283,"name":"Powershell Exec, Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/peinject/bind_tcp_uuid","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4260,"name":"Powershell Exec, Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/vncinject/bind_tcp_uuid","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection with UUID Support (Windows x86)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3741,"name":"Powershell Exec, DNS TXT Record Payload Download and Execution","fullname":"payload/cmd/windows/powershell/dns_txt_query_exec","authors":["Spencer McIntyre","corelanc0d3r \u003cpeter.ve@corelan.be\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Performs a TXT query against a series of DNS record(s) and executes the returned payload","options":[{"name":"DNSZONE","display_value":"","required":"true","description":"The DNS zone to query"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3888,"name":"Powershell Exec, Find Tag Ordinal Stager","fullname":"payload/cmd/windows/powershell/dllinject/find_tag","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Use an established connection","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3880,"name":"Powershell Exec, Find Tag Ordinal Stager","fullname":"payload/cmd/windows/powershell/meterpreter/find_tag","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Use an established connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3883,"name":"Powershell Exec, Find Tag Ordinal Stager","fullname":"payload/cmd/windows/powershell/patchupdllinject/find_tag","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Use an established connection","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3858,"name":"Powershell Exec, Find Tag Ordinal Stager","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/find_tag","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Use an established connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3913,"name":"Powershell Exec, Find Tag Ordinal Stager","fullname":"payload/cmd/windows/powershell/peinject/find_tag","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Use an established connection","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3884,"name":"Powershell Exec, Find Tag Ordinal Stager","fullname":"payload/cmd/windows/powershell/vncinject/find_tag","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Use an established connection","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows, BSD, BSDi, Linux, OSX, Solaris","arch":"cmd","privileged":"false","size":3747,"name":"Powershell Exec, Generic x86 Debug Trap","fullname":"payload/cmd/windows/powershell/generic/debug_trap","authors":["Spencer McIntyre","robert \u003crobertmetasploit@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Generate a debug trap in the target process","options":[]}
[0m{"platform":"Windows, BSD, BSDi, Linux, OSX, Solaris","arch":"cmd","privileged":"false","size":3724,"name":"Powershell Exec, Generic x86 Tight Loop","fullname":"payload/cmd/windows/powershell/generic/tight_loop","authors":["Spencer McIntyre","jduck \u003cjduck@metasploit.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Generate a tight loop in the target process","options":[]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4336,"name":"Powershell Exec, Hidden Bind Ipknock TCP Stager","fullname":"payload/cmd/windows/powershell/dllinject/bind_hidden_ipknock_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4275,"name":"Powershell Exec, Hidden Bind Ipknock TCP Stager","fullname":"payload/cmd/windows/powershell/meterpreter/bind_hidden_ipknock_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4275,"name":"Powershell Exec, Hidden Bind Ipknock TCP Stager","fullname":"payload/cmd/windows/powershell/patchupdllinject/bind_hidden_ipknock_tcp","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4273,"name":"Powershell Exec, Hidden Bind Ipknock TCP Stager","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/bind_hidden_ipknock_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4301,"name":"Powershell Exec, Hidden Bind Ipknock TCP Stager","fullname":"payload/cmd/windows/powershell/peinject/bind_hidden_ipknock_tcp","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4259,"name":"Powershell Exec, Hidden Bind Ipknock TCP Stager","fullname":"payload/cmd/windows/powershell/vncinject/bind_hidden_ipknock_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4256,"name":"Powershell Exec, Hidden Bind TCP Stager","fullname":"payload/cmd/windows/powershell/dllinject/bind_hidden_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4288,"name":"Powershell Exec, Hidden Bind TCP Stager","fullname":"payload/cmd/windows/powershell/meterpreter/bind_hidden_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4264,"name":"Powershell Exec, Hidden Bind TCP Stager","fullname":"payload/cmd/windows/powershell/patchupdllinject/bind_hidden_tcp","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4221,"name":"Powershell Exec, Hidden Bind TCP Stager","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/bind_hidden_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4286,"name":"Powershell Exec, Hidden Bind TCP Stager","fullname":"payload/cmd/windows/powershell/peinject/bind_hidden_tcp","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4272,"name":"Powershell Exec, Hidden Bind TCP Stager","fullname":"payload/cmd/windows/powershell/vncinject/bind_hidden_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4143,"name":"Powershell Exec, Reverse All-Port TCP Stager","fullname":"payload/cmd/windows/powershell/dllinject/reverse_tcp_allports","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4189,"name":"Powershell Exec, Reverse All-Port TCP Stager","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_tcp_allports","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4197,"name":"Powershell Exec, Reverse All-Port TCP Stager","fullname":"payload/cmd/windows/powershell/patchupdllinject/reverse_tcp_allports","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4173,"name":"Powershell Exec, Reverse All-Port TCP Stager","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/reverse_tcp_allports","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4183,"name":"Powershell Exec, Reverse All-Port TCP Stager","fullname":"payload/cmd/windows/powershell/peinject/reverse_tcp_allports","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4155,"name":"Powershell Exec, Reverse All-Port TCP Stager","fullname":"payload/cmd/windows/powershell/vncinject/reverse_tcp_allports","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4606,"name":"Powershell Exec, Reverse HTTP Stager Proxy","fullname":"payload/cmd/windows/powershell/dllinject/reverse_http_proxy_pstore","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Tunnel communication over HTTP","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4635,"name":"Powershell Exec, Reverse HTTP Stager Proxy","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_http_proxy_pstore","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Tunnel communication over HTTP","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4617,"name":"Powershell Exec, Reverse HTTP Stager Proxy","fullname":"payload/cmd/windows/powershell/vncinject/reverse_http_proxy_pstore","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Tunnel communication over HTTP","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4293,"name":"Powershell Exec, Reverse HTTPS Stager with Support for Custom Proxy","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_https_proxy","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","corelanc0d3r \u003cpeter.ve@corelan.be\u003e","amaloteaux \u003calex_maloteaux@metasploit.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Tunnel communication over HTTP using SSL with custom proxy support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"HttpProxyHost","display_value":"","required":"false","description":"An optional proxy server IP address or hostname"},{"name":"HttpProxyPass","display_value":"","required":"false","description":"An optional proxy server password Max parameter length: 63 characters"},{"name":"HttpProxyPort","display_value":"","required":"false","description":"An optional proxy server port"},{"name":"HttpProxyType","display_value":"HTTP","required":"true","description":"The type of HTTP proxy (Accepted: HTTP, SOCKS)"},{"name":"HttpProxyUser","display_value":"","required":"false","description":"An optional proxy server username Max parameter length: 63 characters"},{"name":"LHOST","display_value":"127.0.0.1","required":"false","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"false","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3716,"name":"Powershell Exec, Reverse Hop HTTP/HTTPS Stager","fullname":"payload/cmd/windows/powershell/dllinject/reverse_hop_http","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","scriptjunkie \u003cscriptjunkie@scriptjunkie.us\u003e","bannedit \u003cbannedit@metasploit.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Tunnel communication over an HTTP or HTTPS hop point. Note that you must first upload data/hop/hop.php to the PHP server you wish to use as a hop.","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"HOPURL","display_value":"http://example.com/hop.php","required":"true","description":"The full URL of the hop script"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3728,"name":"Powershell Exec, Reverse Hop HTTP/HTTPS Stager","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_hop_http","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","scriptjunkie \u003cscriptjunkie@scriptjunkie.us\u003e","bannedit \u003cbannedit@metasploit.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Tunnel communication over an HTTP or HTTPS hop point. Note that you must first upload data/hop/hop.php to the PHP server you wish to use as a hop.","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"HOPURL","display_value":"http://example.com/hop.php","required":"true","description":"The full URL of the hop script"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3733,"name":"Powershell Exec, Reverse Hop HTTP/HTTPS Stager","fullname":"payload/cmd/windows/powershell/vncinject/reverse_hop_http","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","scriptjunkie \u003cscriptjunkie@scriptjunkie.us\u003e","bannedit \u003cbannedit@metasploit.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Tunnel communication over an HTTP or HTTPS hop point. Note that you must first upload data/hop/hop.php to the PHP server you wish to use as a hop.","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"HOPURL","display_value":"http://example.com/hop.php","required":"true","description":"The full URL of the hop script"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3900,"name":"Powershell Exec, Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/dllinject/reverse_ord_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3875,"name":"Powershell Exec, Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_ord_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3901,"name":"Powershell Exec, Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/patchupdllinject/reverse_ord_tcp","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3848,"name":"Powershell Exec, Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/reverse_ord_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3885,"name":"Powershell Exec, Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/peinject/reverse_ord_tcp","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3917,"name":"Powershell Exec, Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/vncinject/reverse_ord_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4160,"name":"Powershell Exec, Reverse TCP Stager","fullname":"payload/cmd/windows/powershell/dllinject/reverse_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4198,"name":"Powershell Exec, Reverse TCP Stager","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4196,"name":"Powershell Exec, Reverse TCP Stager","fullname":"payload/cmd/windows/powershell/patchupdllinject/reverse_tcp","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4216,"name":"Powershell Exec, Reverse TCP Stager","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/reverse_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4211,"name":"Powershell Exec, Reverse TCP Stager","fullname":"payload/cmd/windows/powershell/peinject/reverse_tcp","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4150,"name":"Powershell Exec, Reverse TCP Stager","fullname":"payload/cmd/windows/powershell/vncinject/reverse_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4191,"name":"Powershell Exec, Reverse TCP Stager (DNS)","fullname":"payload/cmd/windows/powershell/dllinject/reverse_tcp_dns","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4205,"name":"Powershell Exec, Reverse TCP Stager (DNS)","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_tcp_dns","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4185,"name":"Powershell Exec, Reverse TCP Stager (DNS)","fullname":"payload/cmd/windows/powershell/patchupdllinject/reverse_tcp_dns","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4216,"name":"Powershell Exec, Reverse TCP Stager (DNS)","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/reverse_tcp_dns","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4264,"name":"Powershell Exec, Reverse TCP Stager (DNS)","fullname":"payload/cmd/windows/powershell/peinject/reverse_tcp_dns","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4186,"name":"Powershell Exec, Reverse TCP Stager (DNS)","fullname":"payload/cmd/windows/powershell/vncinject/reverse_tcp_dns","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4156,"name":"Powershell Exec, Reverse TCP Stager (IPv6)","fullname":"payload/cmd/windows/powershell/dllinject/reverse_ipv6_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker over IPv6","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4148,"name":"Powershell Exec, Reverse TCP Stager (IPv6)","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_ipv6_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker over IPv6","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4184,"name":"Powershell Exec, Reverse TCP Stager (IPv6)","fullname":"payload/cmd/windows/powershell/patchupdllinject/reverse_ipv6_tcp","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker over IPv6","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4147,"name":"Powershell Exec, Reverse TCP Stager (IPv6)","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/reverse_ipv6_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker over IPv6","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4178,"name":"Powershell Exec, Reverse TCP Stager (IPv6)","fullname":"payload/cmd/windows/powershell/peinject/reverse_ipv6_tcp","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker over IPv6","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4168,"name":"Powershell Exec, Reverse TCP Stager (IPv6)","fullname":"payload/cmd/windows/powershell/vncinject/reverse_ipv6_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker over IPv6","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4017,"name":"Powershell Exec, Reverse TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/dllinject/reverse_nonx_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker (No NX)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4021,"name":"Powershell Exec, Reverse TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_nonx_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3996,"name":"Powershell Exec, Reverse TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/patchupdllinject/reverse_nonx_tcp","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker (No NX)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4012,"name":"Powershell Exec, Reverse TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/reverse_nonx_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3983,"name":"Powershell Exec, Reverse TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/peinject/reverse_nonx_tcp","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker (No NX)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4023,"name":"Powershell Exec, Reverse TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/vncinject/reverse_nonx_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker (No NX)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4370,"name":"Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/cmd/windows/powershell/dllinject/reverse_tcp_rc4_dns","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4346,"name":"Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_tcp_rc4_dns","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4387,"name":"Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/cmd/windows/powershell/patchupdllinject/reverse_tcp_rc4_dns","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4352,"name":"Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/reverse_tcp_rc4_dns","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4353,"name":"Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/cmd/windows/powershell/peinject/reverse_tcp_rc4_dns","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4328,"name":"Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/cmd/windows/powershell/vncinject/reverse_tcp_rc4_dns","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4372,"name":"Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/dllinject/reverse_tcp_rc4","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4369,"name":"Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_tcp_rc4","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4374,"name":"Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/patchupdllinject/reverse_tcp_rc4","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4351,"name":"Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/reverse_tcp_rc4","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4337,"name":"Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/peinject/reverse_tcp_rc4","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4391,"name":"Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/vncinject/reverse_tcp_rc4","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4579,"name":"Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/x64/meterpreter/reverse_tcp_rc4","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4552,"name":"Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/x64/peinject/reverse_tcp_rc4","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4521,"name":"Powershell Exec, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/x64/vncinject/reverse_tcp_rc4","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Connect back to the attacker","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4256,"name":"Powershell Exec, Reverse TCP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/dllinject/reverse_tcp_uuid","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker with UUID Support","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4219,"name":"Powershell Exec, Reverse TCP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_tcp_uuid","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4232,"name":"Powershell Exec, Reverse TCP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/patchupdllinject/reverse_tcp_uuid","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker with UUID Support","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4261,"name":"Powershell Exec, Reverse TCP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/reverse_tcp_uuid","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4218,"name":"Powershell Exec, Reverse TCP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/peinject/reverse_tcp_uuid","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4261,"name":"Powershell Exec, Reverse TCP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/vncinject/reverse_tcp_uuid","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker with UUID Support","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4501,"name":"Powershell Exec, Reverse TCP Stager with UUID Support (Windows x64)","fullname":"payload/cmd/windows/powershell/x64/meterpreter/reverse_tcp_uuid","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Connect back to the attacker with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4446,"name":"Powershell Exec, Reverse TCP Stager with UUID Support (Windows x64)","fullname":"payload/cmd/windows/powershell/x64/peinject/reverse_tcp_uuid","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Connect back to the attacker with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4435,"name":"Powershell Exec, Reverse TCP Stager with UUID Support (Windows x64)","fullname":"payload/cmd/windows/powershell/x64/vncinject/reverse_tcp_uuid","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Connect back to the attacker with UUID Support (Windows x64)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4197,"name":"Powershell Exec, Windows Command Shell, Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/shell/bind_ipv6_tcp","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Listen for an IPv6 connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4207,"name":"Powershell Exec, Windows Command Shell, Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/shell/bind_ipv6_tcp_uuid","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4250,"name":"Powershell Exec, Windows Command Shell, Bind TCP Inline","fullname":"payload/cmd/windows/powershell/shell_bind_tcp","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection and spawn a command shell","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4081,"name":"Powershell Exec, Windows Command Shell, Bind TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/shell/bind_nonx_tcp","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Listen for a connection (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4374,"name":"Powershell Exec, Windows Command Shell, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/shell/bind_tcp_rc4","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Listen for a connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4203,"name":"Powershell Exec, Windows Command Shell, Bind TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/shell/bind_tcp","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Listen for a connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4222,"name":"Powershell Exec, Windows Command Shell, Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/shell/bind_tcp_uuid","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Listen for a connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m[1m[31m[-][0m Invalid module: payload/cmd/windows/powershell/x64/encrypted_shell/reverse_tcp
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3895,"name":"Powershell Exec, Windows Command Shell, Find Tag Ordinal Stager","fullname":"payload/cmd/windows/powershell/shell/find_tag","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Use an established connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4262,"name":"Powershell Exec, Windows Command Shell, Hidden Bind Ipknock TCP Stager","fullname":"payload/cmd/windows/powershell/shell/bind_hidden_ipknock_tcp","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4371,"name":"Powershell Exec, Windows Command Shell, Hidden Bind TCP Inline","fullname":"payload/cmd/windows/powershell/shell_hidden_bind_tcp","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sd","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a connection from certain IP and spawn a command shell. The shellcode will reply with a RST packet if the connections is not coming from the IP defined in AHOST. This way the port will appear as \"closed\" helping us to hide the shellcode.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4250,"name":"Powershell Exec, Windows Command Shell, Hidden Bind TCP Stager","fullname":"payload/cmd/windows/powershell/shell/bind_hidden_tcp","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4181,"name":"Powershell Exec, Windows Command Shell, Reverse All-Port TCP Stager","fullname":"payload/cmd/windows/powershell/shell/reverse_tcp_allports","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3899,"name":"Powershell Exec, Windows Command Shell, Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/shell/reverse_ord_tcp","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4271,"name":"Powershell Exec, Windows Command Shell, Reverse TCP Inline","fullname":"payload/cmd/windows/powershell/shell_reverse_tcp","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to attacker and spawn a command shell","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4186,"name":"Powershell Exec, Windows Command Shell, Reverse TCP Stager","fullname":"payload/cmd/windows/powershell/shell/reverse_tcp","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4167,"name":"Powershell Exec, Windows Command Shell, Reverse TCP Stager (DNS)","fullname":"payload/cmd/windows/powershell/shell/reverse_tcp_dns","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4198,"name":"Powershell Exec, Windows Command Shell, Reverse TCP Stager (IPv6)","fullname":"payload/cmd/windows/powershell/shell/reverse_ipv6_tcp","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Connect back to the attacker over IPv6","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4050,"name":"Powershell Exec, Windows Command Shell, Reverse TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/shell/reverse_nonx_tcp","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Connect back to the attacker (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4386,"name":"Powershell Exec, Windows Command Shell, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/cmd/windows/powershell/shell/reverse_tcp_rc4_dns","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4362,"name":"Powershell Exec, Windows Command Shell, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/shell/reverse_tcp_rc4","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4249,"name":"Powershell Exec, Windows Command Shell, Reverse TCP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/shell/reverse_tcp_uuid","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4188,"name":"Powershell Exec, Windows Command Shell, Reverse UDP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/shell/reverse_udp","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4230,"name":"Powershell Exec, Windows Command Shell, Windows x86 Bind Named Pipe Stager","fullname":"payload/cmd/windows/powershell/shell/bind_named_pipe","authors":["Spencer McIntyre","spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","UserExistsError"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawn a piped command shell (staged). Listen for a pipe connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4565,"name":"Powershell Exec, Windows Disable Windows ICF, Command Shell, Bind TCP Inline","fullname":"payload/cmd/windows/powershell/shell_bind_tcp_xpfw","authors":["Spencer McIntyre","Lin0xx \u003clin0xx@metasploit.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Disable the Windows ICF, then listen for a connection and spawn a command shell","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3702,"name":"Powershell Exec, Windows Executable Download (http,https,ftp) and Execute","fullname":"payload/cmd/windows/powershell/download_exec","authors":["Spencer McIntyre","corelanc0d3r \u003cpeter.ve@corelan.be\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Download an EXE from an HTTP(S)/FTP URL and execute it","options":[{"name":"EXE","display_value":"rund11.exe","required":"true","description":"Filename to save \u0026 run executable on target system"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"URL","display_value":"https://localhost:443/evil.exe","required":"true","description":"The pre-encoded URL to the executable"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3719,"name":"Powershell Exec, Windows MessageBox","fullname":"payload/cmd/windows/powershell/messagebox","authors":["Spencer McIntyre","corelanc0d3r \u003cpeter.ve@corelan.be\u003e","jduck \u003cjduck@metasploit.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Spawns a dialog via MessageBox using a customizable title, text \u0026 icon","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"ICON","display_value":"NO","required":"true","description":"Icon type can be NO, ERROR, INFORMATION, WARNING or QUESTION"},{"name":"TEXT","display_value":"Hello, from MSF!","required":"true","description":"Messagebox Text (max 255 chars) Max parameter length: 255 characters"},{"name":"TITLE","display_value":"MessageBox","required":"true","description":"Messagebox Title (max 255 chars) Max parameter length: 255 characters"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4154,"name":"Powershell Exec, Windows MessageBox x64","fullname":"payload/cmd/windows/powershell/x64/messagebox","authors":["Spencer McIntyre","pasta \u003cjaguinaga@infobytesec.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Spawn a dialog via MessageBox using a customizable title, text \u0026 icon","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"ICON","display_value":"NO","required":"true","description":"Icon type (Accepted: NO, ERROR, INFORMATION, WARNING, QUESTION)"},{"name":"TEXT","display_value":"Hello, from MSF!","required":"true","description":"Messagebox Text"},{"name":"TITLE","display_value":"MessageBox","required":"true","description":"Messagebox Title"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3732,"name":"Powershell Exec, Windows Meterpreter Service, Bind TCP","fullname":"payload/cmd/windows/powershell/metsvc_bind_tcp","authors":["Spencer McIntyre","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Stub payload for interacting with a Meterpreter Service","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3708,"name":"Powershell Exec, Windows Meterpreter Service, Reverse TCP Inline","fullname":"payload/cmd/windows/powershell/metsvc_reverse_tcp","authors":["Spencer McIntyre","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Stub payload for interacting with a Meterpreter Service","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4811,"name":"Powershell Exec, Windows Reverse HTTP Stager (winhttp)","fullname":"payload/cmd/windows/powershell/dllinject/reverse_winhttp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Tunnel communication over HTTP (Windows winhttp)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4905,"name":"Powershell Exec, Windows Reverse HTTP Stager (winhttp)","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_winhttp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Tunnel communication over HTTP (Windows winhttp)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4767,"name":"Powershell Exec, Windows Reverse HTTP Stager (winhttp)","fullname":"payload/cmd/windows/powershell/vncinject/reverse_winhttp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Tunnel communication over HTTP (Windows winhttp)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4770,"name":"Powershell Exec, Windows Reverse HTTP Stager (wininet)","fullname":"payload/cmd/windows/powershell/dllinject/reverse_http","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Tunnel communication over HTTP (Windows wininet)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4622,"name":"Powershell Exec, Windows Reverse HTTP Stager (wininet)","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_http","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Tunnel communication over HTTP (Windows wininet)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4730,"name":"Powershell Exec, Windows Reverse HTTP Stager (wininet)","fullname":"payload/cmd/windows/powershell/vncinject/reverse_http","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Tunnel communication over HTTP (Windows wininet)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4901,"name":"Powershell Exec, Windows Reverse HTTPS Stager (winhttp)","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_winhttps","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Tunnel communication over HTTPS (Windows winhttp)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4744,"name":"Powershell Exec, Windows Reverse HTTPS Stager (wininet)","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_https","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Tunnel communication over HTTPS (Windows wininet)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4180,"name":"Powershell Exec, Windows Upload/Execute, Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/upexec/bind_ipv6_tcp","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Listen for an IPv6 connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4278,"name":"Powershell Exec, Windows Upload/Execute, Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/upexec/bind_ipv6_tcp_uuid","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4046,"name":"Powershell Exec, Windows Upload/Execute, Bind TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/upexec/bind_nonx_tcp","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Listen for a connection (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4393,"name":"Powershell Exec, Windows Upload/Execute, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/upexec/bind_tcp_rc4","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Listen for a connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4152,"name":"Powershell Exec, Windows Upload/Execute, Bind TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/upexec/bind_tcp","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Listen for a connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4235,"name":"Powershell Exec, Windows Upload/Execute, Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/upexec/bind_tcp_uuid","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Listen for a connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3898,"name":"Powershell Exec, Windows Upload/Execute, Find Tag Ordinal Stager","fullname":"payload/cmd/windows/powershell/upexec/find_tag","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Use an established connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4258,"name":"Powershell Exec, Windows Upload/Execute, Hidden Bind Ipknock TCP Stager","fullname":"payload/cmd/windows/powershell/upexec/bind_hidden_ipknock_tcp","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4250,"name":"Powershell Exec, Windows Upload/Execute, Hidden Bind TCP Stager","fullname":"payload/cmd/windows/powershell/upexec/bind_hidden_tcp","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4185,"name":"Powershell Exec, Windows Upload/Execute, Reverse All-Port TCP Stager","fullname":"payload/cmd/windows/powershell/upexec/reverse_tcp_allports","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3892,"name":"Powershell Exec, Windows Upload/Execute, Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/upexec/reverse_ord_tcp","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4151,"name":"Powershell Exec, Windows Upload/Execute, Reverse TCP Stager","fullname":"payload/cmd/windows/powershell/upexec/reverse_tcp","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4154,"name":"Powershell Exec, Windows Upload/Execute, Reverse TCP Stager (DNS)","fullname":"payload/cmd/windows/powershell/upexec/reverse_tcp_dns","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4168,"name":"Powershell Exec, Windows Upload/Execute, Reverse TCP Stager (IPv6)","fullname":"payload/cmd/windows/powershell/upexec/reverse_ipv6_tcp","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Connect back to the attacker over IPv6","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4009,"name":"Powershell Exec, Windows Upload/Execute, Reverse TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/upexec/reverse_nonx_tcp","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Connect back to the attacker (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4331,"name":"Powershell Exec, Windows Upload/Execute, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/cmd/windows/powershell/upexec/reverse_tcp_rc4_dns","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4366,"name":"Powershell Exec, Windows Upload/Execute, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/upexec/reverse_tcp_rc4","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4200,"name":"Powershell Exec, Windows Upload/Execute, Reverse TCP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/upexec/reverse_tcp_uuid","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4210,"name":"Powershell Exec, Windows Upload/Execute, Reverse UDP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/upexec/reverse_udp","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4270,"name":"Powershell Exec, Windows Upload/Execute, Windows x86 Bind Named Pipe Stager","fullname":"payload/cmd/windows/powershell/upexec/bind_named_pipe","authors":["Spencer McIntyre","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","UserExistsError"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Uploads an executable and runs it (staged). Listen for a pipe connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4171,"name":"Powershell Exec, Windows shellcode stage, Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/custom/bind_ipv6_tcp","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Listen for an IPv6 connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4226,"name":"Powershell Exec, Windows shellcode stage, Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/custom/bind_ipv6_tcp_uuid","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4048,"name":"Powershell Exec, Windows shellcode stage, Bind TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/custom/bind_nonx_tcp","authors":["Spencer McIntyre","bwatters-r7","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Listen for a connection (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4360,"name":"Powershell Exec, Windows shellcode stage, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/custom/bind_tcp_rc4","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Listen for a connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4605,"name":"Powershell Exec, Windows shellcode stage, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/x64/custom/bind_tcp_rc4","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Custom shellcode stage. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4222,"name":"Powershell Exec, Windows shellcode stage, Bind TCP Stager (Windows x86)","fullname":"payload/cmd/windows/powershell/custom/bind_tcp","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Listen for a connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4481,"name":"Powershell Exec, Windows shellcode stage, Bind TCP Stager with UUID Support (Windows x64)","fullname":"payload/cmd/windows/powershell/x64/custom/bind_tcp_uuid","authors":["Spencer McIntyre","bwatters-r7","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Custom shellcode stage. Listen for a connection with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4218,"name":"Powershell Exec, Windows shellcode stage, Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/cmd/windows/powershell/custom/bind_tcp_uuid","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Listen for a connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3899,"name":"Powershell Exec, Windows shellcode stage, Find Tag Ordinal Stager","fullname":"payload/cmd/windows/powershell/custom/find_tag","authors":["Spencer McIntyre","bwatters-r7","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Use an established connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4288,"name":"Powershell Exec, Windows shellcode stage, Hidden Bind Ipknock TCP Stager","fullname":"payload/cmd/windows/powershell/custom/bind_hidden_ipknock_tcp","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4297,"name":"Powershell Exec, Windows shellcode stage, Hidden Bind TCP Stager","fullname":"payload/cmd/windows/powershell/custom/bind_hidden_tcp","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4171,"name":"Powershell Exec, Windows shellcode stage, Reverse All-Port TCP Stager","fullname":"payload/cmd/windows/powershell/custom/reverse_tcp_allports","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4604,"name":"Powershell Exec, Windows shellcode stage, Reverse HTTP Stager Proxy","fullname":"payload/cmd/windows/powershell/custom/reverse_http_proxy_pstore","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Tunnel communication over HTTP","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4346,"name":"Powershell Exec, Windows shellcode stage, Reverse HTTPS Stager with Support for Custom Proxy","fullname":"payload/cmd/windows/powershell/custom/reverse_https_proxy","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","corelanc0d3r \u003cpeter.ve@corelan.be\u003e","amaloteaux \u003calex_maloteaux@metasploit.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Tunnel communication over HTTP using SSL with custom proxy support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"HttpProxyHost","display_value":"","required":"false","description":"An optional proxy server IP address or hostname"},{"name":"HttpProxyPass","display_value":"","required":"false","description":"An optional proxy server password Max parameter length: 63 characters"},{"name":"HttpProxyPort","display_value":"","required":"false","description":"An optional proxy server port"},{"name":"HttpProxyType","display_value":"HTTP","required":"true","description":"The type of HTTP proxy (Accepted: HTTP, SOCKS)"},{"name":"HttpProxyUser","display_value":"","required":"false","description":"An optional proxy server username Max parameter length: 63 characters"},{"name":"LHOST","display_value":"127.0.0.1","required":"false","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"false","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3738,"name":"Powershell Exec, Windows shellcode stage, Reverse Hop HTTP/HTTPS Stager","fullname":"payload/cmd/windows/powershell/custom/reverse_hop_http","authors":["Spencer McIntyre","bwatters-r7","scriptjunkie \u003cscriptjunkie@scriptjunkie.us\u003e","bannedit \u003cbannedit@metasploit.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Tunnel communication over an HTTP or HTTPS hop point. Note that you must first upload data/hop/hop.php to the PHP server you wish to use as a hop.","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"HOPURL","display_value":"http://example.com/hop.php","required":"true","description":"The full URL of the hop script"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3864,"name":"Powershell Exec, Windows shellcode stage, Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/custom/reverse_ord_tcp","authors":["Spencer McIntyre","bwatters-r7","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4213,"name":"Powershell Exec, Windows shellcode stage, Reverse TCP Stager","fullname":"payload/cmd/windows/powershell/custom/reverse_tcp","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4178,"name":"Powershell Exec, Windows shellcode stage, Reverse TCP Stager (DNS)","fullname":"payload/cmd/windows/powershell/custom/reverse_tcp_dns","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4213,"name":"Powershell Exec, Windows shellcode stage, Reverse TCP Stager (IPv6)","fullname":"payload/cmd/windows/powershell/custom/reverse_ipv6_tcp","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Connect back to the attacker over IPv6","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":3995,"name":"Powershell Exec, Windows shellcode stage, Reverse TCP Stager (No NX or Win7)","fullname":"payload/cmd/windows/powershell/custom/reverse_nonx_tcp","authors":["Spencer McIntyre","bwatters-r7","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Connect back to the attacker (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4384,"name":"Powershell Exec, Windows shellcode stage, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/cmd/windows/powershell/custom/reverse_tcp_rc4_dns","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4368,"name":"Powershell Exec, Windows shellcode stage, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/custom/reverse_tcp_rc4","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4604,"name":"Powershell Exec, Windows shellcode stage, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/x64/custom/reverse_tcp_rc4","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Custom shellcode stage. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4256,"name":"Powershell Exec, Windows shellcode stage, Reverse TCP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/custom/reverse_tcp_uuid","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4419,"name":"Powershell Exec, Windows shellcode stage, Reverse TCP Stager with UUID Support (Windows x64)","fullname":"payload/cmd/windows/powershell/x64/custom/reverse_tcp_uuid","authors":["Spencer McIntyre","bwatters-r7","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Custom shellcode stage. Connect back to the attacker with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4222,"name":"Powershell Exec, Windows shellcode stage, Reverse UDP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/custom/reverse_udp","authors":["Spencer McIntyre","bwatters-r7","RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4955,"name":"Powershell Exec, Windows shellcode stage, Windows Reverse HTTP Stager (winhttp)","fullname":"payload/cmd/windows/powershell/custom/reverse_winhttp","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Tunnel communication over HTTP (Windows winhttp)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4827,"name":"Powershell Exec, Windows shellcode stage, Windows Reverse HTTP Stager (wininet)","fullname":"payload/cmd/windows/powershell/custom/reverse_http","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Tunnel communication over HTTP (Windows wininet)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4928,"name":"Powershell Exec, Windows shellcode stage, Windows Reverse HTTPS Stager (winhttp)","fullname":"payload/cmd/windows/powershell/custom/reverse_winhttps","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Tunnel communication over HTTPS (Windows winhttp)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4767,"name":"Powershell Exec, Windows shellcode stage, Windows Reverse HTTPS Stager (wininet)","fullname":"payload/cmd/windows/powershell/custom/reverse_https","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Tunnel communication over HTTPS (Windows wininet)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4420,"name":"Powershell Exec, Windows shellcode stage, Windows x64 Bind Named Pipe Stager","fullname":"payload/cmd/windows/powershell/x64/custom/bind_named_pipe","authors":["Spencer McIntyre","bwatters-r7","UserExistsError"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Custom shellcode stage. Listen for a pipe connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4400,"name":"Powershell Exec, Windows shellcode stage, Windows x64 Bind TCP Stager","fullname":"payload/cmd/windows/powershell/x64/custom/bind_tcp","authors":["Spencer McIntyre","bwatters-r7","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Custom shellcode stage. Listen for a connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4413,"name":"Powershell Exec, Windows shellcode stage, Windows x64 IPv6 Bind TCP Stager","fullname":"payload/cmd/windows/powershell/x64/custom/bind_ipv6_tcp","authors":["Spencer McIntyre","bwatters-r7","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Custom shellcode stage. Listen for an IPv6 connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4433,"name":"Powershell Exec, Windows shellcode stage, Windows x64 IPv6 Bind TCP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/x64/custom/bind_ipv6_tcp_uuid","authors":["Spencer McIntyre","bwatters-r7","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Custom shellcode stage. Listen for an IPv6 connection with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4809,"name":"Powershell Exec, Windows shellcode stage, Windows x64 Reverse HTTP Stager (winhttp)","fullname":"payload/cmd/windows/powershell/x64/custom/reverse_winhttp","authors":["Spencer McIntyre","bwatters-r7","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Custom shellcode stage. Tunnel communication over HTTP (Windows x64 winhttp)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4591,"name":"Powershell Exec, Windows shellcode stage, Windows x64 Reverse HTTP Stager (wininet)","fullname":"payload/cmd/windows/powershell/x64/custom/reverse_http","authors":["Spencer McIntyre","bwatters-r7","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Custom shellcode stage. Tunnel communication over HTTP (Windows x64 wininet)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4640,"name":"Powershell Exec, Windows shellcode stage, Windows x64 Reverse HTTP Stager (wininet)","fullname":"payload/cmd/windows/powershell/x64/custom/reverse_https","authors":["Spencer McIntyre","bwatters-r7","hdm \u003cx@hdm.io\u003e","agix","rwincey"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Custom shellcode stage. Tunnel communication over HTTP (Windows x64 wininet)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4913,"name":"Powershell Exec, Windows shellcode stage, Windows x64 Reverse HTTPS Stager (winhttp)","fullname":"payload/cmd/windows/powershell/x64/custom/reverse_winhttps","authors":["Spencer McIntyre","bwatters-r7","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Custom shellcode stage. Tunnel communication over HTTPS (Windows x64 winhttp)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4325,"name":"Powershell Exec, Windows shellcode stage, Windows x64 Reverse Named Pipe (SMB) Stager","fullname":"payload/cmd/windows/powershell/x64/custom/reverse_named_pipe","authors":["Spencer McIntyre","bwatters-r7","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Custom shellcode stage. Connect back to the attacker via a named pipe pivot","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PIPEHOST","display_value":".","required":"true","description":"Host of the pipe to connect to"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to listen on"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4410,"name":"Powershell Exec, Windows shellcode stage, Windows x64 Reverse TCP Stager","fullname":"payload/cmd/windows/powershell/x64/custom/reverse_tcp","authors":["Spencer McIntyre","bwatters-r7","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Custom shellcode stage. Connect back to the attacker (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4252,"name":"Powershell Exec, Windows shellcode stage, Windows x86 Bind Named Pipe Stager","fullname":"payload/cmd/windows/powershell/custom/bind_named_pipe","authors":["Spencer McIntyre","bwatters-r7","UserExistsError"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Listen for a pipe connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4191,"name":"Powershell Exec, Windows shellcode stage, Windows x86 Reverse Named Pipe (SMB) Stager","fullname":"payload/cmd/windows/powershell/custom/reverse_named_pipe","authors":["Spencer McIntyre","bwatters-r7","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Custom shellcode stage. Connect back to the attacker via a named pipe pivot","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PIPEHOST","display_value":".","required":"true","description":"Host of the pipe to connect to"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to listen on"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4412,"name":"Powershell Exec, Windows x64 Bind Named Pipe Stager","fullname":"payload/cmd/windows/powershell/x64/meterpreter/bind_named_pipe","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","UserExistsError"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Listen for a pipe connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4408,"name":"Powershell Exec, Windows x64 Bind Named Pipe Stager","fullname":"payload/cmd/windows/powershell/x64/peinject/bind_named_pipe","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","UserExistsError"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Listen for a pipe connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4368,"name":"Powershell Exec, Windows x64 Bind Named Pipe Stager","fullname":"payload/cmd/windows/powershell/x64/vncinject/bind_named_pipe","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","UserExistsError"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Listen for a pipe connection (Windows x64)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4390,"name":"Powershell Exec, Windows x64 Bind TCP Stager","fullname":"payload/cmd/windows/powershell/x64/meterpreter/bind_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Listen for a connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4407,"name":"Powershell Exec, Windows x64 Bind TCP Stager","fullname":"payload/cmd/windows/powershell/x64/peinject/bind_tcp","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Listen for a connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4437,"name":"Powershell Exec, Windows x64 Bind TCP Stager","fullname":"payload/cmd/windows/powershell/x64/vncinject/bind_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Listen for a connection (Windows x64)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4445,"name":"Powershell Exec, Windows x64 Command Shell, Bind TCP Inline","fullname":"payload/cmd/windows/powershell/x64/shell_bind_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Listen for a connection and spawn a command shell (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4657,"name":"Powershell Exec, Windows x64 Command Shell, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/x64/shell/bind_tcp_rc4","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Spawn a piped command shell (Windows x64) (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4488,"name":"Powershell Exec, Windows x64 Command Shell, Bind TCP Stager with UUID Support (Windows x64)","fullname":"payload/cmd/windows/powershell/x64/shell/bind_tcp_uuid","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Spawn a piped command shell (Windows x64) (staged). Listen for a connection with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4395,"name":"Powershell Exec, Windows x64 Command Shell, Reverse TCP Inline","fullname":"payload/cmd/windows/powershell/x64/shell_reverse_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Connect back to attacker and spawn a command shell (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4595,"name":"Powershell Exec, Windows x64 Command Shell, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/cmd/windows/powershell/x64/shell/reverse_tcp_rc4","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Spawn a piped command shell (Windows x64) (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4461,"name":"Powershell Exec, Windows x64 Command Shell, Reverse TCP Stager with UUID Support (Windows x64)","fullname":"payload/cmd/windows/powershell/x64/shell/reverse_tcp_uuid","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Spawn a piped command shell (Windows x64) (staged). Connect back to the attacker with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4395,"name":"Powershell Exec, Windows x64 Command Shell, Windows x64 Bind Named Pipe Stager","fullname":"payload/cmd/windows/powershell/x64/shell/bind_named_pipe","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","UserExistsError"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Spawn a piped command shell (Windows x64) (staged). Listen for a pipe connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4416,"name":"Powershell Exec, Windows x64 Command Shell, Windows x64 Bind TCP Stager","fullname":"payload/cmd/windows/powershell/x64/shell/bind_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Spawn a piped command shell (Windows x64) (staged). Listen for a connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4427,"name":"Powershell Exec, Windows x64 Command Shell, Windows x64 IPv6 Bind TCP Stager","fullname":"payload/cmd/windows/powershell/x64/shell/bind_ipv6_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Spawn a piped command shell (Windows x64) (staged). Listen for an IPv6 connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4491,"name":"Powershell Exec, Windows x64 Command Shell, Windows x64 IPv6 Bind TCP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/x64/shell/bind_ipv6_tcp_uuid","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Spawn a piped command shell (Windows x64) (staged). Listen for an IPv6 connection with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4416,"name":"Powershell Exec, Windows x64 Command Shell, Windows x64 Reverse TCP Stager","fullname":"payload/cmd/windows/powershell/x64/shell/reverse_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Spawn a piped command shell (Windows x64) (staged). Connect back to the attacker (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4117,"name":"Powershell Exec, Windows x64 Execute Command","fullname":"payload/cmd/windows/powershell/x64/exec","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Execute an arbitrary command (Windows x64)","options":[{"name":"CMD","display_value":"","required":"true","description":"The command string to execute"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4472,"name":"Powershell Exec, Windows x64 IPv6 Bind TCP Stager","fullname":"payload/cmd/windows/powershell/x64/meterpreter/bind_ipv6_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Listen for an IPv6 connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4472,"name":"Powershell Exec, Windows x64 IPv6 Bind TCP Stager","fullname":"payload/cmd/windows/powershell/x64/peinject/bind_ipv6_tcp","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Listen for an IPv6 connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4433,"name":"Powershell Exec, Windows x64 IPv6 Bind TCP Stager","fullname":"payload/cmd/windows/powershell/x64/vncinject/bind_ipv6_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Listen for an IPv6 connection (Windows x64)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4489,"name":"Powershell Exec, Windows x64 IPv6 Bind TCP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/x64/meterpreter/bind_ipv6_tcp_uuid","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Listen for an IPv6 connection with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4485,"name":"Powershell Exec, Windows x64 IPv6 Bind TCP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/x64/peinject/bind_ipv6_tcp_uuid","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Listen for an IPv6 connection with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4485,"name":"Powershell Exec, Windows x64 IPv6 Bind TCP Stager with UUID Support","fullname":"payload/cmd/windows/powershell/x64/vncinject/bind_ipv6_tcp_uuid","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Listen for an IPv6 connection with UUID Support (Windows x64)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m[1m[31m[-][0m Error while running command info: wrong number of arguments (given 1, expected 0)

Call stack:
/home/pflegusch/master/metasploit-framework/modules/payloads/singles/windows/x64/loadlibrary.rb:57:in `generate'
/home/pflegusch/master/metasploit-framework/modules/payloads/adapters/cmd/windows/powershell/x64.rb:39:in `generate'
/home/pflegusch/master/metasploit-framework/lib/msf/core/payload.rb:195:in `size'
/home/pflegusch/master/metasploit-framework/lib/msf/base/serializer/json.rb:149:in `dump_payload_module'
/home/pflegusch/master/metasploit-framework/lib/msf/base/serializer/json.rb:22:in `dump_module'
/home/pflegusch/master/metasploit-framework/lib/msf/ui/console/command_dispatcher/modules.rb:125:in `print_module_info'
/home/pflegusch/master/metasploit-framework/lib/msf/ui/console/command_dispatcher/modules.rb:190:in `block in cmd_info'
/home/pflegusch/master/metasploit-framework/lib/msf/ui/console/command_dispatcher/modules.rb:170:in `each'
/home/pflegusch/master/metasploit-framework/lib/msf/ui/console/command_dispatcher/modules.rb:170:in `cmd_info'
/home/pflegusch/master/metasploit-framework/lib/rex/ui/text/dispatcher_shell.rb:581:in `run_command'
/home/pflegusch/master/metasploit-framework/lib/rex/ui/text/dispatcher_shell.rb:530:in `block in run_single'
/home/pflegusch/master/metasploit-framework/lib/rex/ui/text/dispatcher_shell.rb:524:in `each'
/home/pflegusch/master/metasploit-framework/lib/rex/ui/text/dispatcher_shell.rb:524:in `run_single'
/home/pflegusch/master/metasploit-framework/lib/msf/ui/console/driver.rb:205:in `block in initialize'
/home/pflegusch/master/metasploit-framework/lib/msf/ui/console/driver.rb:204:in `each'
/home/pflegusch/master/metasploit-framework/lib/msf/ui/console/driver.rb:204:in `initialize'
/home/pflegusch/master/metasploit-framework/lib/metasploit/framework/command/console.rb:60:in `new'
/home/pflegusch/master/metasploit-framework/lib/metasploit/framework/command/console.rb:60:in `driver'
/home/pflegusch/master/metasploit-framework/lib/metasploit/framework/command/console.rb:48:in `start'
/home/pflegusch/master/metasploit-framework/lib/metasploit/framework/command/base.rb:82:in `start'
../metasploit-framework/msfconsole:23:in `<main>'
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4361,"name":"Powershell Exec, Windows x64 Pingback, Reverse TCP Inline","fullname":"payload/cmd/windows/powershell/x64/pingback_reverse_tcp","authors":["Spencer McIntyre","bwatters-r7"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Connect back to attacker and report UUID (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":5035,"name":"Powershell Exec, Windows x64 Reverse HTTP Stager (winhttp)","fullname":"payload/cmd/windows/powershell/x64/meterpreter/reverse_winhttp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Tunnel communication over HTTP (Windows x64 winhttp)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":5249,"name":"Powershell Exec, Windows x64 Reverse HTTP Stager (winhttp)","fullname":"payload/cmd/windows/powershell/x64/vncinject/reverse_winhttp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Tunnel communication over HTTP (Windows x64 winhttp)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4746,"name":"Powershell Exec, Windows x64 Reverse HTTP Stager (wininet)","fullname":"payload/cmd/windows/powershell/x64/meterpreter/reverse_http","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Tunnel communication over HTTP (Windows x64 wininet)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4555,"name":"Powershell Exec, Windows x64 Reverse HTTP Stager (wininet)","fullname":"payload/cmd/windows/powershell/x64/meterpreter/reverse_https","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","agix","rwincey"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Tunnel communication over HTTP (Windows x64 wininet)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4615,"name":"Powershell Exec, Windows x64 Reverse HTTP Stager (wininet)","fullname":"payload/cmd/windows/powershell/x64/vncinject/reverse_http","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Tunnel communication over HTTP (Windows x64 wininet)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4625,"name":"Powershell Exec, Windows x64 Reverse HTTP Stager (wininet)","fullname":"payload/cmd/windows/powershell/x64/vncinject/reverse_https","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","agix","rwincey"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Tunnel communication over HTTP (Windows x64 wininet)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":5069,"name":"Powershell Exec, Windows x64 Reverse HTTPS Stager (winhttp)","fullname":"payload/cmd/windows/powershell/x64/meterpreter/reverse_winhttps","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Tunnel communication over HTTPS (Windows x64 winhttp)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4937,"name":"Powershell Exec, Windows x64 Reverse HTTPS Stager (winhttp)","fullname":"payload/cmd/windows/powershell/x64/vncinject/reverse_winhttps","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Tunnel communication over HTTPS (Windows x64 winhttp)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4314,"name":"Powershell Exec, Windows x64 Reverse Named Pipe (SMB) Stager","fullname":"payload/cmd/windows/powershell/x64/meterpreter/reverse_named_pipe","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Connect back to the attacker via a named pipe pivot","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PIPEHOST","display_value":".","required":"true","description":"Host of the pipe to connect to"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to listen on"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4381,"name":"Powershell Exec, Windows x64 Reverse Named Pipe (SMB) Stager","fullname":"payload/cmd/windows/powershell/x64/peinject/reverse_named_pipe","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Connect back to the attacker via a named pipe pivot","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"PIPEHOST","display_value":".","required":"true","description":"Host of the pipe to connect to"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to listen on"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4391,"name":"Powershell Exec, Windows x64 Reverse TCP Stager","fullname":"payload/cmd/windows/powershell/x64/meterpreter/reverse_tcp","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Connect back to the attacker (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4377,"name":"Powershell Exec, Windows x64 Reverse TCP Stager","fullname":"payload/cmd/windows/powershell/x64/peinject/reverse_tcp","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Connect back to the attacker (Windows x64)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4360,"name":"Powershell Exec, Windows x64 Reverse TCP Stager","fullname":"payload/cmd/windows/powershell/x64/vncinject/reverse_tcp","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an x64 payload from a command via PowerShell. Connect back to the attacker (Windows x64)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4289,"name":"Powershell Exec, Windows x86 Bind Named Pipe Stager","fullname":"payload/cmd/windows/powershell/dllinject/bind_named_pipe","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","UserExistsError"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a pipe connection (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4258,"name":"Powershell Exec, Windows x86 Bind Named Pipe Stager","fullname":"payload/cmd/windows/powershell/meterpreter/bind_named_pipe","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","UserExistsError"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a pipe connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4308,"name":"Powershell Exec, Windows x86 Bind Named Pipe Stager","fullname":"payload/cmd/windows/powershell/patchupdllinject/bind_named_pipe","authors":["Spencer McIntyre","jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","UserExistsError"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a pipe connection (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4245,"name":"Powershell Exec, Windows x86 Bind Named Pipe Stager","fullname":"payload/cmd/windows/powershell/patchupmeterpreter/bind_named_pipe","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","UserExistsError"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a pipe connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4283,"name":"Powershell Exec, Windows x86 Bind Named Pipe Stager","fullname":"payload/cmd/windows/powershell/peinject/bind_named_pipe","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","UserExistsError"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a pipe connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4295,"name":"Powershell Exec, Windows x86 Bind Named Pipe Stager","fullname":"payload/cmd/windows/powershell/vncinject/bind_named_pipe","authors":["Spencer McIntyre","sf \u003cstephen_fewer@harmonysecurity.com\u003e","UserExistsError"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Listen for a pipe connection (Windows x86)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4223,"name":"Powershell Exec, Windows x86 Pingback, Bind TCP Inline","fullname":"payload/cmd/windows/powershell/pingback_bind_tcp","authors":["Spencer McIntyre","bwatters-r7"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Open a socket and report UUID when a connection is received (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4186,"name":"Powershell Exec, Windows x86 Pingback, Reverse TCP Inline","fullname":"payload/cmd/windows/powershell/pingback_reverse_tcp","authors":["Spencer McIntyre","bwatters-r7"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to attacker and report UUID (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4180,"name":"Powershell Exec, Windows x86 Reverse Named Pipe (SMB) Stager","fullname":"payload/cmd/windows/powershell/meterpreter/reverse_named_pipe","authors":["Spencer McIntyre","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker via a named pipe pivot","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PIPEHOST","display_value":".","required":"true","description":"Host of the pipe to connect to"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to listen on"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":4189,"name":"Powershell Exec, Windows x86 Reverse Named Pipe (SMB) Stager","fullname":"payload/cmd/windows/powershell/peinject/reverse_named_pipe","authors":["Spencer McIntyre","ege \u003cegebalci@pm.me\u003e","OJ Reeves"],"rank":"Normal","description":"Execute an x86 payload from a command via PowerShell. Connect back to the attacker via a named pipe pivot","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"PIPEHOST","display_value":".","required":"true","description":"Host of the pipe to connect to"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to listen on"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":497,"name":"Python Exec, Command Shell, Bind TCP (via python)","fullname":"payload/cmd/unix/python/shell_bind_tcp","authors":["Spencer McIntyre","mumbai"],"rank":"Normal","description":"Execute a Python payload from a command. Creates an interactive shell via Python, encodes with base64 by design. Compatible with Python 2.4-2.7 and 3.4+.","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":416,"name":"Python Exec, Command Shell, Bind TCP (via python)","fullname":"payload/cmd/windows/python/shell_bind_tcp","authors":["Spencer McIntyre","mumbai"],"rank":"Normal","description":"Execute a Python payload from a command. Creates an interactive shell via Python, encodes with base64 by design. Compatible with Python 2.4-2.7 and 3.4+.","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":477,"name":"Python Exec, Command Shell, Reverse TCP (via python)","fullname":"payload/cmd/unix/python/shell_reverse_tcp","authors":["Spencer McIntyre","Ben Campbell \u003ceat_meatballs@hotmail.co.uk\u003e"],"rank":"Normal","description":"Execute a Python payload from a command. Creates an interactive shell via Python, encodes with base64 by design. Compatible with Python 2.4-2.7 and 3.4+.","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":396,"name":"Python Exec, Command Shell, Reverse TCP (via python)","fullname":"payload/cmd/windows/python/shell_reverse_tcp","authors":["Spencer McIntyre","Ben Campbell \u003ceat_meatballs@hotmail.co.uk\u003e"],"rank":"Normal","description":"Execute a Python payload from a command. Creates an interactive shell via Python, encodes with base64 by design. Compatible with Python 2.4-2.7 and 3.4+.","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":497,"name":"Python Exec, Command Shell, Reverse TCP SSL (via python)","fullname":"payload/cmd/unix/python/shell_reverse_tcp_ssl","authors":["Spencer McIntyre","RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Execute a Python payload from a command. Creates an interactive shell via Python, uses SSL, encodes with base64 by design. Compatible with Python 2.6-2.7 and 3.4+.","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":416,"name":"Python Exec, Command Shell, Reverse TCP SSL (via python)","fullname":"payload/cmd/windows/python/shell_reverse_tcp_ssl","authors":["Spencer McIntyre","RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Execute a Python payload from a command. Creates an interactive shell via Python, uses SSL, encodes with base64 by design. Compatible with Python 2.6-2.7 and 3.4+.","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":473,"name":"Python Exec, Command Shell, Reverse UDP (via python)","fullname":"payload/cmd/unix/python/shell_reverse_udp","authors":["Spencer McIntyre","RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Execute a Python payload from a command. Creates an interactive shell via Python, encodes with base64 by design. Compatible with Python 2.6-2.7 and 3.4+.","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":392,"name":"Python Exec, Command Shell, Reverse UDP (via python)","fullname":"payload/cmd/windows/python/shell_reverse_udp","authors":["Spencer McIntyre","RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Execute a Python payload from a command. Creates an interactive shell via Python, encodes with base64 by design. Compatible with Python 2.6-2.7 and 3.4+.","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":24965,"name":"Python Exec, Python Meterpreter Shell, Bind TCP Inline","fullname":"payload/cmd/unix/python/meterpreter_bind_tcp","authors":["Spencer McIntyre"],"rank":"Normal","description":"Execute a Python payload from a command. Connect to the victim and spawn a Meterpreter shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":24884,"name":"Python Exec, Python Meterpreter Shell, Bind TCP Inline","fullname":"payload/cmd/windows/python/meterpreter_bind_tcp","authors":["Spencer McIntyre"],"rank":"Normal","description":"Execute a Python payload from a command. Connect to the victim and spawn a Meterpreter shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":25130,"name":"Python Exec, Python Meterpreter Shell, Reverse HTTP Inline","fullname":"payload/cmd/unix/python/meterpreter_reverse_http","authors":["Spencer McIntyre"],"rank":"Normal","description":"Execute a Python payload from a command. Connect back to the attacker and spawn a Meterpreter shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":25048,"name":"Python Exec, Python Meterpreter Shell, Reverse HTTP Inline","fullname":"payload/cmd/windows/python/meterpreter_reverse_http","authors":["Spencer McIntyre"],"rank":"Normal","description":"Execute a Python payload from a command. Connect back to the attacker and spawn a Meterpreter shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":25130,"name":"Python Exec, Python Meterpreter Shell, Reverse HTTPS Inline","fullname":"payload/cmd/unix/python/meterpreter_reverse_https","authors":["Spencer McIntyre"],"rank":"Normal","description":"Execute a Python payload from a command. Connect back to the attacker and spawn a Meterpreter shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":25044,"name":"Python Exec, Python Meterpreter Shell, Reverse HTTPS Inline","fullname":"payload/cmd/windows/python/meterpreter_reverse_https","authors":["Spencer McIntyre"],"rank":"Normal","description":"Execute a Python payload from a command. Connect back to the attacker and spawn a Meterpreter shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":24936,"name":"Python Exec, Python Meterpreter Shell, Reverse TCP Inline","fullname":"payload/cmd/unix/python/meterpreter_reverse_tcp","authors":["Spencer McIntyre"],"rank":"Normal","description":"Execute a Python payload from a command. Connect back to the attacker and spawn a Meterpreter shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":24856,"name":"Python Exec, Python Meterpreter Shell, Reverse TCP Inline","fullname":"payload/cmd/windows/python/meterpreter_reverse_tcp","authors":["Spencer McIntyre"],"rank":"Normal","description":"Execute a Python payload from a command. Connect back to the attacker and spawn a Meterpreter shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":482,"name":"Python Exec, Python Meterpreter, Python Bind TCP Stager","fullname":"payload/cmd/unix/python/meterpreter/bind_tcp","authors":["Spencer McIntyre"],"rank":"Normal","description":"Execute a Python payload from a command. Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":400,"name":"Python Exec, Python Meterpreter, Python Bind TCP Stager","fullname":"payload/cmd/windows/python/meterpreter/bind_tcp","authors":["Spencer McIntyre"],"rank":"Normal","description":"Execute a Python payload from a command. Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":545,"name":"Python Exec, Python Meterpreter, Python Bind TCP Stager with UUID Support","fullname":"payload/cmd/unix/python/meterpreter/bind_tcp_uuid","authors":["Spencer McIntyre","OJ Reeves"],"rank":"Normal","description":"Execute a Python payload from a command. Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Listen for a connection with UUID Support","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":460,"name":"Python Exec, Python Meterpreter, Python Bind TCP Stager with UUID Support","fullname":"payload/cmd/windows/python/meterpreter/bind_tcp_uuid","authors":["Spencer McIntyre","OJ Reeves"],"rank":"Normal","description":"Execute a Python payload from a command. Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Listen for a connection with UUID Support","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":656,"name":"Python Exec, Python Meterpreter, Python Reverse HTTP Stager","fullname":"payload/cmd/unix/python/meterpreter/reverse_http","authors":["Spencer McIntyre"],"rank":"Normal","description":"Execute a Python payload from a command. Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Tunnel communication over HTTP","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":564,"name":"Python Exec, Python Meterpreter, Python Reverse HTTP Stager","fullname":"payload/cmd/windows/python/meterpreter/reverse_http","authors":["Spencer McIntyre"],"rank":"Normal","description":"Execute a Python payload from a command. Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Tunnel communication over HTTP","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":836,"name":"Python Exec, Python Meterpreter, Python Reverse HTTPS Stager","fullname":"payload/cmd/unix/python/meterpreter/reverse_https","authors":["Spencer McIntyre"],"rank":"Normal","description":"Execute a Python payload from a command. Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Tunnel communication over HTTP using SSL","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":756,"name":"Python Exec, Python Meterpreter, Python Reverse HTTPS Stager","fullname":"payload/cmd/windows/python/meterpreter/reverse_https","authors":["Spencer McIntyre"],"rank":"Normal","description":"Execute a Python payload from a command. Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Tunnel communication over HTTP using SSL","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":510,"name":"Python Exec, Python Meterpreter, Python Reverse TCP SSL Stager","fullname":"payload/cmd/unix/python/meterpreter/reverse_tcp_ssl","authors":["Spencer McIntyre","Ben Campbell \u003ceat_meatballs@hotmail.co.uk\u003e","RageLtMan"],"rank":"Normal","description":"Execute a Python payload from a command. Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Reverse Python connect back stager using SSL","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":428,"name":"Python Exec, Python Meterpreter, Python Reverse TCP SSL Stager","fullname":"payload/cmd/windows/python/meterpreter/reverse_tcp_ssl","authors":["Spencer McIntyre","Ben Campbell \u003ceat_meatballs@hotmail.co.uk\u003e","RageLtMan"],"rank":"Normal","description":"Execute a Python payload from a command. Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Reverse Python connect back stager using SSL","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":514,"name":"Python Exec, Python Meterpreter, Python Reverse TCP Stager","fullname":"payload/cmd/unix/python/meterpreter/reverse_tcp","authors":["Spencer McIntyre"],"rank":"Normal","description":"Execute a Python payload from a command. Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":432,"name":"Python Exec, Python Meterpreter, Python Reverse TCP Stager","fullname":"payload/cmd/windows/python/meterpreter/reverse_tcp","authors":["Spencer McIntyre"],"rank":"Normal","description":"Execute a Python payload from a command. Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":582,"name":"Python Exec, Python Meterpreter, Python Reverse TCP Stager with UUID Support","fullname":"payload/cmd/unix/python/meterpreter/reverse_tcp_uuid","authors":["Spencer McIntyre","OJ Reeves"],"rank":"Normal","description":"Execute a Python payload from a command. Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Connect back to the attacker with UUID Support","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":496,"name":"Python Exec, Python Meterpreter, Python Reverse TCP Stager with UUID Support","fullname":"payload/cmd/windows/python/meterpreter/reverse_tcp_uuid","authors":["Spencer McIntyre","OJ Reeves"],"rank":"Normal","description":"Execute a Python payload from a command. Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Connect back to the attacker with UUID Support","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":486,"name":"Python Exec, Python Pingback, Bind TCP (via python)","fullname":"payload/cmd/unix/python/pingback_bind_tcp","authors":["Spencer McIntyre","asoto-r7"],"rank":"Normal","description":"Execute a Python payload from a command. Listens for a connection from the attacker, sends a UUID, then terminates","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":404,"name":"Python Exec, Python Pingback, Bind TCP (via python)","fullname":"payload/cmd/windows/python/pingback_bind_tcp","authors":["Spencer McIntyre","asoto-r7"],"rank":"Normal","description":"Execute a Python payload from a command. Listens for a connection from the attacker, sends a UUID, then terminates","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":425,"name":"Python Exec, Python Pingback, Reverse TCP (via python)","fullname":"payload/cmd/unix/python/pingback_reverse_tcp","authors":["Spencer McIntyre","asoto-r7"],"rank":"Normal","description":"Execute a Python payload from a command. Connects back to the attacker, sends a UUID, then terminates","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":340,"name":"Python Exec, Python Pingback, Reverse TCP (via python)","fullname":"payload/cmd/windows/python/pingback_reverse_tcp","authors":["Spencer McIntyre","asoto-r7"],"rank":"Normal","description":"Execute a Python payload from a command. Connects back to the attacker, sends a UUID, then terminates","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":24872,"name":"Python Meterpreter Shell, Bind TCP Inline","fullname":"payload/python/meterpreter_bind_tcp","authors":["Spencer McIntyre"],"rank":"Normal","description":"Connect to the victim and spawn a Meterpreter shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":25000,"name":"Python Meterpreter Shell, Reverse HTTP Inline","fullname":"payload/python/meterpreter_reverse_http","authors":["Spencer McIntyre"],"rank":"Normal","description":"Connect back to the attacker and spawn a Meterpreter shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":25036,"name":"Python Meterpreter Shell, Reverse HTTPS Inline","fullname":"payload/python/meterpreter_reverse_https","authors":["Spencer McIntyre"],"rank":"Normal","description":"Connect back to the attacker and spawn a Meterpreter shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":24844,"name":"Python Meterpreter Shell, Reverse TCP Inline","fullname":"payload/python/meterpreter_reverse_tcp","authors":["Spencer McIntyre"],"rank":"Normal","description":"Connect back to the attacker and spawn a Meterpreter shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":388,"name":"Python Meterpreter, Python Bind TCP Stager","fullname":"payload/python/meterpreter/bind_tcp","authors":["Spencer McIntyre"],"rank":"Normal","description":"Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Listen for a connection","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":448,"name":"Python Meterpreter, Python Bind TCP Stager with UUID Support","fullname":"payload/python/meterpreter/bind_tcp_uuid","authors":["Spencer McIntyre","OJ Reeves"],"rank":"Normal","description":"Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Listen for a connection with UUID Support","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":556,"name":"Python Meterpreter, Python Reverse HTTP Stager","fullname":"payload/python/meterpreter/reverse_http","authors":["Spencer McIntyre"],"rank":"Normal","description":"Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Tunnel communication over HTTP","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":728,"name":"Python Meterpreter, Python Reverse HTTPS Stager","fullname":"payload/python/meterpreter/reverse_https","authors":["Spencer McIntyre"],"rank":"Normal","description":"Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Tunnel communication over HTTP using SSL","options":[{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":416,"name":"Python Meterpreter, Python Reverse TCP SSL Stager","fullname":"payload/python/meterpreter/reverse_tcp_ssl","authors":["Spencer McIntyre","Ben Campbell \u003ceat_meatballs@hotmail.co.uk\u003e","RageLtMan"],"rank":"Normal","description":"Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Reverse Python connect back stager using SSL","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":420,"name":"Python Meterpreter, Python Reverse TCP Stager","fullname":"payload/python/meterpreter/reverse_tcp","authors":["Spencer McIntyre"],"rank":"Normal","description":"Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Connect back to the attacker","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":484,"name":"Python Meterpreter, Python Reverse TCP Stager with UUID Support","fullname":"payload/python/meterpreter/reverse_tcp_uuid","authors":["Spencer McIntyre","OJ Reeves"],"rank":"Normal","description":"Run a meterpreter server in Python (compatible with 2.5-2.7 \u0026 3.1+). Connect back to the attacker with UUID Support","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":392,"name":"Python Pingback, Bind TCP (via python)","fullname":"payload/python/pingback_bind_tcp","authors":["asoto-r7"],"rank":"Normal","description":"Listens for a connection from the attacker, sends a UUID, then terminates","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Python","arch":"python","privileged":"false","size":332,"name":"Python Pingback, Reverse TCP (via python)","fullname":"payload/python/pingback_reverse_tcp","authors":["asoto-r7"],"rank":"Normal","description":"Connects back to the attacker, sends a UUID, then terminates","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"R","arch":"r","privileged":"false","size":125,"name":"R Command Shell, Bind TCP","fullname":"payload/r/shell_bind_tcp","authors":["RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Continually listen for a connection and spawn a command shell via R","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"R","arch":"r","privileged":"false","size":135,"name":"R Command Shell, Reverse TCP","fullname":"payload/r/shell_reverse_tcp","authors":["RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Connect back and create a command shell via R","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"Reflective DLL Injection, Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/windows/dllinject/bind_ipv6_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Listen for an IPv6 connection (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"Reflective DLL Injection, Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/dllinject/bind_ipv6_tcp_uuid","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":201,"name":"Reflective DLL Injection, Bind TCP Stager (No NX or Win7)","fullname":"payload/windows/dllinject/bind_nonx_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Listen for a connection (No NX)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":415,"name":"Reflective DLL Injection, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/dllinject/bind_tcp_rc4","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Listen for a connection","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"Reflective DLL Injection, Bind TCP Stager (Windows x86)","fullname":"payload/windows/dllinject/bind_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Listen for a connection (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"Reflective DLL Injection, Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/dllinject/bind_tcp_uuid","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Listen for a connection with UUID Support (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":92,"name":"Reflective DLL Injection, Find Tag Ordinal Stager","fullname":"payload/windows/dllinject/find_tag","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Use an established connection","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":359,"name":"Reflective DLL Injection, Hidden Bind Ipknock TCP Stager","fullname":"payload/windows/dllinject/bind_hidden_ipknock_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":343,"name":"Reflective DLL Injection, Hidden Bind TCP Stager","fullname":"payload/windows/dllinject/bind_hidden_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":282,"name":"Reflective DLL Injection, Reverse All-Port TCP Stager","fullname":"payload/windows/dllinject/reverse_tcp_allports","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":650,"name":"Reflective DLL Injection, Reverse HTTP Stager Proxy","fullname":"payload/windows/dllinject/reverse_http_proxy_pstore","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Tunnel communication over HTTP","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":353,"name":"Reflective DLL Injection, Reverse Hop HTTP/HTTPS Stager","fullname":"payload/windows/dllinject/reverse_hop_http","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","scriptjunkie \u003cscriptjunkie@scriptjunkie.us\u003e","bannedit \u003cbannedit@metasploit.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Tunnel communication over an HTTP or HTTPS hop point. Note that you must first upload data/hop/hop.php to the PHP server you wish to use as a hop.","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"HOPURL","display_value":"http://example.com/hop.php","required":"true","description":"The full URL of the hop script"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":93,"name":"Reflective DLL Injection, Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/windows/dllinject/reverse_ord_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":296,"name":"Reflective DLL Injection, Reverse TCP Stager","fullname":"payload/windows/dllinject/reverse_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":306,"name":"Reflective DLL Injection, Reverse TCP Stager (DNS)","fullname":"payload/windows/dllinject/reverse_tcp_dns","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","RageLtMan"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":289,"name":"Reflective DLL Injection, Reverse TCP Stager (IPv6)","fullname":"payload/windows/dllinject/reverse_ipv6_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Connect back to the attacker over IPv6","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":177,"name":"Reflective DLL Injection, Reverse TCP Stager (No NX or Win7)","fullname":"payload/windows/dllinject/reverse_nonx_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Connect back to the attacker (No NX)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":423,"name":"Reflective DLL Injection, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/windows/dllinject/reverse_tcp_rc4_dns","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":413,"name":"Reflective DLL Injection, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/dllinject/reverse_tcp_rc4","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":329,"name":"Reflective DLL Injection, Reverse TCP Stager with UUID Support","fullname":"payload/windows/dllinject/reverse_tcp_uuid","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Connect back to the attacker with UUID Support","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":933,"name":"Reflective DLL Injection, Windows Reverse HTTP Stager (winhttp)","fullname":"payload/windows/dllinject/reverse_winhttp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Tunnel communication over HTTP (Windows winhttp)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":672,"name":"Reflective DLL Injection, Windows Reverse HTTP Stager (wininet)","fullname":"payload/windows/dllinject/reverse_http","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Tunnel communication over HTTP (Windows wininet)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":349,"name":"Reflective DLL Injection, Windows x86 Bind Named Pipe Stager","fullname":"payload/windows/dllinject/bind_named_pipe","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","UserExistsError"],"rank":"Normal","description":"Inject a DLL via a reflective loader. Listen for a pipe connection (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the Reflective DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Ruby","arch":"ruby","privileged":"false","size":516,"name":"Ruby Command Shell, Bind TCP","fullname":"payload/ruby/shell_bind_tcp","authors":["kris katterjohn \u003ckatterjohn@gmail.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Continually listen for a connection and spawn a command shell via Ruby","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Ruby","arch":"ruby","privileged":"false","size":524,"name":"Ruby Command Shell, Bind TCP IPv6","fullname":"payload/ruby/shell_bind_tcp_ipv6","authors":["kris katterjohn \u003ckatterjohn@gmail.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Continually listen for a connection and spawn a command shell via Ruby","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Ruby","arch":"ruby","privileged":"false","size":496,"name":"Ruby Command Shell, Reverse TCP","fullname":"payload/ruby/shell_reverse_tcp","authors":["kris katterjohn \u003ckatterjohn@gmail.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Connect back and create a command shell via Ruby","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Ruby","arch":"ruby","privileged":"false","size":424,"name":"Ruby Command Shell, Reverse TCP SSL","fullname":"payload/ruby/shell_reverse_tcp_ssl","authors":["RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Connect back and create a command shell via Ruby, uses SSL","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Ruby","arch":"ruby","privileged":"false","size":103,"name":"Ruby Pingback, Bind TCP","fullname":"payload/ruby/pingback_bind_tcp","authors":["asoto-r7"],"rank":"Normal","description":"Listens for a connection from the attacker, sends a UUID, then terminates","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Ruby","arch":"ruby","privileged":"false","size":85,"name":"Ruby Pingback, Reverse TCP","fullname":"payload/ruby/pingback_reverse_tcp","authors":["asoto-r7"],"rank":"Normal","description":"Connect back to the attacker, sends a UUID, then terminates","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Solaris","arch":"sparc","privileged":"false","size":180,"name":"Solaris Command Shell, Bind TCP Inline","fullname":"payload/solaris/sparc/shell_bind_tcp","authors":["vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Solaris","arch":"x86","privileged":"false","size":160,"name":"Solaris Command Shell, Bind TCP Inline","fullname":"payload/solaris/x86/shell_bind_tcp","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Solaris","arch":"sparc","privileged":"false","size":136,"name":"Solaris Command Shell, Find Port Inline","fullname":"payload/solaris/sparc/shell_find_port","authors":["vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Spawn a shell on an established connection","options":[{"name":"CPORT","display_value":"54702","required":"false","description":"The local client port"}]}
[0m{"platform":"Solaris","arch":"x86","privileged":"false","size":151,"name":"Solaris Command Shell, Find Port Inline","fullname":"payload/solaris/x86/shell_find_port","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Spawn a shell on an established connection","options":[{"name":"CPORT","display_value":"47463","required":"false","description":"The local client port"}]}
[0m{"platform":"Solaris","arch":"sparc","privileged":"false","size":144,"name":"Solaris Command Shell, Reverse TCP Inline","fullname":"payload/solaris/sparc/shell_reverse_tcp","authors":["vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Solaris","arch":"x86","privileged":"false","size":156,"name":"Solaris Command Shell, Reverse TCP Inline","fullname":"payload/solaris/x86/shell_reverse_tcp","authors":["Ramon de C Valle \u003crcvalle@metasploit.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"true","size":487,"name":"Unix Command Shell, Bind TCP (inetd)","fullname":"payload/cmd/unix/bind_inetd","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell (persistent)","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":0,"name":"Unix Command Shell, Bind TCP (stub)","fullname":"payload/cmd/unix/bind_stub","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell (stub only, no payload)","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":140,"name":"Unix Command Shell, Bind TCP (via AWK)","fullname":"payload/cmd/unix/bind_awk","authors":["espreto \u003crobertoespreto@gmail.com\u003e","Ulisses Castro \u003cuss.thebug@gmail.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via GNU AWK","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":26,"name":"Unix Command Shell, Bind TCP (via BusyBox telnetd)","fullname":"payload/cmd/unix/bind_busybox_telnetd","authors":["Matthew Kienow \u003cmatthew_kienow[AT]rapid7.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via BusyBox telnetd","options":[{"name":"LOGIN_CMD","display_value":"/bin/sh","required":"true","description":"Command telnetd will execute on connect"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":218,"name":"Unix Command Shell, Bind TCP (via Lua)","fullname":"payload/cmd/unix/bind_lua","authors":["xistence \u003cxistence@0x90.nl\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via Lua","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":240,"name":"Unix Command Shell, Bind TCP (via Perl)","fullname":"payload/cmd/unix/bind_perl","authors":["Samy \u003csamy@samy.pl\u003e","cazz \u003cbmc@shmoo.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via perl","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":132,"name":"Unix Command Shell, Bind TCP (via R)","fullname":"payload/cmd/unix/bind_r","authors":["RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Continually listen for a connection and spawn a command shell via R","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":137,"name":"Unix Command Shell, Bind TCP (via Ruby)","fullname":"payload/cmd/unix/bind_ruby","authors":["kris katterjohn \u003ckatterjohn@gmail.com\u003e"],"rank":"Normal","description":"Continually listen for a connection and spawn a command shell via Ruby","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":142,"name":"Unix Command Shell, Bind TCP (via Ruby) IPv6","fullname":"payload/cmd/unix/bind_ruby_ipv6","authors":["kris katterjohn \u003ckatterjohn@gmail.com\u003e"],"rank":"Normal","description":"Continually listen for a connection and spawn a command shell via Ruby","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":99,"name":"Unix Command Shell, Bind TCP (via Zsh)","fullname":"payload/cmd/unix/bind_zsh","authors":["Doug Prostko \u003cdougtko@gmail.com\u003e","Wang Yihang \u003cwangyihanger@gmail.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via Zsh. Note: Although Zsh is often available, please be aware it isn't usually installed by default.","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":795,"name":"Unix Command Shell, Bind TCP (via jjs)","fullname":"payload/cmd/unix/bind_jjs","authors":["conerpirate","bcoles \u003cbcoles@gmail.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via jjs","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELL","display_value":"/bin/sh","required":"true","description":"The shell to execute"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":24,"name":"Unix Command Shell, Bind TCP (via netcat -e)","fullname":"payload/cmd/unix/bind_netcat_gaping","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via netcat","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":25,"name":"Unix Command Shell, Bind TCP (via netcat -e) IPv6","fullname":"payload/cmd/unix/bind_netcat_gaping_ipv6","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via netcat","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":97,"name":"Unix Command Shell, Bind TCP (via netcat)","fullname":"payload/cmd/unix/bind_netcat","authors":["m-1-k-3","egypt \u003cegypt@metasploit.com\u003e","juan vazquez \u003cjuan.vazquez@metasploit.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via netcat","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":2239,"name":"Unix Command Shell, Bind TCP (via nodejs)","fullname":"payload/cmd/unix/bind_nodejs","authors":["joev \u003cjoev@metasploit.com\u003e"],"rank":"Normal","description":"Continually listen for a connection and spawn a command shell via nodejs","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":152,"name":"Unix Command Shell, Bind TCP (via perl) IPv6","fullname":"payload/cmd/unix/bind_perl_ipv6","authors":["Samy \u003csamy@samy.pl\u003e","cazz \u003cbmc@shmoo.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via perl","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":70,"name":"Unix Command Shell, Bind UDP (via socat)","fullname":"payload/cmd/unix/bind_socat_udp","authors":["RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Creates an interactive shell via socat","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":100,"name":"Unix Command Shell, Double Reverse TCP (telnet)","fullname":"payload/cmd/unix/reverse","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Creates an interactive shell through two inbound connections","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":152,"name":"Unix Command Shell, Double Reverse TCP SSL (openssl)","fullname":"payload/cmd/unix/reverse_openssl","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Creates an interactive shell through two inbound connections","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":106,"name":"Unix Command Shell, Double Reverse TCP SSL (telnet)","fullname":"payload/cmd/unix/reverse_ssl_double_telnet","authors":["hdm \u003cx@hdm.io\u003e","RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Creates an interactive shell through two inbound connections, encrypts using SSL via \"-z\" option","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":103,"name":"Unix Command Shell, Pingback Bind TCP (via netcat)","fullname":"payload/cmd/unix/pingback_bind","authors":["asoto-r7"],"rank":"Normal","description":"Accept a connection, send a UUID, then exit","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":84,"name":"Unix Command Shell, Pingback Reverse TCP (via netcat)","fullname":"payload/cmd/unix/pingback_reverse","authors":["asoto-r7"],"rank":"Normal","description":"Creates a socket, send a UUID, then exit","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":59,"name":"Unix Command Shell, Reverse TCP (/dev/tcp)","fullname":"payload/cmd/unix/reverse_bash","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Creates an interactive shell via bash's builtin /dev/tcp. This will not work on circa 2009 and older Debian-based Linux distributions (including Ubuntu) because they compile bash without the /dev/tcp feature.","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":0,"name":"Unix Command Shell, Reverse TCP (stub)","fullname":"payload/cmd/unix/reverse_stub","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Creates an interactive shell through an inbound connection (stub only, no payload)","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":139,"name":"Unix Command Shell, Reverse TCP (via AWK)","fullname":"payload/cmd/unix/reverse_awk","authors":["espreto \u003crobertoespreto@gmail.com\u003e","Ulisses Castro \u003cuss.thebug@gmail.com\u003e","Gabriel Quadros \u003cgquadrossilva@gmail.com\u003e"],"rank":"Normal","description":"Creates an interactive shell via GNU AWK","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":37,"name":"Unix Command Shell, Reverse TCP (via Ksh)","fullname":"payload/cmd/unix/reverse_ksh","authors":["Wang Yihang \u003cwangyihanger@gmail.com\u003e"],"rank":"Normal","description":"Connect back and create a command shell via Ksh. Note: Although Ksh is often available, please be aware it isn't usually installed by default.","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":209,"name":"Unix Command Shell, Reverse TCP (via Lua)","fullname":"payload/cmd/unix/reverse_lua","authors":["xistence \u003cxistence@0x90.nl\u003e"],"rank":"Normal","description":"Creates an interactive shell via Lua","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":219,"name":"Unix Command Shell, Reverse TCP (via Perl)","fullname":"payload/cmd/unix/reverse_perl","authors":["cazz \u003cbmc@shmoo.com\u003e"],"rank":"Normal","description":"Creates an interactive shell via perl","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":336,"name":"Unix Command Shell, Reverse TCP (via Python)","fullname":"payload/cmd/unix/reverse_python","authors":["bcoles \u003cbcoles@gmail.com\u003e"],"rank":"Normal","description":"Connect back and create a command shell via Python","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELL","display_value":"/bin/sh","required":"true","description":"The system shell to use"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":142,"name":"Unix Command Shell, Reverse TCP (via R)","fullname":"payload/cmd/unix/reverse_r","authors":["RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Connect back and create a command shell via R","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":118,"name":"Unix Command Shell, Reverse TCP (via Ruby)","fullname":"payload/cmd/unix/reverse_ruby","authors":["kris katterjohn \u003ckatterjohn@gmail.com\u003e"],"rank":"Normal","description":"Connect back and create a command shell via Ruby","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":169,"name":"Unix Command Shell, Reverse TCP (via Tclsh)","fullname":"payload/cmd/unix/reverse_tclsh","authors":["bcoles \u003cbcoles@gmail.com\u003e"],"rank":"Normal","description":"Creates an interactive shell via Tclsh","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":79,"name":"Unix Command Shell, Reverse TCP (via Zsh)","fullname":"payload/cmd/unix/reverse_zsh","authors":["Doug Prostko \u003cdougtko@gmail.com\u003e","Wang Yihang \u003cwangyihanger@gmail.com\u003e"],"rank":"Normal","description":"Connect back and create a command shell via Zsh. Note: Although Zsh is often available, please be aware it isn't usually installed by default.","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":843,"name":"Unix Command Shell, Reverse TCP (via jjs)","fullname":"payload/cmd/unix/reverse_jjs","authors":["conerpirate","bcoles \u003cbcoles@gmail.com\u003e"],"rank":"Normal","description":"Connect back and create a command shell via jjs","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELL","display_value":"/bin/sh","required":"true","description":"The shell to execute"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":27,"name":"Unix Command Shell, Reverse TCP (via ncat)","fullname":"payload/cmd/unix/reverse_ncat_ssl","authors":["C_Sto"],"rank":"Normal","description":"Creates an interactive shell via ncat, utilizing ssl mode","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":19,"name":"Unix Command Shell, Reverse TCP (via netcat -e)","fullname":"payload/cmd/unix/reverse_netcat_gaping","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Creates an interactive shell via netcat","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":90,"name":"Unix Command Shell, Reverse TCP (via netcat)","fullname":"payload/cmd/unix/reverse_netcat","authors":["m-1-k-3","egypt \u003cegypt@metasploit.com\u003e","juan vazquez \u003cjuan.vazquez@metasploit.com\u003e"],"rank":"Normal","description":"Creates an interactive shell via netcat","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":3171,"name":"Unix Command Shell, Reverse TCP (via nodejs)","fullname":"payload/cmd/unix/reverse_nodejs","authors":["joev \u003cjoev@metasploit.com\u003e"],"rank":"Normal","description":"Continually listen for a connection and spawn a command shell via nodejs","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":138,"name":"Unix Command Shell, Reverse TCP SSH","fullname":"payload/cmd/unix/reverse_ssh","authors":["RageLtMan \u003crageltman@sempervictus\u003e","hirura"],"rank":"Normal","description":"Connect back and create a command shell via SSH","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"22","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":111,"name":"Unix Command Shell, Reverse TCP SSL (telnet)","fullname":"payload/cmd/unix/reverse_bash_telnet_ssl","authors":["RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Creates an interactive shell via mkfifo and telnet. This method works on Debian and other systems compiled without /dev/tcp support. This module uses the '-z' option included on some systems to encrypt using SSL.","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":170,"name":"Unix Command Shell, Reverse TCP SSL (via Ruby)","fullname":"payload/cmd/unix/reverse_ruby_ssl","authors":["RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Connect back and create a command shell via Ruby, uses SSL","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":158,"name":"Unix Command Shell, Reverse TCP SSL (via perl)","fullname":"payload/cmd/unix/reverse_perl_ssl","authors":["RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Creates an interactive shell via perl, uses SSL","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":264,"name":"Unix Command Shell, Reverse TCP SSL (via php)","fullname":"payload/cmd/unix/reverse_php_ssl","authors":["RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Creates an interactive shell via php, uses SSL","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":444,"name":"Unix Command Shell, Reverse TCP SSL (via python)","fullname":"payload/cmd/unix/reverse_python_ssl","authors":["RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Creates an interactive shell via python, uses SSL, encodes with base64 by design.","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":74,"name":"Unix Command Shell, Reverse UDP (/dev/udp)","fullname":"payload/cmd/unix/reverse_bash_udp","authors":["hdm \u003cx@hdm.io\u003e","bcoles \u003cbcoles@gmail.com\u003e"],"rank":"Normal","description":"Creates an interactive shell via bash's builtin /dev/udp. This will not work on circa 2009 and older Debian-based Linux distributions (including Ubuntu) because they compile bash without the /dev/udp feature.","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":72,"name":"Unix Command Shell, Reverse UDP (via socat)","fullname":"payload/cmd/unix/reverse_socat_udp","authors":["RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Creates an interactive shell via socat","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":0,"name":"Unix Command, Generic Command Execution","fullname":"payload/cmd/unix/generic","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Executes the supplied command","options":[{"name":"CMD","display_value":"","required":"true","description":"The command string to execute"}]}
[0m{"platform":"Unix","arch":"cmd","privileged":"false","size":0,"name":"Unix Command, Interact with Established Connection","fullname":"payload/cmd/unix/interact","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Interacts with a shell on an established socket connection","options":[]}
[0m{"platform":"Unix","arch":"tty","privileged":"false","size":0,"name":"Unix TTY, Interact with Established Connection","fullname":"payload/tty/unix/interact","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Interacts with a TTY on an established socket connection","options":[]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"VNC Server (Reflective Injection), Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/windows/vncinject/bind_ipv6_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Listen for an IPv6 connection (Windows x86)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"VNC Server (Reflective Injection), Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/vncinject/bind_ipv6_tcp_uuid","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":201,"name":"VNC Server (Reflective Injection), Bind TCP Stager (No NX or Win7)","fullname":"payload/windows/vncinject/bind_nonx_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Listen for a connection (No NX)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":415,"name":"VNC Server (Reflective Injection), Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/vncinject/bind_tcp_rc4","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Listen for a connection","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"VNC Server (Reflective Injection), Bind TCP Stager (Windows x86)","fullname":"payload/windows/vncinject/bind_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Listen for a connection (Windows x86)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"VNC Server (Reflective Injection), Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/vncinject/bind_tcp_uuid","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Listen for a connection with UUID Support (Windows x86)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":92,"name":"VNC Server (Reflective Injection), Find Tag Ordinal Stager","fullname":"payload/windows/vncinject/find_tag","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Use an established connection","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":359,"name":"VNC Server (Reflective Injection), Hidden Bind Ipknock TCP Stager","fullname":"payload/windows/vncinject/bind_hidden_ipknock_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":343,"name":"VNC Server (Reflective Injection), Hidden Bind TCP Stager","fullname":"payload/windows/vncinject/bind_hidden_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":282,"name":"VNC Server (Reflective Injection), Reverse All-Port TCP Stager","fullname":"payload/windows/vncinject/reverse_tcp_allports","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":650,"name":"VNC Server (Reflective Injection), Reverse HTTP Stager Proxy","fullname":"payload/windows/vncinject/reverse_http_proxy_pstore","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Tunnel communication over HTTP","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":353,"name":"VNC Server (Reflective Injection), Reverse Hop HTTP/HTTPS Stager","fullname":"payload/windows/vncinject/reverse_hop_http","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","scriptjunkie \u003cscriptjunkie@scriptjunkie.us\u003e","bannedit \u003cbannedit@metasploit.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Tunnel communication over an HTTP or HTTPS hop point. Note that you must first upload data/hop/hop.php to the PHP server you wish to use as a hop.","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"HOPURL","display_value":"http://example.com/hop.php","required":"true","description":"The full URL of the hop script"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":93,"name":"VNC Server (Reflective Injection), Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/windows/vncinject/reverse_ord_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Connect back to the attacker","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":296,"name":"VNC Server (Reflective Injection), Reverse TCP Stager","fullname":"payload/windows/vncinject/reverse_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Connect back to the attacker","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":306,"name":"VNC Server (Reflective Injection), Reverse TCP Stager (DNS)","fullname":"payload/windows/vncinject/reverse_tcp_dns","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","RageLtMan"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Connect back to the attacker","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":289,"name":"VNC Server (Reflective Injection), Reverse TCP Stager (IPv6)","fullname":"payload/windows/vncinject/reverse_ipv6_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Connect back to the attacker over IPv6","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":177,"name":"VNC Server (Reflective Injection), Reverse TCP Stager (No NX or Win7)","fullname":"payload/windows/vncinject/reverse_nonx_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Connect back to the attacker (No NX)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":423,"name":"VNC Server (Reflective Injection), Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/windows/vncinject/reverse_tcp_rc4_dns","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Connect back to the attacker","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":413,"name":"VNC Server (Reflective Injection), Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/vncinject/reverse_tcp_rc4","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Connect back to the attacker","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":329,"name":"VNC Server (Reflective Injection), Reverse TCP Stager with UUID Support","fullname":"payload/windows/vncinject/reverse_tcp_uuid","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Connect back to the attacker with UUID Support","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":1029,"name":"VNC Server (Reflective Injection), Windows Reverse HTTP Stager (winhttp)","fullname":"payload/windows/vncinject/reverse_winhttp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Tunnel communication over HTTP (Windows winhttp)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":656,"name":"VNC Server (Reflective Injection), Windows Reverse HTTP Stager (wininet)","fullname":"payload/windows/vncinject/reverse_http","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Tunnel communication over HTTP (Windows wininet)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":349,"name":"VNC Server (Reflective Injection), Windows x86 Bind Named Pipe Stager","fullname":"payload/windows/vncinject/bind_named_pipe","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","UserExistsError"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (staged). Listen for a pipe connection (Windows x86)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"Windows Command Shell, Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/windows/shell/bind_ipv6_tcp","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Spawn a piped command shell (staged). Listen for an IPv6 connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"Windows Command Shell, Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/shell/bind_ipv6_tcp_uuid","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","OJ Reeves"],"rank":"Normal","description":"Spawn a piped command shell (staged). Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":218,"name":"Windows Command Shell, Bind TCP (via Lua)","fullname":"payload/cmd/windows/bind_lua","authors":["xistence \u003cxistence@0x90.nl\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via Lua","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":139,"name":"Windows Command Shell, Bind TCP (via Perl)","fullname":"payload/cmd/windows/bind_perl","authors":["Samy \u003csamy@samy.pl\u003e","cazz \u003cbmc@shmoo.com\u003e","aushack \u003cpatrick@osisecurity.com.au\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via perl (persistent)","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":128,"name":"Windows Command Shell, Bind TCP (via Ruby)","fullname":"payload/cmd/windows/bind_ruby","authors":["kris katterjohn \u003ckatterjohn@gmail.com\u003e"],"rank":"Normal","description":"Continually listen for a connection and spawn a command shell via Ruby","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":140,"name":"Windows Command Shell, Bind TCP (via perl) IPv6","fullname":"payload/cmd/windows/bind_perl_ipv6","authors":["Samy \u003csamy@samy.pl\u003e","cazz \u003cbmc@shmoo.com\u003e","aushack \u003cpatrick@osisecurity.com.au\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell via perl (persistent)","options":[{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":328,"name":"Windows Command Shell, Bind TCP Inline","fullname":"payload/windows/shell_bind_tcp","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":201,"name":"Windows Command Shell, Bind TCP Stager (No NX or Win7)","fullname":"payload/windows/shell/bind_nonx_tcp","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Spawn a piped command shell (staged). Listen for a connection (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":415,"name":"Windows Command Shell, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/shell/bind_tcp_rc4","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Spawn a piped command shell (staged). Listen for a connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"Windows Command Shell, Bind TCP Stager (Windows x86)","fullname":"payload/windows/shell/bind_tcp","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Spawn a piped command shell (staged). Listen for a connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"Windows Command Shell, Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/shell/bind_tcp_uuid","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Spawn a piped command shell (staged). Listen for a connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m[1m[31m[-][0m Invalid module: payload/windows/x64/encrypted_shell/reverse_tcp
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":92,"name":"Windows Command Shell, Find Tag Ordinal Stager","fullname":"payload/windows/shell/find_tag","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Spawn a piped command shell (staged). Use an established connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":359,"name":"Windows Command Shell, Hidden Bind Ipknock TCP Stager","fullname":"payload/windows/shell/bind_hidden_ipknock_tcp","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Spawn a piped command shell (staged). Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":386,"name":"Windows Command Shell, Hidden Bind TCP Inline","fullname":"payload/windows/shell_hidden_bind_tcp","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sd","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Listen for a connection from certain IP and spawn a command shell. The shellcode will reply with a RST packet if the connections is not coming from the IP defined in AHOST. This way the port will appear as \"closed\" helping us to hide the shellcode.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":343,"name":"Windows Command Shell, Hidden Bind TCP Stager","fullname":"payload/windows/shell/bind_hidden_tcp","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Spawn a piped command shell (staged). Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":282,"name":"Windows Command Shell, Reverse All-Port TCP Stager","fullname":"payload/windows/shell/reverse_tcp_allports","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Spawn a piped command shell (staged). Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":93,"name":"Windows Command Shell, Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/windows/shell/reverse_ord_tcp","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Spawn a piped command shell (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":209,"name":"Windows Command Shell, Reverse TCP (via Lua)","fullname":"payload/cmd/windows/reverse_lua","authors":["xistence \u003cxistence@0x90.nl\u003e"],"rank":"Normal","description":"Creates an interactive shell via Lua","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":1573,"name":"Windows Command Shell, Reverse TCP (via Powershell)","fullname":"payload/cmd/windows/reverse_powershell","authors":["Dave Kennedy","Ben Campbell \u003ceat_meatballs@hotmail.co.uk\u003e"],"rank":"Normal","description":"Connect back and create a command shell via Powershell","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":111,"name":"Windows Command Shell, Reverse TCP (via Ruby)","fullname":"payload/cmd/windows/reverse_ruby","authors":["kris katterjohn \u003ckatterjohn@gmail.com\u003e"],"rank":"Normal","description":"Connect back and create a command shell via Ruby","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":324,"name":"Windows Command Shell, Reverse TCP Inline","fullname":"payload/windows/shell_reverse_tcp","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":296,"name":"Windows Command Shell, Reverse TCP Stager","fullname":"payload/windows/shell/reverse_tcp","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Spawn a piped command shell (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":306,"name":"Windows Command Shell, Reverse TCP Stager (DNS)","fullname":"payload/windows/shell/reverse_tcp_dns","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","RageLtMan"],"rank":"Normal","description":"Spawn a piped command shell (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":289,"name":"Windows Command Shell, Reverse TCP Stager (IPv6)","fullname":"payload/windows/shell/reverse_ipv6_tcp","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Spawn a piped command shell (staged). Connect back to the attacker over IPv6","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":177,"name":"Windows Command Shell, Reverse TCP Stager (No NX or Win7)","fullname":"payload/windows/shell/reverse_nonx_tcp","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Spawn a piped command shell (staged). Connect back to the attacker (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":423,"name":"Windows Command Shell, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/windows/shell/reverse_tcp_rc4_dns","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Spawn a piped command shell (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":413,"name":"Windows Command Shell, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/shell/reverse_tcp_rc4","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Spawn a piped command shell (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":329,"name":"Windows Command Shell, Reverse TCP Stager with UUID Support","fullname":"payload/windows/shell/reverse_tcp_uuid","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Spawn a piped command shell (staged). Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":312,"name":"Windows Command Shell, Reverse UDP Stager with UUID Support","fullname":"payload/windows/shell/reverse_udp","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Spawn a piped command shell (staged). Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":349,"name":"Windows Command Shell, Windows x86 Bind Named Pipe Stager","fullname":"payload/windows/shell/bind_named_pipe","authors":["spoonm \u003cspoonm@no$email.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","UserExistsError"],"rank":"Normal","description":"Spawn a piped command shell (staged). Listen for a pipe connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":133,"name":"Windows Command, Double Reverse TCP Connection (via Perl)","fullname":"payload/cmd/windows/reverse_perl","authors":["cazz \u003cbmc@shmoo.com\u003e","aushack \u003cpatrick@osisecurity.com.au\u003e"],"rank":"Normal","description":"Creates an interactive shell via perl","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":0,"name":"Windows Command, Generic Command Execution","fullname":"payload/cmd/windows/generic","authors":["juan vazquez \u003cjuan.vazquez@metasploit.com\u003e"],"rank":"Normal","description":"Executes the supplied command","options":[{"name":"CMD","display_value":"","required":"true","description":"The command string to execute"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":529,"name":"Windows Disable Windows ICF, Command Shell, Bind TCP Inline","fullname":"payload/windows/shell_bind_tcp_xpfw","authors":["Lin0xx \u003clin0xx@metasploit.com\u003e"],"rank":"Normal","description":"Disable the Windows ICF, then listen for a connection and spawn a command shell","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"true","size":393,"name":"Windows Drive Formatter","fullname":"payload/windows/format_all_drives","authors":["Ashfaq Ansari \u003cashfaq_ansari1989@hotmail.com\u003e","Ruei-Min Jiang \u003cmike820324@gmail.com\u003e"],"rank":"Manual","description":"This payload formats all mounted disks in Windows (aka ShellcodeOfDeath). After formatting, this payload sets the volume label to the string specified in the VOLUMELABEL option. If the code is unable to access a drive for any reason, it skips the drive and proceeds to the next volume.","options":[{"name":"VOLUMELABEL","display_value":"PwNeD","required":"false","description":"Set the volume label"}]}
[0m[1m[31m[-][0m Invalid module: payload/windows/x64/encrypted_shell_reverse_tcp
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":439,"name":"Windows Executable Download (http,https,ftp) and Execute","fullname":"payload/windows/download_exec","authors":["corelanc0d3r \u003cpeter.ve@corelan.be\u003e"],"rank":"Normal","description":"Download an EXE from an HTTP(S)/FTP URL and execute it","options":[{"name":"EXE","display_value":"rund11.exe","required":"true","description":"Filename to save \u0026 run executable on target system"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"URL","display_value":"https://localhost:443/evil.exe","required":"true","description":"The pre-encoded URL to the executable"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":130,"name":"Windows Executable Download and Evaluate VBS","fullname":"payload/cmd/windows/download_eval_vbs","authors":["scriptjunkie"],"rank":"Normal","description":"Downloads a file from an HTTP(S) URL and executes it as a vbs script. Use it to stage a vbs encoded payload from a short command line.","options":[{"name":"DELETE","display_value":"false","required":"true","description":"Delete created .vbs after download"},{"name":"INCLUDECMD","display_value":"false","required":"true","description":"Include the cmd /q /c"},{"name":"INCLUDEWSCRIPT","display_value":"false","required":"true","description":"Include the wscript command"},{"name":"URL","display_value":"","required":"true","description":"The pre-encoded URL to the script"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":314,"name":"Windows Executable Download and Execute (via .vbs)","fullname":"payload/cmd/windows/download_exec_vbs","authors":["scriptjunkie"],"rank":"Normal","description":"Download an EXE from an HTTP(S) URL and execute it","options":[{"name":"DELETE","display_value":"true","required":"true","description":"Delete created .vbs after download"},{"name":"EXT","display_value":"exe","required":"true","description":"The extension to give the saved file"},{"name":"INCLUDECMD","display_value":"false","required":"true","description":"Include the cmd /q /c"},{"name":"URL","display_value":"","required":"true","description":"The pre-encoded URL to the executable"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":185,"name":"Windows Execute Command","fullname":"payload/windows/exec","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an arbitrary command","options":[{"name":"CMD","display_value":"","required":"true","description":"The command string to execute"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"true","size":282,"name":"Windows Execute net user /ADD","fullname":"payload/windows/adduser","authors":["hdm \u003cx@hdm.io\u003e","Chris John Riley","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Create a new user and add them to local administration group. Note: The specified password is checked for common complexity requirements to prevent the target machine rejecting the user for failing to meet policy requirements. Complexity check: 8-14 chars (1 UPPER, 1 lower, 1 digit/special)","options":[{"name":"CUSTOM","display_value":"","required":"false","description":"Custom group name to be used instead of default"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PASS","display_value":"Metasploit$1","required":"true","description":"The password for this user"},{"name":"USER","display_value":"metasploit","required":"true","description":"The username to create"},{"name":"WMIC","display_value":"false","required":"true","description":"Use WMIC on the target to resolve administrators group"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":97,"name":"Windows Execute net user /ADD CMD","fullname":"payload/cmd/windows/adduser","authors":["hdm \u003cx@hdm.io\u003e","scriptjunkie","Chris John Riley"],"rank":"Normal","description":"Create a new user and add them to local administration group. Note: The specified password is checked for common complexity requirements to prevent the target machine rejecting the user for failing to meet policy requirements. Complexity check: 8-14 chars (1 UPPER, 1 lower, 1 digit/special)","options":[{"name":"CUSTOM","display_value":"","required":"false","description":"Custom group name to be used instead of default"},{"name":"PASS","display_value":"Metasploit$1","required":"true","description":"The password for this user"},{"name":"USER","display_value":"metasploit","required":"true","description":"The username to create"},{"name":"WMIC","display_value":"false","required":"true","description":"Use WMIC on the target to resolve administrators group"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"Windows Inject DLL, Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/windows/patchupdllinject/bind_ipv6_tcp","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Listen for an IPv6 connection (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"Windows Inject DLL, Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/patchupdllinject/bind_ipv6_tcp_uuid","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":201,"name":"Windows Inject DLL, Bind TCP Stager (No NX or Win7)","fullname":"payload/windows/patchupdllinject/bind_nonx_tcp","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Listen for a connection (No NX)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":415,"name":"Windows Inject DLL, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/patchupdllinject/bind_tcp_rc4","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Listen for a connection","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"Windows Inject DLL, Bind TCP Stager (Windows x86)","fullname":"payload/windows/patchupdllinject/bind_tcp","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Listen for a connection (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"Windows Inject DLL, Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/patchupdllinject/bind_tcp_uuid","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Listen for a connection with UUID Support (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":92,"name":"Windows Inject DLL, Find Tag Ordinal Stager","fullname":"payload/windows/patchupdllinject/find_tag","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Use an established connection","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":359,"name":"Windows Inject DLL, Hidden Bind Ipknock TCP Stager","fullname":"payload/windows/patchupdllinject/bind_hidden_ipknock_tcp","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":343,"name":"Windows Inject DLL, Hidden Bind TCP Stager","fullname":"payload/windows/patchupdllinject/bind_hidden_tcp","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":282,"name":"Windows Inject DLL, Reverse All-Port TCP Stager","fullname":"payload/windows/patchupdllinject/reverse_tcp_allports","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":93,"name":"Windows Inject DLL, Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/windows/patchupdllinject/reverse_ord_tcp","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":296,"name":"Windows Inject DLL, Reverse TCP Stager","fullname":"payload/windows/patchupdllinject/reverse_tcp","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":306,"name":"Windows Inject DLL, Reverse TCP Stager (DNS)","fullname":"payload/windows/patchupdllinject/reverse_tcp_dns","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","RageLtMan"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":289,"name":"Windows Inject DLL, Reverse TCP Stager (IPv6)","fullname":"payload/windows/patchupdllinject/reverse_ipv6_tcp","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Connect back to the attacker over IPv6","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":177,"name":"Windows Inject DLL, Reverse TCP Stager (No NX or Win7)","fullname":"payload/windows/patchupdllinject/reverse_nonx_tcp","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Connect back to the attacker (No NX)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":423,"name":"Windows Inject DLL, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/windows/patchupdllinject/reverse_tcp_rc4_dns","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":413,"name":"Windows Inject DLL, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/patchupdllinject/reverse_tcp_rc4","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Connect back to the attacker","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":329,"name":"Windows Inject DLL, Reverse TCP Stager with UUID Support","fullname":"payload/windows/patchupdllinject/reverse_tcp_uuid","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Connect back to the attacker with UUID Support","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":349,"name":"Windows Inject DLL, Windows x86 Bind Named Pipe Stager","fullname":"payload/windows/patchupdllinject/bind_named_pipe","authors":["jt \u003cjt@klake.org\u003e","skape \u003cmmiller@hick.org\u003e","UserExistsError"],"rank":"Normal","description":"Inject a custom DLL into the exploited process. Listen for a pipe connection (Windows x86)","options":[{"name":"DLL","display_value":"","required":"true","description":"The local path to the DLL to upload"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"Windows Inject PE Files, Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/windows/peinject/bind_ipv6_tcp","authors":["ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Listen for an IPv6 connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"Windows Inject PE Files, Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/peinject/bind_ipv6_tcp_uuid","authors":["ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":201,"name":"Windows Inject PE Files, Bind TCP Stager (No NX or Win7)","fullname":"payload/windows/peinject/bind_nonx_tcp","authors":["ege \u003cegebalci@pm.me\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Listen for a connection (No NX)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":415,"name":"Windows Inject PE Files, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/peinject/bind_tcp_rc4","authors":["ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Listen for a connection","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"Windows Inject PE Files, Bind TCP Stager (Windows x86)","fullname":"payload/windows/peinject/bind_tcp","authors":["ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Listen for a connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"Windows Inject PE Files, Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/peinject/bind_tcp_uuid","authors":["ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Listen for a connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":92,"name":"Windows Inject PE Files, Find Tag Ordinal Stager","fullname":"payload/windows/peinject/find_tag","authors":["ege \u003cegebalci@pm.me\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Use an established connection","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":359,"name":"Windows Inject PE Files, Hidden Bind Ipknock TCP Stager","fullname":"payload/windows/peinject/bind_hidden_ipknock_tcp","authors":["ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":343,"name":"Windows Inject PE Files, Hidden Bind TCP Stager","fullname":"payload/windows/peinject/bind_hidden_tcp","authors":["ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":282,"name":"Windows Inject PE Files, Reverse All-Port TCP Stager","fullname":"payload/windows/peinject/reverse_tcp_allports","authors":["ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":93,"name":"Windows Inject PE Files, Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/windows/peinject/reverse_ord_tcp","authors":["ege \u003cegebalci@pm.me\u003e","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":296,"name":"Windows Inject PE Files, Reverse TCP Stager","fullname":"payload/windows/peinject/reverse_tcp","authors":["ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":306,"name":"Windows Inject PE Files, Reverse TCP Stager (DNS)","fullname":"payload/windows/peinject/reverse_tcp_dns","authors":["ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","RageLtMan"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":289,"name":"Windows Inject PE Files, Reverse TCP Stager (IPv6)","fullname":"payload/windows/peinject/reverse_ipv6_tcp","authors":["ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Connect back to the attacker over IPv6","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":177,"name":"Windows Inject PE Files, Reverse TCP Stager (No NX or Win7)","fullname":"payload/windows/peinject/reverse_nonx_tcp","authors":["ege \u003cegebalci@pm.me\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Connect back to the attacker (No NX)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":423,"name":"Windows Inject PE Files, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/windows/peinject/reverse_tcp_rc4_dns","authors":["ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":413,"name":"Windows Inject PE Files, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/peinject/reverse_tcp_rc4","authors":["ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":329,"name":"Windows Inject PE Files, Reverse TCP Stager with UUID Support","fullname":"payload/windows/peinject/reverse_tcp_uuid","authors":["ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":349,"name":"Windows Inject PE Files, Windows x86 Bind Named Pipe Stager","fullname":"payload/windows/peinject/bind_named_pipe","authors":["ege \u003cegebalci@pm.me\u003e","UserExistsError"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Listen for a pipe connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":289,"name":"Windows Inject PE Files, Windows x86 Reverse Named Pipe (SMB) Stager","fullname":"payload/windows/peinject/reverse_named_pipe","authors":["ege \u003cegebalci@pm.me\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Connect back to the attacker via a named pipe pivot","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"PIPEHOST","display_value":".","required":"true","description":"Host of the pipe to connect to"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to listen on"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":616,"name":"Windows Inject Reflective PE Files, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/x64/peinject/bind_tcp_rc4","authors":["ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":524,"name":"Windows Inject Reflective PE Files, Bind TCP Stager with UUID Support (Windows x64)","fullname":"payload/windows/x64/peinject/bind_tcp_uuid","authors":["ege \u003cegebalci@pm.me\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Listen for a connection with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":585,"name":"Windows Inject Reflective PE Files, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/x64/peinject/reverse_tcp_rc4","authors":["ege \u003cegebalci@pm.me\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":490,"name":"Windows Inject Reflective PE Files, Reverse TCP Stager with UUID Support (Windows x64)","fullname":"payload/windows/x64/peinject/reverse_tcp_uuid","authors":["ege \u003cegebalci@pm.me\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Connect back to the attacker with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":481,"name":"Windows Inject Reflective PE Files, Windows x64 Bind Named Pipe Stager","fullname":"payload/windows/x64/peinject/bind_named_pipe","authors":["ege \u003cegebalci@pm.me\u003e","UserExistsError"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Listen for a pipe connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":483,"name":"Windows Inject Reflective PE Files, Windows x64 Bind TCP Stager","fullname":"payload/windows/x64/peinject/bind_tcp","authors":["ege \u003cegebalci@pm.me\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Listen for a connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":485,"name":"Windows Inject Reflective PE Files, Windows x64 IPv6 Bind TCP Stager","fullname":"payload/windows/x64/peinject/bind_ipv6_tcp","authors":["ege \u003cegebalci@pm.me\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Listen for an IPv6 connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":526,"name":"Windows Inject Reflective PE Files, Windows x64 IPv6 Bind TCP Stager with UUID Support","fullname":"payload/windows/x64/peinject/bind_ipv6_tcp_uuid","authors":["ege \u003cegebalci@pm.me\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Listen for an IPv6 connection with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":421,"name":"Windows Inject Reflective PE Files, Windows x64 Reverse Named Pipe (SMB) Stager","fullname":"payload/windows/x64/peinject/reverse_named_pipe","authors":["ege \u003cegebalci@pm.me\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Connect back to the attacker via a named pipe pivot","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"},{"name":"PIPEHOST","display_value":".","required":"true","description":"Host of the pipe to connect to"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to listen on"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":449,"name":"Windows Inject Reflective PE Files, Windows x64 Reverse TCP Stager","fullname":"payload/windows/x64/peinject/reverse_tcp","authors":["ege \u003cegebalci@pm.me\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE loader will execute the pre-mapped PE image starting from the address of entry after performing image base relocation and API address resolution. This module requires a PE file that contains relocation data and a valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks are not currently supported. Also PE files which use resource loading might crash. Connect back to the attacker (Windows x64)","options":[{"name":"EXITFUNC","display_value":"thread","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PE","display_value":"","required":"true","description":"The local path to the PE file to upload"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":1597,"name":"Windows Interactive Powershell Session, Bind TCP","fullname":"payload/cmd/windows/powershell_bind_tcp","authors":["Ben Turner","Dave Hardy"],"rank":"Normal","description":"Interacts with a powershell session on an established socket connection","options":[{"name":"LOAD_MODULES","display_value":"","required":"false","description":"A list of powershell modules separated by a comma to download over the web"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":1782,"name":"Windows Interactive Powershell Session, Bind TCP","fullname":"payload/windows/powershell_bind_tcp","authors":["Ben Turner","Dave Hardy","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn an interactive powershell session","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LOAD_MODULES","display_value":"","required":"false","description":"A list of powershell modules separated by a comma to download over the web"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":1865,"name":"Windows Interactive Powershell Session, Bind TCP","fullname":"payload/windows/x64/powershell_bind_tcp","authors":["Ben Turner","Dave Hardy","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn an interactive powershell session","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LOAD_MODULES","display_value":"","required":"false","description":"A list of powershell modules separated by a comma to download over the web"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":1599,"name":"Windows Interactive Powershell Session, Reverse TCP","fullname":"payload/cmd/windows/powershell_reverse_tcp","authors":["Ben Turner","Dave Hardy"],"rank":"Normal","description":"Interacts with a powershell session on an established socket connection","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LOAD_MODULES","display_value":"","required":"false","description":"A list of powershell modules separated by a comma to download over the web"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":1784,"name":"Windows Interactive Powershell Session, Reverse TCP","fullname":"payload/windows/powershell_reverse_tcp","authors":["Ben Turner","Dave Hardy","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn an interactive powershell session","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LOAD_MODULES","display_value":"","required":"false","description":"A list of powershell modules separated by a comma to download over the web"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":1867,"name":"Windows Interactive Powershell Session, Reverse TCP","fullname":"payload/windows/x64/powershell_reverse_tcp","authors":["Ben Turner","Dave Hardy","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn an interactive powershell session","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LOAD_MODULES","display_value":"","required":"false","description":"A list of powershell modules separated by a comma to download over the web"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":1605,"name":"Windows Interactive Powershell Session, Reverse TCP SSL","fullname":"payload/cmd/windows/powershell_reverse_tcp_ssl","authors":["Ben Turner","Dave Hardy"],"rank":"Normal","description":"Interacts with a powershell session on an established SSL socket connection","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LOAD_MODULES","display_value":"","required":"false","description":"A list of powershell modules separated by a comma to download over the web"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":1790,"name":"Windows Interactive Powershell Session, Reverse TCP SSL","fullname":"payload/windows/powershell_reverse_tcp_ssl","authors":["Ben Turner","Dave Hardy","vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn an interactive powershell session over SSL","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LOAD_MODULES","display_value":"","required":"false","description":"A list of powershell modules separated by a comma to download over the web"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":1873,"name":"Windows Interactive Powershell Session, Reverse TCP SSL","fullname":"payload/windows/x64/powershell_reverse_tcp_ssl","authors":["Ben Turner","Dave Hardy","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn an interactive powershell session over SSL","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LOAD_MODULES","display_value":"","required":"false","description":"A list of powershell modules separated by a comma to download over the web"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":183,"name":"Windows LoadLibrary Path","fullname":"payload/windows/loadlibrary","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Load an arbitrary library path","options":[{"name":"DLL","display_value":"","required":"true","description":"The library path to load (UNC is OK)"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":272,"name":"Windows MessageBox","fullname":"payload/windows/messagebox","authors":["corelanc0d3r \u003cpeter.ve@corelan.be\u003e","jduck \u003cjduck@metasploit.com\u003e"],"rank":"Normal","description":"Spawns a dialog via MessageBox using a customizable title, text \u0026 icon","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"ICON","display_value":"NO","required":"true","description":"Icon type can be NO, ERROR, INFORMATION, WARNING or QUESTION"},{"name":"TEXT","display_value":"Hello, from MSF!","required":"true","description":"Messagebox Text (max 255 chars) Max parameter length: 255 characters"},{"name":"TITLE","display_value":"MessageBox","required":"true","description":"Messagebox Title (max 255 chars) Max parameter length: 255 characters"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":295,"name":"Windows MessageBox x64","fullname":"payload/windows/x64/messagebox","authors":["pasta \u003cjaguinaga@infobytesec.com\u003e"],"rank":"Normal","description":"Spawn a dialog via MessageBox using a customizable title, text \u0026 icon","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"ICON","display_value":"NO","required":"true","description":"Icon type (Accepted: NO, ERROR, INFORMATION, WARNING, QUESTION)"},{"name":"TEXT","display_value":"Hello, from MSF!","required":"true","description":"Messagebox Text"},{"name":"TITLE","display_value":"MessageBox","required":"true","description":"Messagebox Title"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":616,"name":"Windows Meterpreter (Reflective Injection x64), Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/x64/meterpreter/bind_tcp_rc4","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Inject the meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":524,"name":"Windows Meterpreter (Reflective Injection x64), Bind TCP Stager with UUID Support (Windows x64)","fullname":"payload/windows/x64/meterpreter/bind_tcp_uuid","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Listen for a connection with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":585,"name":"Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/x64/meterpreter/reverse_tcp_rc4","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Inject the meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":490,"name":"Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager with UUID Support (Windows x64)","fullname":"payload/windows/x64/meterpreter/reverse_tcp_uuid","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Connect back to the attacker with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":481,"name":"Windows Meterpreter (Reflective Injection x64), Windows x64 Bind Named Pipe Stager","fullname":"payload/windows/x64/meterpreter/bind_named_pipe","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","UserExistsError"],"rank":"Normal","description":"Inject the meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Listen for a pipe connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":483,"name":"Windows Meterpreter (Reflective Injection x64), Windows x64 Bind TCP Stager","fullname":"payload/windows/x64/meterpreter/bind_tcp","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Listen for a connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":485,"name":"Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager","fullname":"payload/windows/x64/meterpreter/bind_ipv6_tcp","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Listen for an IPv6 connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":526,"name":"Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager with UUID Support","fullname":"payload/windows/x64/meterpreter/bind_ipv6_tcp_uuid","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Listen for an IPv6 connection with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":957,"name":"Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (winhttp)","fullname":"payload/windows/x64/meterpreter/reverse_winhttp","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Tunnel communication over HTTP (Windows x64 winhttp)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":568,"name":"Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)","fullname":"payload/windows/x64/meterpreter/reverse_http","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Tunnel communication over HTTP (Windows x64 wininet)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":708,"name":"Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)","fullname":"payload/windows/x64/meterpreter/reverse_https","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","agix","rwincey"],"rank":"Normal","description":"Inject the meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Tunnel communication over HTTP (Windows x64 wininet)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":1073,"name":"Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTPS Stager (winhttp)","fullname":"payload/windows/x64/meterpreter/reverse_winhttps","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Tunnel communication over HTTPS (Windows x64 winhttp)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":421,"name":"Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse Named Pipe (SMB) Stager","fullname":"payload/windows/x64/meterpreter/reverse_named_pipe","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Connect back to the attacker via a named pipe pivot","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PIPEHOST","display_value":".","required":"true","description":"Host of the pipe to connect to"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to listen on"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":449,"name":"Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse TCP Stager","fullname":"payload/windows/x64/meterpreter/reverse_tcp","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Connect back to the attacker (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"Windows Meterpreter (Reflective Injection), Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/windows/meterpreter/bind_ipv6_tcp","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Listen for an IPv6 connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"Windows Meterpreter (Reflective Injection), Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/meterpreter/bind_ipv6_tcp_uuid","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":201,"name":"Windows Meterpreter (Reflective Injection), Bind TCP Stager (No NX or Win7)","fullname":"payload/windows/meterpreter/bind_nonx_tcp","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Listen for a connection (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":415,"name":"Windows Meterpreter (Reflective Injection), Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/meterpreter/bind_tcp_rc4","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Listen for a connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"Windows Meterpreter (Reflective Injection), Bind TCP Stager (Windows x86)","fullname":"payload/windows/meterpreter/bind_tcp","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Listen for a connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"Windows Meterpreter (Reflective Injection), Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/meterpreter/bind_tcp_uuid","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Listen for a connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":92,"name":"Windows Meterpreter (Reflective Injection), Find Tag Ordinal Stager","fullname":"payload/windows/meterpreter/find_tag","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Use an established connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":359,"name":"Windows Meterpreter (Reflective Injection), Hidden Bind Ipknock TCP Stager","fullname":"payload/windows/meterpreter/bind_hidden_ipknock_tcp","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":343,"name":"Windows Meterpreter (Reflective Injection), Hidden Bind TCP Stager","fullname":"payload/windows/meterpreter/bind_hidden_tcp","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":282,"name":"Windows Meterpreter (Reflective Injection), Reverse All-Port TCP Stager","fullname":"payload/windows/meterpreter/reverse_tcp_allports","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":650,"name":"Windows Meterpreter (Reflective Injection), Reverse HTTP Stager Proxy","fullname":"payload/windows/meterpreter/reverse_http_proxy_pstore","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Tunnel communication over HTTP","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":378,"name":"Windows Meterpreter (Reflective Injection), Reverse HTTPS Stager with Support for Custom Proxy","fullname":"payload/windows/meterpreter/reverse_https_proxy","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","corelanc0d3r \u003cpeter.ve@corelan.be\u003e","amaloteaux \u003calex_maloteaux@metasploit.com\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Tunnel communication over HTTP using SSL with custom proxy support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"HttpProxyHost","display_value":"","required":"false","description":"An optional proxy server IP address or hostname"},{"name":"HttpProxyPass","display_value":"","required":"false","description":"An optional proxy server password Max parameter length: 63 characters"},{"name":"HttpProxyPort","display_value":"","required":"false","description":"An optional proxy server port"},{"name":"HttpProxyType","display_value":"HTTP","required":"true","description":"The type of HTTP proxy (Accepted: HTTP, SOCKS)"},{"name":"HttpProxyUser","display_value":"","required":"false","description":"An optional proxy server username Max parameter length: 63 characters"},{"name":"LHOST","display_value":"127.0.0.1","required":"false","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"false","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":353,"name":"Windows Meterpreter (Reflective Injection), Reverse Hop HTTP/HTTPS Stager","fullname":"payload/windows/meterpreter/reverse_hop_http","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","scriptjunkie \u003cscriptjunkie@scriptjunkie.us\u003e","bannedit \u003cbannedit@metasploit.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Tunnel communication over an HTTP or HTTPS hop point. Note that you must first upload data/hop/hop.php to the PHP server you wish to use as a hop.","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"HOPURL","display_value":"http://example.com/hop.php","required":"true","description":"The full URL of the hop script"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":93,"name":"Windows Meterpreter (Reflective Injection), Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/windows/meterpreter/reverse_ord_tcp","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":296,"name":"Windows Meterpreter (Reflective Injection), Reverse TCP Stager","fullname":"payload/windows/meterpreter/reverse_tcp","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":306,"name":"Windows Meterpreter (Reflective Injection), Reverse TCP Stager (DNS)","fullname":"payload/windows/meterpreter/reverse_tcp_dns","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","RageLtMan"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":289,"name":"Windows Meterpreter (Reflective Injection), Reverse TCP Stager (IPv6)","fullname":"payload/windows/meterpreter/reverse_ipv6_tcp","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Connect back to the attacker over IPv6","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":177,"name":"Windows Meterpreter (Reflective Injection), Reverse TCP Stager (No NX or Win7)","fullname":"payload/windows/meterpreter/reverse_nonx_tcp","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Connect back to the attacker (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":423,"name":"Windows Meterpreter (Reflective Injection), Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/windows/meterpreter/reverse_tcp_rc4_dns","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":413,"name":"Windows Meterpreter (Reflective Injection), Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/meterpreter/reverse_tcp_rc4","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":329,"name":"Windows Meterpreter (Reflective Injection), Reverse TCP Stager with UUID Support","fullname":"payload/windows/meterpreter/reverse_tcp_uuid","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":1001,"name":"Windows Meterpreter (Reflective Injection), Windows Reverse HTTP Stager (winhttp)","fullname":"payload/windows/meterpreter/reverse_winhttp","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Tunnel communication over HTTP (Windows winhttp)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":544,"name":"Windows Meterpreter (Reflective Injection), Windows Reverse HTTP Stager (wininet)","fullname":"payload/windows/meterpreter/reverse_http","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Tunnel communication over HTTP (Windows wininet)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":915,"name":"Windows Meterpreter (Reflective Injection), Windows Reverse HTTPS Stager (winhttp)","fullname":"payload/windows/meterpreter/reverse_winhttps","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Tunnel communication over HTTPS (Windows winhttp)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":547,"name":"Windows Meterpreter (Reflective Injection), Windows Reverse HTTPS Stager (wininet)","fullname":"payload/windows/meterpreter/reverse_https","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Tunnel communication over HTTPS (Windows wininet)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":349,"name":"Windows Meterpreter (Reflective Injection), Windows x86 Bind Named Pipe Stager","fullname":"payload/windows/meterpreter/bind_named_pipe","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves","UserExistsError"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Listen for a pipe connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":289,"name":"Windows Meterpreter (Reflective Injection), Windows x86 Reverse Named Pipe (SMB) Stager","fullname":"payload/windows/meterpreter/reverse_named_pipe","authors":["skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the Meterpreter server DLL via the Reflective Dll Injection payload (staged). Requires Windows XP SP2 or newer. Connect back to the attacker via a named pipe pivot","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PIPEHOST","display_value":".","required":"true","description":"Host of the pipe to connect to"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to listen on"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"Windows Meterpreter (skape/jt Injection), Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/windows/patchupmeterpreter/bind_ipv6_tcp","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Listen for an IPv6 connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"Windows Meterpreter (skape/jt Injection), Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/patchupmeterpreter/bind_ipv6_tcp_uuid","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":201,"name":"Windows Meterpreter (skape/jt Injection), Bind TCP Stager (No NX or Win7)","fullname":"payload/windows/patchupmeterpreter/bind_nonx_tcp","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Listen for a connection (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":415,"name":"Windows Meterpreter (skape/jt Injection), Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/patchupmeterpreter/bind_tcp_rc4","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Listen for a connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"Windows Meterpreter (skape/jt Injection), Bind TCP Stager (Windows x86)","fullname":"payload/windows/patchupmeterpreter/bind_tcp","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Listen for a connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"Windows Meterpreter (skape/jt Injection), Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/patchupmeterpreter/bind_tcp_uuid","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Listen for a connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":92,"name":"Windows Meterpreter (skape/jt Injection), Find Tag Ordinal Stager","fullname":"payload/windows/patchupmeterpreter/find_tag","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Use an established connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":359,"name":"Windows Meterpreter (skape/jt Injection), Hidden Bind Ipknock TCP Stager","fullname":"payload/windows/patchupmeterpreter/bind_hidden_ipknock_tcp","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":343,"name":"Windows Meterpreter (skape/jt Injection), Hidden Bind TCP Stager","fullname":"payload/windows/patchupmeterpreter/bind_hidden_tcp","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":282,"name":"Windows Meterpreter (skape/jt Injection), Reverse All-Port TCP Stager","fullname":"payload/windows/patchupmeterpreter/reverse_tcp_allports","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":93,"name":"Windows Meterpreter (skape/jt Injection), Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/windows/patchupmeterpreter/reverse_ord_tcp","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":296,"name":"Windows Meterpreter (skape/jt Injection), Reverse TCP Stager","fullname":"payload/windows/patchupmeterpreter/reverse_tcp","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":306,"name":"Windows Meterpreter (skape/jt Injection), Reverse TCP Stager (DNS)","fullname":"payload/windows/patchupmeterpreter/reverse_tcp_dns","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","RageLtMan"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":289,"name":"Windows Meterpreter (skape/jt Injection), Reverse TCP Stager (IPv6)","fullname":"payload/windows/patchupmeterpreter/reverse_ipv6_tcp","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Connect back to the attacker over IPv6","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":177,"name":"Windows Meterpreter (skape/jt Injection), Reverse TCP Stager (No NX or Win7)","fullname":"payload/windows/patchupmeterpreter/reverse_nonx_tcp","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Connect back to the attacker (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":423,"name":"Windows Meterpreter (skape/jt Injection), Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/windows/patchupmeterpreter/reverse_tcp_rc4_dns","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":413,"name":"Windows Meterpreter (skape/jt Injection), Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/patchupmeterpreter/reverse_tcp_rc4","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":329,"name":"Windows Meterpreter (skape/jt Injection), Reverse TCP Stager with UUID Support","fullname":"payload/windows/patchupmeterpreter/reverse_tcp_uuid","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":349,"name":"Windows Meterpreter (skape/jt Injection), Windows x86 Bind Named Pipe Stager","fullname":"payload/windows/patchupmeterpreter/bind_named_pipe","authors":["skape \u003cmmiller@hick.org\u003e","jt \u003cjt@klake.org\u003e","UserExistsError"],"rank":"Normal","description":"Inject the meterpreter server DLL (staged). Listen for a pipe connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":0,"name":"Windows Meterpreter Service, Bind TCP","fullname":"payload/windows/metsvc_bind_tcp","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Stub payload for interacting with a Meterpreter Service","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":0,"name":"Windows Meterpreter Service, Reverse TCP Inline","fullname":"payload/windows/metsvc_reverse_tcp","authors":["hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Stub payload for interacting with a Meterpreter Service","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":175686,"name":"Windows Meterpreter Shell, Bind Named Pipe Inline","fullname":"payload/windows/meterpreter_bind_named_pipe","authors":["UserExistsError","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Connect to victim and spawn a Meterpreter shell. Requires Windows XP SP2 or newer.","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"EXTENSIONS","display_value":"","required":"false","description":"Comma-separate list of extensions to load"},{"name":"EXTINIT","display_value":"","required":"false","description":"Initialization strings for extensions"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":200774,"name":"Windows Meterpreter Shell, Bind Named Pipe Inline (x64)","fullname":"payload/windows/x64/meterpreter_bind_named_pipe","authors":["UserExistsError","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Connect to victim and spawn a Meterpreter shell. Requires Windows XP SP2 or newer.","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"EXTENSIONS","display_value":"","required":"false","description":"Comma-separate list of extensions to load"},{"name":"EXTINIT","display_value":"","required":"false","description":"Initialization strings for extensions"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":175686,"name":"Windows Meterpreter Shell, Bind TCP Inline","fullname":"payload/windows/meterpreter_bind_tcp","authors":["OJ Reeves","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Connect to victim and spawn a Meterpreter shell. Requires Windows XP SP2 or newer.","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"EXTENSIONS","display_value":"","required":"false","description":"Comma-separate list of extensions to load"},{"name":"EXTINIT","display_value":"","required":"false","description":"Initialization strings for extensions"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":200774,"name":"Windows Meterpreter Shell, Bind TCP Inline (x64)","fullname":"payload/windows/x64/meterpreter_bind_tcp","authors":["OJ Reeves","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Connect to victim and spawn a Meterpreter shell. Requires Windows XP SP2 or newer.","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"EXTENSIONS","display_value":"","required":"false","description":"Comma-separate list of extensions to load"},{"name":"EXTINIT","display_value":"","required":"false","description":"Initialization strings for extensions"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":176732,"name":"Windows Meterpreter Shell, Reverse HTTP Inline","fullname":"payload/windows/meterpreter_reverse_http","authors":["OJ Reeves","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a Meterpreter shell. Requires Windows XP SP2 or newer.","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"EXTENSIONS","display_value":"","required":"false","description":"Comma-separate list of extensions to load"},{"name":"EXTINIT","display_value":"","required":"false","description":"Initialization strings for extensions"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":201820,"name":"Windows Meterpreter Shell, Reverse HTTP Inline (x64)","fullname":"payload/windows/x64/meterpreter_reverse_http","authors":["OJ Reeves","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a Meterpreter shell. Requires Windows XP SP2 or newer.","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"EXTENSIONS","display_value":"","required":"false","description":"Comma-separate list of extensions to load"},{"name":"EXTINIT","display_value":"","required":"false","description":"Initialization strings for extensions"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":176732,"name":"Windows Meterpreter Shell, Reverse HTTPS Inline","fullname":"payload/windows/meterpreter_reverse_https","authors":["OJ Reeves","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a Meterpreter shell. Requires Windows XP SP2 or newer.","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"EXTENSIONS","display_value":"","required":"false","description":"Comma-separate list of extensions to load"},{"name":"EXTINIT","display_value":"","required":"false","description":"Initialization strings for extensions"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":201820,"name":"Windows Meterpreter Shell, Reverse HTTPS Inline (x64)","fullname":"payload/windows/x64/meterpreter_reverse_https","authors":["OJ Reeves","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a Meterpreter shell. Requires Windows XP SP2 or newer.","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"EXTENSIONS","display_value":"","required":"false","description":"Comma-separate list of extensions to load"},{"name":"EXTINIT","display_value":"","required":"false","description":"Initialization strings for extensions"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":175686,"name":"Windows Meterpreter Shell, Reverse TCP Inline","fullname":"payload/windows/meterpreter_reverse_tcp","authors":["OJ Reeves","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a Meterpreter shell. Requires Windows XP SP2 or newer.","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"EXTENSIONS","display_value":"","required":"false","description":"Comma-separate list of extensions to load"},{"name":"EXTINIT","display_value":"","required":"false","description":"Initialization strings for extensions"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":175686,"name":"Windows Meterpreter Shell, Reverse TCP Inline (IPv6)","fullname":"payload/windows/meterpreter_reverse_ipv6_tcp","authors":["OJ Reeves","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a Meterpreter shell. Requires Windows XP SP2 or newer.","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"EXTENSIONS","display_value":"","required":"false","description":"Comma-separate list of extensions to load"},{"name":"EXTINIT","display_value":"","required":"false","description":"Initialization strings for extensions"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":200774,"name":"Windows Meterpreter Shell, Reverse TCP Inline (IPv6) (x64)","fullname":"payload/windows/x64/meterpreter_reverse_ipv6_tcp","authors":["OJ Reeves","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a Meterpreter shell. Requires Windows XP SP2 or newer.","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"EXTENSIONS","display_value":"","required":"false","description":"Comma-separate list of extensions to load"},{"name":"EXTINIT","display_value":"","required":"false","description":"Initialization strings for extensions"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":200774,"name":"Windows Meterpreter Shell, Reverse TCP Inline x64","fullname":"payload/windows/x64/meterpreter_reverse_tcp","authors":["OJ Reeves","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a Meterpreter shell. Requires Windows XP SP2 or newer.","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"EXTENSIONS","display_value":"","required":"false","description":"Comma-separate list of extensions to load"},{"name":"EXTINIT","display_value":"","required":"false","description":"Initialization strings for extensions"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"cmd","privileged":"false","size":847,"name":"Windows Shell, Reverse TCP (via jjs)","fullname":"payload/cmd/windows/jjs_reverse_tcp","authors":["conerpirate","bcoles \u003cbcoles@gmail.com\u003e"],"rank":"Normal","description":"Connect back and create a command shell via jjs","options":[{"name":"JJS_PATH","display_value":"jjs.exe","required":"true","description":"The path to the JJS executable"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELL","display_value":"cmd.exe","required":"true","description":"The shell to execute."}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":247,"name":"Windows Speech API - Say \"You Got Pwned!\"","fullname":"payload/windows/speak_pwned","authors":["Berend-Jan \"SkyLined\" Wever \u003cberendjanwever@gmail.com\u003e"],"rank":"Normal","description":"Causes the target to say \"You Got Pwned\" via the Windows Speech API","options":[]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"Windows Upload/Execute, Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/windows/upexec/bind_ipv6_tcp","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Listen for an IPv6 connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"Windows Upload/Execute, Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/upexec/bind_ipv6_tcp_uuid","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","OJ Reeves"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":201,"name":"Windows Upload/Execute, Bind TCP Stager (No NX or Win7)","fullname":"payload/windows/upexec/bind_nonx_tcp","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Listen for a connection (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":415,"name":"Windows Upload/Execute, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/upexec/bind_tcp_rc4","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Listen for a connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"Windows Upload/Execute, Bind TCP Stager (Windows x86)","fullname":"payload/windows/upexec/bind_tcp","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Listen for a connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"Windows Upload/Execute, Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/upexec/bind_tcp_uuid","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Listen for a connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":92,"name":"Windows Upload/Execute, Find Tag Ordinal Stager","fullname":"payload/windows/upexec/find_tag","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Use an established connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":359,"name":"Windows Upload/Execute, Hidden Bind Ipknock TCP Stager","fullname":"payload/windows/upexec/bind_hidden_ipknock_tcp","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":343,"name":"Windows Upload/Execute, Hidden Bind TCP Stager","fullname":"payload/windows/upexec/bind_hidden_tcp","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":282,"name":"Windows Upload/Execute, Reverse All-Port TCP Stager","fullname":"payload/windows/upexec/reverse_tcp_allports","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":93,"name":"Windows Upload/Execute, Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/windows/upexec/reverse_ord_tcp","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":296,"name":"Windows Upload/Execute, Reverse TCP Stager","fullname":"payload/windows/upexec/reverse_tcp","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":306,"name":"Windows Upload/Execute, Reverse TCP Stager (DNS)","fullname":"payload/windows/upexec/reverse_tcp_dns","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","RageLtMan"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":289,"name":"Windows Upload/Execute, Reverse TCP Stager (IPv6)","fullname":"payload/windows/upexec/reverse_ipv6_tcp","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Connect back to the attacker over IPv6","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":177,"name":"Windows Upload/Execute, Reverse TCP Stager (No NX or Win7)","fullname":"payload/windows/upexec/reverse_nonx_tcp","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Connect back to the attacker (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":423,"name":"Windows Upload/Execute, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/windows/upexec/reverse_tcp_rc4_dns","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":413,"name":"Windows Upload/Execute, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/upexec/reverse_tcp_rc4","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":329,"name":"Windows Upload/Execute, Reverse TCP Stager with UUID Support","fullname":"payload/windows/upexec/reverse_tcp_uuid","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":312,"name":"Windows Upload/Execute, Reverse UDP Stager with UUID Support","fullname":"payload/windows/upexec/reverse_udp","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":349,"name":"Windows Upload/Execute, Windows x86 Bind Named Pipe Stager","fullname":"payload/windows/upexec/bind_named_pipe","authors":["vlad902 \u003cvlad902@gmail.com\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","UserExistsError"],"rank":"Normal","description":"Uploads an executable and runs it (staged). Listen for a pipe connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PEXEC","display_value":"","required":"true","description":"Full path to the file to upload and execute"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"Windows shellcode stage, Bind IPv6 TCP Stager (Windows x86)","fullname":"payload/windows/custom/bind_ipv6_tcp","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Custom shellcode stage. Listen for an IPv6 connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"Windows shellcode stage, Bind IPv6 TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/custom/bind_ipv6_tcp_uuid","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Custom shellcode stage. Listen for an IPv6 connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":201,"name":"Windows shellcode stage, Bind TCP Stager (No NX or Win7)","fullname":"payload/windows/custom/bind_nonx_tcp","authors":["bwatters-r7","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Custom shellcode stage. Listen for a connection (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":415,"name":"Windows shellcode stage, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/custom/bind_tcp_rc4","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Custom shellcode stage. Listen for a connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":616,"name":"Windows shellcode stage, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/x64/custom/bind_tcp_rc4","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Custom shellcode stage. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":298,"name":"Windows shellcode stage, Bind TCP Stager (Windows x86)","fullname":"payload/windows/custom/bind_tcp","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Custom shellcode stage. Listen for a connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":524,"name":"Windows shellcode stage, Bind TCP Stager with UUID Support (Windows x64)","fullname":"payload/windows/x64/custom/bind_tcp_uuid","authors":["bwatters-r7","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Custom shellcode stage. Listen for a connection with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":331,"name":"Windows shellcode stage, Bind TCP Stager with UUID Support (Windows x86)","fullname":"payload/windows/custom/bind_tcp_uuid","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Custom shellcode stage. Listen for a connection with UUID Support (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":92,"name":"Windows shellcode stage, Find Tag Ordinal Stager","fullname":"payload/windows/custom/find_tag","authors":["bwatters-r7","skape \u003cmmiller@hick.org\u003e"],"rank":"Normal","description":"Custom shellcode stage. Use an established connection","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":359,"name":"Windows shellcode stage, Hidden Bind Ipknock TCP Stager","fullname":"payload/windows/custom/bind_hidden_ipknock_tcp","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Custom shellcode stage. Listen for a connection. First, the port will need to be knocked from the IP defined in KHOST. This IP will work as an authentication method (you can spoof it with tools like hping). After that you could get your shellcode from any IP. The socket will appear as \"closed,\" thus helping to hide the shellcode","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"KHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":343,"name":"Windows shellcode stage, Hidden Bind TCP Stager","fullname":"payload/windows/custom/bind_hidden_tcp","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Custom shellcode stage. Listen for a connection from a hidden port and spawn a command shell to the allowed host.","options":[{"name":"AHOST","display_value":"","required":"true","description":"IP address allowed"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":282,"name":"Windows shellcode stage, Reverse All-Port TCP Stager","fullname":"payload/windows/custom/reverse_tcp_allports","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Custom shellcode stage. Try to connect back to the attacker, on all possible ports (1-65535, slowly)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"1","required":"true","description":"The starting port number to connect back on"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":650,"name":"Windows shellcode stage, Reverse HTTP Stager Proxy","fullname":"payload/windows/custom/reverse_http_proxy_pstore","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Custom shellcode stage. Tunnel communication over HTTP","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":378,"name":"Windows shellcode stage, Reverse HTTPS Stager with Support for Custom Proxy","fullname":"payload/windows/custom/reverse_https_proxy","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","corelanc0d3r \u003cpeter.ve@corelan.be\u003e","amaloteaux \u003calex_maloteaux@metasploit.com\u003e"],"rank":"Normal","description":"Custom shellcode stage. Tunnel communication over HTTP using SSL with custom proxy support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"HttpProxyHost","display_value":"","required":"false","description":"An optional proxy server IP address or hostname"},{"name":"HttpProxyPass","display_value":"","required":"false","description":"An optional proxy server password Max parameter length: 63 characters"},{"name":"HttpProxyPort","display_value":"","required":"false","description":"An optional proxy server port"},{"name":"HttpProxyType","display_value":"HTTP","required":"true","description":"The type of HTTP proxy (Accepted: HTTP, SOCKS)"},{"name":"HttpProxyUser","display_value":"","required":"false","description":"An optional proxy server username Max parameter length: 63 characters"},{"name":"LHOST","display_value":"127.0.0.1","required":"false","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"false","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":353,"name":"Windows shellcode stage, Reverse Hop HTTP/HTTPS Stager","fullname":"payload/windows/custom/reverse_hop_http","authors":["bwatters-r7","scriptjunkie \u003cscriptjunkie@scriptjunkie.us\u003e","bannedit \u003cbannedit@metasploit.com\u003e","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Custom shellcode stage. Tunnel communication over an HTTP or HTTPS hop point. Note that you must first upload data/hop/hop.php to the PHP server you wish to use as a hop.","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"HOPURL","display_value":"http://example.com/hop.php","required":"true","description":"The full URL of the hop script"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":93,"name":"Windows shellcode stage, Reverse Ordinal TCP Stager (No NX or Win7)","fullname":"payload/windows/custom/reverse_ord_tcp","authors":["bwatters-r7","spoonm \u003cspoonm@no$email.com\u003e"],"rank":"Normal","description":"Custom shellcode stage. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":296,"name":"Windows shellcode stage, Reverse TCP Stager","fullname":"payload/windows/custom/reverse_tcp","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Custom shellcode stage. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":306,"name":"Windows shellcode stage, Reverse TCP Stager (DNS)","fullname":"payload/windows/custom/reverse_tcp_dns","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","RageLtMan"],"rank":"Normal","description":"Custom shellcode stage. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":289,"name":"Windows shellcode stage, Reverse TCP Stager (IPv6)","fullname":"payload/windows/custom/reverse_ipv6_tcp","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Custom shellcode stage. Connect back to the attacker over IPv6","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SCOPEID","display_value":"0","required":"false","description":"The IPv6 Scope ID, required for link-layer addresses"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":177,"name":"Windows shellcode stage, Reverse TCP Stager (No NX or Win7)","fullname":"payload/windows/custom/reverse_nonx_tcp","authors":["bwatters-r7","vlad902 \u003cvlad902@gmail.com\u003e"],"rank":"Normal","description":"Custom shellcode stage. Connect back to the attacker (No NX)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":423,"name":"Windows shellcode stage, Reverse TCP Stager (RC4 Stage Encryption DNS, Metasm)","fullname":"payload/windows/custom/reverse_tcp_rc4_dns","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Custom shellcode stage. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The DNS hostname to connect back to"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":413,"name":"Windows shellcode stage, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/custom/reverse_tcp_rc4","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","RageLtMan"],"rank":"Normal","description":"Custom shellcode stage. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":585,"name":"Windows shellcode stage, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/x64/custom/reverse_tcp_rc4","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","sf \u003cstephen_fewer@harmonysecurity.com\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Custom shellcode stage. Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":329,"name":"Windows shellcode stage, Reverse TCP Stager with UUID Support","fullname":"payload/windows/custom/reverse_tcp_uuid","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","OJ Reeves"],"rank":"Normal","description":"Custom shellcode stage. Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":490,"name":"Windows shellcode stage, Reverse TCP Stager with UUID Support (Windows x64)","fullname":"payload/windows/x64/custom/reverse_tcp_uuid","authors":["bwatters-r7","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Custom shellcode stage. Connect back to the attacker with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":312,"name":"Windows shellcode stage, Reverse UDP Stager with UUID Support","fullname":"payload/windows/custom/reverse_udp","authors":["bwatters-r7","RageLtMan \u003crageltman@sempervictus\u003e"],"rank":"Normal","description":"Custom shellcode stage. Connect back to the attacker with UUID Support","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":723,"name":"Windows shellcode stage, Windows Reverse HTTP Stager (winhttp)","fullname":"payload/windows/custom/reverse_winhttp","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Custom shellcode stage. Tunnel communication over HTTP (Windows winhttp)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":610,"name":"Windows shellcode stage, Windows Reverse HTTP Stager (wininet)","fullname":"payload/windows/custom/reverse_http","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Custom shellcode stage. Tunnel communication over HTTP (Windows wininet)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":1049,"name":"Windows shellcode stage, Windows Reverse HTTPS Stager (winhttp)","fullname":"payload/windows/custom/reverse_winhttps","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","Borja Merino \u003cbmerinofe@gmail.com\u003e"],"rank":"Normal","description":"Custom shellcode stage. Tunnel communication over HTTPS (Windows winhttp)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":628,"name":"Windows shellcode stage, Windows Reverse HTTPS Stager (wininet)","fullname":"payload/windows/custom/reverse_https","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e"],"rank":"Normal","description":"Custom shellcode stage. Tunnel communication over HTTPS (Windows wininet)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":481,"name":"Windows shellcode stage, Windows x64 Bind Named Pipe Stager","fullname":"payload/windows/x64/custom/bind_named_pipe","authors":["bwatters-r7","UserExistsError"],"rank":"Normal","description":"Custom shellcode stage. Listen for a pipe connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":483,"name":"Windows shellcode stage, Windows x64 Bind TCP Stager","fullname":"payload/windows/x64/custom/bind_tcp","authors":["bwatters-r7","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Custom shellcode stage. Listen for a connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":485,"name":"Windows shellcode stage, Windows x64 IPv6 Bind TCP Stager","fullname":"payload/windows/x64/custom/bind_ipv6_tcp","authors":["bwatters-r7","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Custom shellcode stage. Listen for an IPv6 connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":526,"name":"Windows shellcode stage, Windows x64 IPv6 Bind TCP Stager with UUID Support","fullname":"payload/windows/x64/custom/bind_ipv6_tcp_uuid","authors":["bwatters-r7","sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Custom shellcode stage. Listen for an IPv6 connection with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":980,"name":"Windows shellcode stage, Windows x64 Reverse HTTP Stager (winhttp)","fullname":"payload/windows/x64/custom/reverse_winhttp","authors":["bwatters-r7","OJ Reeves"],"rank":"Normal","description":"Custom shellcode stage. Tunnel communication over HTTP (Windows x64 winhttp)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":616,"name":"Windows shellcode stage, Windows x64 Reverse HTTP Stager (wininet)","fullname":"payload/windows/x64/custom/reverse_http","authors":["bwatters-r7","OJ Reeves"],"rank":"Normal","description":"Custom shellcode stage. Tunnel communication over HTTP (Windows x64 wininet)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":667,"name":"Windows shellcode stage, Windows x64 Reverse HTTP Stager (wininet)","fullname":"payload/windows/x64/custom/reverse_https","authors":["bwatters-r7","hdm \u003cx@hdm.io\u003e","agix","rwincey"],"rank":"Normal","description":"Custom shellcode stage. Tunnel communication over HTTP (Windows x64 wininet)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":964,"name":"Windows shellcode stage, Windows x64 Reverse HTTPS Stager (winhttp)","fullname":"payload/windows/x64/custom/reverse_winhttps","authors":["bwatters-r7","OJ Reeves"],"rank":"Normal","description":"Custom shellcode stage. Tunnel communication over HTTPS (Windows x64 winhttp)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":421,"name":"Windows shellcode stage, Windows x64 Reverse Named Pipe (SMB) Stager","fullname":"payload/windows/x64/custom/reverse_named_pipe","authors":["bwatters-r7","OJ Reeves"],"rank":"Normal","description":"Custom shellcode stage. Connect back to the attacker via a named pipe pivot","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PIPEHOST","display_value":".","required":"true","description":"Host of the pipe to connect to"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to listen on"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":449,"name":"Windows shellcode stage, Windows x64 Reverse TCP Stager","fullname":"payload/windows/x64/custom/reverse_tcp","authors":["bwatters-r7","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Custom shellcode stage. Connect back to the attacker (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":349,"name":"Windows shellcode stage, Windows x86 Bind Named Pipe Stager","fullname":"payload/windows/custom/bind_named_pipe","authors":["bwatters-r7","UserExistsError"],"rank":"Normal","description":"Custom shellcode stage. Listen for a pipe connection (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":289,"name":"Windows shellcode stage, Windows x86 Reverse Named Pipe (SMB) Stager","fullname":"payload/windows/custom/reverse_named_pipe","authors":["bwatters-r7","OJ Reeves"],"rank":"Normal","description":"Custom shellcode stage. Connect back to the attacker via a named pipe pivot","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"PIPEHOST","display_value":".","required":"true","description":"Host of the pipe to connect to"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to listen on"},{"name":"SHELLCODE_FILE","display_value":"","required":"false","description":"Shellcode bin to launch"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":505,"name":"Windows x64 Command Shell, Bind TCP Inline","fullname":"payload/windows/x64/shell_bind_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Listen for a connection and spawn a command shell (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":616,"name":"Windows x64 Command Shell, Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/x64/shell/bind_tcp_rc4","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Spawn a piped command shell (Windows x64) (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":524,"name":"Windows x64 Command Shell, Bind TCP Stager with UUID Support (Windows x64)","fullname":"payload/windows/x64/shell/bind_tcp_uuid","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Spawn a piped command shell (Windows x64) (staged). Listen for a connection with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":460,"name":"Windows x64 Command Shell, Reverse TCP Inline","fullname":"payload/windows/x64/shell_reverse_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Connect back to attacker and spawn a command shell (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":585,"name":"Windows x64 Command Shell, Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/x64/shell/reverse_tcp_rc4","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Spawn a piped command shell (Windows x64) (staged). Connect back to the attacker","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":490,"name":"Windows x64 Command Shell, Reverse TCP Stager with UUID Support (Windows x64)","fullname":"payload/windows/x64/shell/reverse_tcp_uuid","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Spawn a piped command shell (Windows x64) (staged). Connect back to the attacker with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":481,"name":"Windows x64 Command Shell, Windows x64 Bind Named Pipe Stager","fullname":"payload/windows/x64/shell/bind_named_pipe","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","UserExistsError"],"rank":"Normal","description":"Spawn a piped command shell (Windows x64) (staged). Listen for a pipe connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":483,"name":"Windows x64 Command Shell, Windows x64 Bind TCP Stager","fullname":"payload/windows/x64/shell/bind_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Spawn a piped command shell (Windows x64) (staged). Listen for a connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":485,"name":"Windows x64 Command Shell, Windows x64 IPv6 Bind TCP Stager","fullname":"payload/windows/x64/shell/bind_ipv6_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Spawn a piped command shell (Windows x64) (staged). Listen for an IPv6 connection (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":526,"name":"Windows x64 Command Shell, Windows x64 IPv6 Bind TCP Stager with UUID Support","fullname":"payload/windows/x64/shell/bind_ipv6_tcp_uuid","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Spawn a piped command shell (Windows x64) (staged). Listen for an IPv6 connection with UUID Support (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":449,"name":"Windows x64 Command Shell, Windows x64 Reverse TCP Stager","fullname":"payload/windows/x64/shell/reverse_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Spawn a piped command shell (Windows x64) (staged). Connect back to the attacker (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":268,"name":"Windows x64 Execute Command","fullname":"payload/windows/x64/exec","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Execute an arbitrary command (Windows x64)","options":[{"name":"CMD","display_value":"","required":"true","description":"The command string to execute"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":266,"name":"Windows x64 LoadLibrary Path","fullname":"payload/windows/x64/loadlibrary","authors":["scriptjunkie","sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Load an arbitrary x64 library path","options":[{"name":"DLL","display_value":"","required":"true","description":"The library path to load (UNC is OK)"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":425,"name":"Windows x64 Pingback, Reverse TCP Inline","fullname":"payload/windows/x64/pingback_reverse_tcp","authors":["bwatters-r7"],"rank":"Normal","description":"Connect back to attacker and report UUID (Windows x64)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":616,"name":"Windows x64 VNC Server (Reflective Injection), Bind TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/x64/vncinject/bind_tcp_rc4","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (Windows x64) (staged). Connect back to the attacker","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":524,"name":"Windows x64 VNC Server (Reflective Injection), Bind TCP Stager with UUID Support (Windows x64)","fullname":"payload/windows/x64/vncinject/bind_tcp_uuid","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (Windows x64) (staged). Listen for a connection with UUID Support (Windows x64)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":585,"name":"Windows x64 VNC Server (Reflective Injection), Reverse TCP Stager (RC4 Stage Encryption, Metasm)","fullname":"payload/windows/x64/vncinject/reverse_tcp_rc4","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","skape \u003cmmiller@hick.org\u003e","mihi","max3raza","RageLtMan"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (Windows x64) (staged). Connect back to the attacker","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RC4PASSWORD","display_value":"msf","required":"true","description":"Password to derive RC4 key from"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":490,"name":"Windows x64 VNC Server (Reflective Injection), Reverse TCP Stager with UUID Support (Windows x64)","fullname":"payload/windows/x64/vncinject/reverse_tcp_uuid","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (Windows x64) (staged). Connect back to the attacker with UUID Support (Windows x64)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":481,"name":"Windows x64 VNC Server (Reflective Injection), Windows x64 Bind Named Pipe Stager","fullname":"payload/windows/x64/vncinject/bind_named_pipe","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","UserExistsError"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (Windows x64) (staged). Listen for a pipe connection (Windows x64)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"445","required":"true","description":"SMB port"},{"name":"PIPENAME","display_value":"msf-pipe","required":"true","description":"Name of the pipe to connect to"},{"name":"RHOST","display_value":"","required":"false","description":"Host of the pipe to connect to"},{"name":"SMBDomain","display_value":".","required":"false","description":"The Windows domain to use for authentication"},{"name":"SMBPass","display_value":"","required":"false","description":"The password for the specified username"},{"name":"SMBUser","display_value":"","required":"false","description":"The username to authenticate as"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":483,"name":"Windows x64 VNC Server (Reflective Injection), Windows x64 Bind TCP Stager","fullname":"payload/windows/x64/vncinject/bind_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (Windows x64) (staged). Listen for a connection (Windows x64)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":485,"name":"Windows x64 VNC Server (Reflective Injection), Windows x64 IPv6 Bind TCP Stager","fullname":"payload/windows/x64/vncinject/bind_ipv6_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (Windows x64) (staged). Listen for an IPv6 connection (Windows x64)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":526,"name":"Windows x64 VNC Server (Reflective Injection), Windows x64 IPv6 Bind TCP Stager with UUID Support","fullname":"payload/windows/x64/vncinject/bind_ipv6_tcp_uuid","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (Windows x64) (staged). Listen for an IPv6 connection with UUID Support (Windows x64)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":943,"name":"Windows x64 VNC Server (Reflective Injection), Windows x64 Reverse HTTP Stager (winhttp)","fullname":"payload/windows/x64/vncinject/reverse_winhttp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (Windows x64) (staged). Tunnel communication over HTTP (Windows x64 winhttp)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":636,"name":"Windows x64 VNC Server (Reflective Injection), Windows x64 Reverse HTTP Stager (wininet)","fullname":"payload/windows/x64/vncinject/reverse_http","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (Windows x64) (staged). Tunnel communication over HTTP (Windows x64 wininet)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8080","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":656,"name":"Windows x64 VNC Server (Reflective Injection), Windows x64 Reverse HTTP Stager (wininet)","fullname":"payload/windows/x64/vncinject/reverse_https","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","hdm \u003cx@hdm.io\u003e","agix","rwincey"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (Windows x64) (staged). Tunnel communication over HTTP (Windows x64 wininet)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":893,"name":"Windows x64 VNC Server (Reflective Injection), Windows x64 Reverse HTTPS Stager (winhttp)","fullname":"payload/windows/x64/vncinject/reverse_winhttps","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e","OJ Reeves"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (Windows x64) (staged). Tunnel communication over HTTPS (Windows x64 winhttp)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The local listener hostname"},{"name":"LPORT","display_value":"8443","required":"true","description":"The local listener port"},{"name":"LURI","display_value":"","required":"false","description":"The HTTP Path"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x64","privileged":"false","size":449,"name":"Windows x64 VNC Server (Reflective Injection), Windows x64 Reverse TCP Stager","fullname":"payload/windows/x64/vncinject/reverse_tcp","authors":["sf \u003cstephen_fewer@harmonysecurity.com\u003e"],"rank":"Normal","description":"Inject a VNC Dll via a reflective loader (Windows x64) (staged). Connect back to the attacker (Windows x64)","options":[{"name":"AUTOVNC","display_value":"true","required":"true","description":"Automatically launch VNC viewer if present"},{"name":"DisableCourtesyShell","display_value":"true","required":"false","description":"Disables the Metasploit Courtesy shell"},{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"VNCHOST","display_value":"127.0.0.1","required":"true","description":"The local host to use for the VNC proxy"},{"name":"VNCPORT","display_value":"5900","required":"true","description":"The local port to use for the VNC proxy"},{"name":"ViewOnly","display_value":"true","required":"false","description":"Runs the viewer in view mode"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":314,"name":"Windows x86 Pingback, Bind TCP Inline","fullname":"payload/windows/pingback_bind_tcp","authors":["bwatters-r7"],"rank":"Normal","description":"Open a socket and report UUID when a connection is received (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Windows","arch":"x86","privileged":"false","size":307,"name":"Windows x86 Pingback, Reverse TCP Inline","fullname":"payload/windows/pingback_reverse_tcp","authors":["bwatters-r7"],"rank":"Normal","description":"Connect back to attacker and report UUID (Windows x86)","options":[{"name":"EXITFUNC","display_value":"process","required":"true","description":"Exit technique (Accepted: '', seh, thread, process, none)"},{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m{"platform":"Mainframe","arch":"cmd","privileged":"false","size":10712,"name":"Z/OS (MVS) Command Shell, Bind TCP","fullname":"payload/cmd/mainframe/bind_shell_jcl","authors":["Bigendian Smalls"],"rank":"Normal","description":"Provide JCL which creates a bind shell This implmentation does not include ebcdic character translation, so a client with translation capabilities is required. MSF handles this automatically.","options":[{"name":"ACTNUM","display_value":"MSFUSER-ACCTING-INFO","required":"true","description":"Accounting info for JCL JOB card"},{"name":"JCLASS","display_value":"A","required":"true","description":"Job Class for JCL JOB card"},{"name":"LHOST","display_value":"0.0.0.0","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"32700","required":"true","description":"The listen port"},{"name":"MSGCLASS","display_value":"Z","required":"true","description":"Message Class for JCL JOB card"},{"name":"MSGLEVEL","display_value":"(0,0)","required":"true","description":"Message Level for JCL JOB card"},{"name":"NOTIFY","display_value":"","required":"false","description":"Notify User for JCL JOB card"},{"name":"PGMNAME","display_value":"programmer name","required":"true","description":"Programmer name for JCL JOB card"},{"name":"RHOST","display_value":"","required":"false","description":"The target address"}]}
[0m{"platform":"Mainframe","arch":"cmd","privileged":"false","size":8993,"name":"Z/OS (MVS) Command Shell, Reverse TCP","fullname":"payload/cmd/mainframe/reverse_shell_jcl","authors":["Bigendian Smalls"],"rank":"Normal","description":"Provide JCL which creates a reverse shell This implementation does not include ebcdic character translation, so a client with translation capabilities is required. MSF handles this automatically.","options":[{"name":"ACTNUM","display_value":"MSFUSER-ACCTING-INFO","required":"true","description":"Accounting info for JCL JOB card"},{"name":"JCLASS","display_value":"A","required":"true","description":"Job Class for JCL JOB card"},{"name":"LHOST","display_value":"0.0.0.0","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"},{"name":"MSGCLASS","display_value":"Z","required":"true","description":"Message Class for JCL JOB card"},{"name":"MSGLEVEL","display_value":"(0,0)","required":"true","description":"Message Level for JCL JOB card"},{"name":"NOTIFY","display_value":"","required":"false","description":"Notify User for JCL JOB card"},{"name":"PGMNAME","display_value":"programmer name","required":"true","description":"Programmer name for JCL JOB card"}]}
[0m{"platform":"Mainframe","arch":"zarch","privileged":"false","size":339,"name":"Z/OS (MVS) Command Shell, Reverse TCP Inline","fullname":"payload/mainframe/shell_reverse_tcp","authors":["Bigendian Smalls"],"rank":"Normal","description":"Listen for a connection and spawn a command shell. This implementation does not include ebcdic character translation, so a client with translation capabilities is required. MSF handles this automatically.","options":[{"name":"LHOST","display_value":"","required":"true","description":"The listen address (an interface may be specified)"},{"name":"LPORT","display_value":"4444","required":"true","description":"The listen port"}]}
[0m